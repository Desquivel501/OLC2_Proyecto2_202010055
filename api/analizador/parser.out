Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ini
Rule 1     ini -> intrucciones_global
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> declaracion_arreglo PUNTOCOMA
Rule 5     instruccion -> declaracion_struct PUNTOCOMA
Rule 6     instruccion -> asignacion PUNTOCOMA
Rule 7     instruccion -> if
Rule 8     instruccion -> match
Rule 9     instruccion -> while
Rule 10    instruccion -> loop
Rule 11    instruccion -> for
Rule 12    instruccion -> break PUNTOCOMA
Rule 13    instruccion -> continue PUNTOCOMA
Rule 14    instruccion -> return PUNTOCOMA
Rule 15    instruccion -> print PUNTOCOMA
Rule 16    instruccion -> llamada PUNTOCOMA
Rule 17    instruccion -> mod_struct PUNTOCOMA
Rule 18    instruccion -> mod_arreglo PUNTOCOMA
Rule 19    instruccion -> declaracion_vector PUNTOCOMA
Rule 20    instruccion -> vec_push PUNTOCOMA
Rule 21    instruccion -> vec_insert PUNTOCOMA
Rule 22    instruccion -> vec_remove PUNTOCOMA
Rule 23    instruccion -> acceso_mod_exp PUNTOCOMA
Rule 24    statement -> error PUNTOCOMA
Rule 25    instruccion_no_pt -> if
Rule 26    instruccion_no_pt -> match
Rule 27    instruccion_no_pt -> print
Rule 28    instruccion_no_pt -> while
Rule 29    instruccion_no_pt -> loop
Rule 30    instruccion_no_pt -> break
Rule 31    instruccion_no_pt -> continue
Rule 32    instruccion_no_pt -> return
Rule 33    instruccion_no_pt -> llamada
Rule 34    instruccion_no_pt -> mod_struct
Rule 35    instruccion_no_pt -> asignacion
Rule 36    instruccion_no_pt -> for
Rule 37    intrucciones_global -> intrucciones_global ins_global
Rule 38    intrucciones_global -> ins_global
Rule 39    ins_global -> funcion
Rule 40    ins_global -> struct
Rule 41    ins_global -> mod
Rule 42    intrucciones_global -> error LLV_D
Rule 43    mod -> MOD ID LLV_I instrucciones_mod LLV_D
Rule 44    instrucciones_mod -> instrucciones_mod instruccion_mod
Rule 45    instrucciones_mod -> instruccion_mod
Rule 46    instruccion_mod -> struct
Rule 47    instruccion_mod -> funcion
Rule 48    instruccion_mod -> mod
Rule 49    instruccion_mod -> PUB struct
Rule 50    instruccion_mod -> PUB funcion
Rule 51    instruccion_mod -> PUB mod
Rule 52    acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada
Rule 53    acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID
Rule 54    acceso_mod -> ID
Rule 55    print -> PRINT NOT PAR_I expresion PAR_D
Rule 56    print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D
Rule 57    exp_list -> exp_list COMA expresion
Rule 58    exp_list -> expresion
Rule 59    funcion -> FN ID PAR_I lista_param PAR_D statement
Rule 60    funcion -> FN ID PAR_I PAR_D statement
Rule 61    funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
Rule 62    funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement
Rule 63    lista_param -> lista_param COMA parametro
Rule 64    lista_param -> parametro
Rule 65    parametro -> ID D_PUNTO tipo_funcion
Rule 66    parametro -> ID D_PUNTO AMP MUT tipo_funcion
Rule 67    parametro -> MUT ID D_PUNTO tipo_funcion
Rule 68    parametro -> MUT ID D_PUNTO AMP tipo_funcion
Rule 69    return -> RETURN expresion
Rule 70    return -> RETURN
Rule 71    llamada -> ID PAR_I PAR_D
Rule 72    llamada -> ID PAR_I exp_list_llamada PAR_D
Rule 73    exp_list_llamada -> exp_list_llamada COMA exp_llamada
Rule 74    exp_list_llamada -> exp_llamada
Rule 75    exp_llamada -> AMP MUT expresion
Rule 76    exp_llamada -> AMP expresion
Rule 77    exp_llamada -> expresion
Rule 78    if -> IF expresion statement
Rule 79    if -> IF expresion statement else
Rule 80    else -> ELSE statement
Rule 81    else -> ELSE if
Rule 82    statement -> LLV_I instrucciones LLV_D
Rule 83    statement -> LLV_I LLV_D
Rule 84    statement -> error LLV_D
Rule 85    exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else
Rule 86    exp_if -> IF expresion LLV_I expresion LLV_D exp_else
Rule 87    exp_else -> ELSE LLV_I instrucciones expresion LLV_D
Rule 88    exp_else -> ELSE LLV_I expresion LLV_D
Rule 89    exp_else -> ELSE exp_if
Rule 90    match -> MATCH expresion LLV_I case_list LLV_D
Rule 91    match -> MATCH expresion LLV_I case_list default LLV_D
Rule 92    case_list -> case_list case
Rule 93    case_list -> case
Rule 94    case -> exp_list_c IGUAL MAYOR statement
Rule 95    case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA
Rule 96    default -> GUION_B IGUAL MAYOR statement
Rule 97    default -> GUION_B IGUAL MAYOR instruccion_no_pt COMA
Rule 98    exp_list_c -> exp_list_c BARRA expresion
Rule 99    exp_list_c -> expresion
Rule 100   match_exp -> MATCH expresion LLV_I case_list_exp LLV_D
Rule 101   match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D
Rule 102   case_list_exp -> case_list_exp case_exp
Rule 103   case_list_exp -> case_exp
Rule 104   case_exp -> exp_list_c IGUAL MAYOR expresion
Rule 105   case_exp -> exp_list_c IGUAL MAYOR expresion COMA
Rule 106   default_exp -> GUION_B IGUAL MAYOR expresion COMA
Rule 107   while -> WHILE expresion statement
Rule 108   break -> BREAK
Rule 109   break -> BREAK expresion
Rule 110   continue -> CONTINUE
Rule 111   loop -> LOOP statement
Rule 112   loop_exp -> LOOP statement
Rule 113   for -> FOR ID IN rango statement
Rule 114   for -> FOR ID IN expresion statement
Rule 115   rango -> expresion PUNTO PUNTO expresion
Rule 116   asignacion -> LET ID IGUAL expresion
Rule 117   asignacion -> LET MUT ID IGUAL expresion
Rule 118   asignacion -> LET ID D_PUNTO tipo IGUAL expresion
Rule 119   asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion
Rule 120   asignacion -> ID IGUAL expresion
Rule 121   tipo -> INT
Rule 122   tipo -> FLOAT
Rule 123   tipo -> BOOL
Rule 124   tipo -> AMP STR
Rule 125   tipo -> STRING
Rule 126   tipo -> CHAR
Rule 127   tipo -> VOID
Rule 128   tipo -> acceso_mod
Rule 129   tipo -> USIZE
Rule 130   tipo_funcion -> INT
Rule 131   tipo_funcion -> FLOAT
Rule 132   tipo_funcion -> BOOL
Rule 133   tipo_funcion -> AMP STR
Rule 134   tipo_funcion -> STRING
Rule 135   tipo_funcion -> CHAR
Rule 136   tipo_funcion -> VOID
Rule 137   tipo_funcion -> ID
Rule 138   tipo_funcion -> VEC_U MENOR tipo MAYOR
Rule 139   tipo_funcion -> dimensiones_arreglo_tipo
Rule 140   tipo_funcion -> dimensiones_un_tipo
Rule 141   tipo_funcion -> USIZE
Rule 142   dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
Rule 143   dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D
Rule 144   dimensiones_un_tipo -> COR_I tipo COR_D
Rule 145   struct -> STRUCT ID LLV_I lista_campos LLV_D
Rule 146   lista_campos -> lista_campos COMA campo
Rule 147   lista_campos -> campo
Rule 148   campo -> ID D_PUNTO tipo_funcion
Rule 149   campo -> PUB ID D_PUNTO tipo_funcion
Rule 150   declaracion_struct -> LET ID IGUAL instancia
Rule 151   declaracion_struct -> LET MUT ID IGUAL instancia
Rule 152   instancia -> ID LLV_I lista_atributo LLV_D
Rule 153   lista_atributo -> lista_atributo COMA ID D_PUNTO expresion
Rule 154   lista_atributo -> ID D_PUNTO expresion
Rule 155   mod_struct -> acceso_struct IGUAL expresion
Rule 156   acceso_struct_exp -> acceso_struct
Rule 157   acceso_struct -> acceso_struct PUNTO expresion
Rule 158   acceso_struct -> expresion PUNTO expresion
Rule 159   declaracion_arreglo -> LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
Rule 160   declaracion_arreglo -> LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
Rule 161   declaracion_arreglo -> LET MUT ID IGUAL datos_arreglo
Rule 162   declaracion_arreglo -> LET ID IGUAL datos_arreglo
Rule 163   dimensiones_arreglo -> COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D
Rule 164   dimensiones_arreglo -> COR_I tipo PUNTOCOMA expresion COR_D
Rule 165   datos_arreglo -> COR_I exp_list COR_D
Rule 166   datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D
Rule 167   acceso_arreglo -> ID dimensiones
Rule 168   dimensiones -> dimensiones dimension
Rule 169   dimensiones -> dimension
Rule 170   dimension -> COR_I expresion COR_D
Rule 171   mod_arreglo -> ID dimensiones IGUAL expresion
Rule 172   declaracion_vector -> LET ID IGUAL vec_dato
Rule 173   declaracion_vector -> LET MUT ID IGUAL vec_dato
Rule 174   declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
Rule 175   declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
Rule 176   declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
Rule 177   declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
Rule 178   declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
Rule 179   declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
Rule 180   tipo_modulo -> tipo_mod D_PUNTO D_PUNTO ID
Rule 181   tipo_mod -> tipo_mod D_PUNTO D_PUNTO ID
Rule 182   tipo_mod -> ID
Rule 183   v_tipo -> INT
Rule 184   v_tipo -> FLOAT
Rule 185   v_tipo -> BOOL
Rule 186   v_tipo -> AMP STR
Rule 187   v_tipo -> STRING
Rule 188   v_tipo -> CHAR
Rule 189   v_tipo -> VOID
Rule 190   v_tipo -> ID
Rule 191   v_tipo -> VEC_U MENOR tipo MAYOR
Rule 192   v_tipo -> USIZE
Rule 193   v_tipo -> tipo_modulo
Rule 194   vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
Rule 195   vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
Rule 196   vec_dato -> VEC_L NOT COR_I exp_list COR_D
Rule 197   vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
Rule 198   vec_push -> ID PUNTO PUSH PAR_I expresion PAR_D
Rule 199   vec_insert -> ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
Rule 200   vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D
Rule 201   vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
Rule 202   vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D
Rule 203   length -> expresion PUNTO LEN PAR_I PAR_D
Rule 204   length -> ID PUNTO LEN PAR_I PAR_D
Rule 205   clone -> expresion PUNTO CLONE PAR_I PAR_D
Rule 206   chars -> expresion PUNTO CHARS PAR_I PAR_D
Rule 207   expresion -> ID
Rule 208   expresion -> expresion MAS expresion
Rule 209   expresion -> expresion MENOS expresion
Rule 210   expresion -> expresion MULTI expresion
Rule 211   expresion -> expresion DIV expresion
Rule 212   expresion -> expresion MODULO expresion
Rule 213   expresion -> MENOS expresion
Rule 214   expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
Rule 215   expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
Rule 216   expresion -> expresion PUNTO ABS PAR_I PAR_D
Rule 217   expresion -> expresion PUNTO SQRT PAR_I PAR_D
Rule 218   expresion -> expresion MAYOR expresion
Rule 219   expresion -> expresion MENOR expresion
Rule 220   expresion -> expresion MAYOR_I expresion
Rule 221   expresion -> expresion MENOR_I expresion
Rule 222   expresion -> expresion D_IGUAL expresion
Rule 223   expresion -> expresion NO_IGUAL expresion
Rule 224   expresion -> expresion OR expresion
Rule 225   expresion -> expresion AND expresion
Rule 226   expresion -> NOT expresion
Rule 227   expresion -> PAR_I expresion PAR_D
Rule 228   expresion -> ENTERO
Rule 229   expresion -> DECIMAL
Rule 230   expresion -> TRUE
Rule 231   expresion -> FALSE
Rule 232   expresion -> CHAR_S
Rule 233   expresion -> CADENA
Rule 234   expresion -> expresion PUNTO TO_STRING PAR_I PAR_D
Rule 235   expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D
Rule 236   expresion -> expresion AS tipo
Rule 237   expresion -> exp_if
Rule 238   expresion -> match_exp
Rule 239   expresion -> loop_exp
Rule 240   expresion -> llamada
Rule 241   expresion -> acceso_struct_exp
Rule 242   expresion -> acceso_arreglo
Rule 243   expresion -> chars
Rule 244   expresion -> datos_arreglo
Rule 245   expresion -> vec_dato
Rule 246   expresion -> vec_remove
Rule 247   expresion -> vec_contains
Rule 248   expresion -> vec_get_capacity
Rule 249   expresion -> length
Rule 250   expresion -> clone
Rule 251   expresion -> vec_capacity
Rule 252   expresion -> vec_new
Rule 253   expresion -> acceso_mod_exp

Terminals, with rules where they appear

ABS                  : 216
AMP                  : 66 68 75 76 124 133 186 201
AND                  : 225
AS                   : 236
BARRA                : 98
BOOL                 : 123 132 185
BREAK                : 108 109
CADENA               : 56 233
CAPACITY             : 202
CHAR                 : 126 135 188
CHARS                : 206
CHAR_S               : 232
CLONE                : 205
COMA                 : 56 57 63 73 95 97 105 106 146 153 199 214 215
CONTAINS             : 201
CONTINUE             : 110
COR_D                : 142 143 144 163 164 165 166 170 196 197
COR_I                : 142 143 144 163 164 165 166 170 196 197
DECIMAL              : 229
DIV                  : 211
D_IGUAL              : 222
D_PUNTO              : 52 52 53 53 65 66 67 68 118 119 148 149 153 154 159 160 174 175 176 177 178 179 180 180 181 181 194 194 195 195 214 214 215 215
ELSE                 : 80 81 87 88 89
ENTERO               : 228
FALSE                : 231
FLOAT                : 122 131 184 215
FN                   : 59 60 61 62
FOR                  : 113 114
GUION_B              : 96 97 106
ID                   : 43 53 54 59 60 61 62 65 66 67 68 71 72 113 114 116 117 118 119 120 137 145 148 149 150 151 152 153 154 159 160 161 162 167 171 172 173 174 175 176 177 178 179 180 181 182 190 198 199 200 202 204 207
IF                   : 78 79 85 86
IGUAL                : 94 95 96 97 104 105 106 116 117 118 119 120 150 151 155 159 160 161 162 171 172 173 174 175 176 177 178 179
IN                   : 113 114
INSERT               : 199
INT                  : 121 130 183 214
LEN                  : 203 204
LET                  : 116 117 118 119 150 151 159 160 161 162 172 173 174 175 176 177 178 179
LLV_D                : 42 43 82 83 84 85 86 87 88 90 91 100 101 145 152
LLV_I                : 43 82 83 85 86 87 88 90 91 100 101 145 152
LOOP                 : 111 112
MAS                  : 208
MATCH                : 90 91 100 101
MAYOR                : 61 62 94 95 96 97 104 105 106 138 174 175 176 177 178 179 191 218
MAYOR_I              : 220
MENOR                : 138 174 175 176 177 178 179 191 219
MENOR_I              : 221
MENOS                : 61 62 209 213
MOD                  : 43
MODULO               : 212
MULTI                : 210
MUT                  : 66 67 68 75 117 119 151 160 161 173 175 177 179
NEW                  : 194
NOT                  : 55 56 196 197 226
NO_IGUAL             : 223
OR                   : 224
PAR_D                : 55 56 59 60 61 62 71 72 194 195 198 199 200 201 202 203 204 205 206 214 215 216 217 227 234 235
PAR_I                : 55 56 59 60 61 62 71 72 194 195 198 199 200 201 202 203 204 205 206 214 215 216 217 227 234 235
POW_FLOAT            : 215
POW_INT              : 214
PRINT                : 55 56
PUB                  : 49 50 51 149
PUNTO                : 115 115 157 158 198 199 200 201 202 203 204 205 206 216 217 234 235
PUNTOCOMA            : 4 5 6 12 13 14 15 16 17 18 19 20 21 22 23 24 142 143 163 164 166 197
PUSH                 : 198
REMOVE               : 200
RETURN               : 69 70
SQRT                 : 217
STR                  : 124 133 186
STRING               : 125 134 187
STRUCT               : 145
TO_OWNED             : 235
TO_STRING            : 234
TRUE                 : 230
USIZE                : 129 141 192
VEC_L                : 196 197
VEC_U                : 138 174 175 176 177 178 179 191 194 195
VOID                 : 127 136 189
WHILE                : 107
WITH_CAPACITY        : 195
error                : 24 42 84

Nonterminals, with rules where they appear

acceso_arreglo       : 242
acceso_mod           : 52 53 128
acceso_mod_exp       : 23 253
acceso_struct        : 155 156 157
acceso_struct_exp    : 241
asignacion           : 6 35
break                : 12 30
campo                : 146 147
case                 : 92 93
case_exp             : 102 103
case_list            : 90 91 92
case_list_exp        : 100 101 102
chars                : 243
clone                : 250
continue             : 13 31
datos_arreglo        : 159 160 161 162 244
declaracion_arreglo  : 4
declaracion_struct   : 5
declaracion_vector   : 19
default              : 91
default_exp          : 101
dimension            : 168 169
dimensiones          : 167 168 171
dimensiones_arreglo  : 159 160 163
dimensiones_arreglo_tipo : 139 142
dimensiones_un_tipo  : 140
else                 : 79
exp_else             : 85 86
exp_if               : 89 237
exp_list             : 56 57 165 196
exp_list_c           : 94 95 98 104 105
exp_list_llamada     : 72 73
exp_llamada          : 73 74
expresion            : 55 57 58 69 75 76 77 78 79 85 85 86 86 87 88 90 91 98 99 100 101 104 105 106 107 109 114 115 115 116 117 118 119 120 142 143 153 154 155 157 158 158 163 164 166 166 170 171 195 197 197 198 199 199 200 201 201 203 205 206 208 208 209 209 210 210 211 211 212 212 213 214 214 215 215 216 217 218 218 219 219 220 220 221 221 222 222 223 223 224 224 225 225 226 227 234 235 236
for                  : 11 36
funcion              : 39 47 50
if                   : 7 25 81
ini                  : 0
ins_global           : 37 38
instancia            : 150 151
instruccion          : 2 3
instruccion_mod      : 44 45
instruccion_no_pt    : 95 97
instrucciones        : 2 82 85 87
instrucciones_mod    : 43 44
intrucciones_global  : 1 37
length               : 249
lista_atributo       : 152 153
lista_campos         : 145 146
lista_param          : 59 61 63
llamada              : 16 33 52 240
loop                 : 10 29
loop_exp             : 239
match                : 8 26
match_exp            : 238
mod                  : 41 48 51
mod_arreglo          : 18
mod_struct           : 17 34
parametro            : 63 64
print                : 15 27
rango                : 113
return               : 14 32
statement            : 59 60 61 62 78 79 80 94 96 107 111 112 113 114
struct               : 40 46 49
tipo                 : 118 119 138 143 144 164 191 236
tipo_funcion         : 61 62 65 66 67 68 148 149
tipo_mod             : 180 181
tipo_modulo          : 193
v_tipo               : 174 175 176 177 178 179
vec_capacity         : 178 179 251
vec_contains         : 247
vec_dato             : 172 173 174 175 245
vec_get_capacity     : 248
vec_insert           : 21
vec_new              : 176 177 252
vec_push             : 20
vec_remove           : 22 246
while                : 9 28

Parsing method: LALR

state 0

    (0) S' -> . ini
    (1) ini -> . intrucciones_global
    (37) intrucciones_global -> . intrucciones_global ins_global
    (38) intrucciones_global -> . ins_global
    (42) intrucciones_global -> . error LLV_D
    (39) ins_global -> . funcion
    (40) ins_global -> . struct
    (41) ins_global -> . mod
    (59) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (60) funcion -> . FN ID PAR_I PAR_D statement
    (61) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement
    (145) struct -> . STRUCT ID LLV_I lista_campos LLV_D
    (43) mod -> . MOD ID LLV_I instrucciones_mod LLV_D

    error           shift and go to state 4
    FN              shift and go to state 8
    STRUCT          shift and go to state 9
    MOD             shift and go to state 10

    ini                            shift and go to state 1
    intrucciones_global            shift and go to state 2
    ins_global                     shift and go to state 3
    funcion                        shift and go to state 5
    struct                         shift and go to state 6
    mod                            shift and go to state 7

state 1

    (0) S' -> ini .



state 2

    (1) ini -> intrucciones_global .
    (37) intrucciones_global -> intrucciones_global . ins_global
    (39) ins_global -> . funcion
    (40) ins_global -> . struct
    (41) ins_global -> . mod
    (59) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (60) funcion -> . FN ID PAR_I PAR_D statement
    (61) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement
    (145) struct -> . STRUCT ID LLV_I lista_campos LLV_D
    (43) mod -> . MOD ID LLV_I instrucciones_mod LLV_D

    $end            reduce using rule 1 (ini -> intrucciones_global .)
    FN              shift and go to state 8
    STRUCT          shift and go to state 9
    MOD             shift and go to state 10

    ins_global                     shift and go to state 11
    funcion                        shift and go to state 5
    struct                         shift and go to state 6
    mod                            shift and go to state 7

state 3

    (38) intrucciones_global -> ins_global .

    FN              reduce using rule 38 (intrucciones_global -> ins_global .)
    STRUCT          reduce using rule 38 (intrucciones_global -> ins_global .)
    MOD             reduce using rule 38 (intrucciones_global -> ins_global .)
    $end            reduce using rule 38 (intrucciones_global -> ins_global .)


state 4

    (42) intrucciones_global -> error . LLV_D

    LLV_D           shift and go to state 12


state 5

    (39) ins_global -> funcion .

    FN              reduce using rule 39 (ins_global -> funcion .)
    STRUCT          reduce using rule 39 (ins_global -> funcion .)
    MOD             reduce using rule 39 (ins_global -> funcion .)
    $end            reduce using rule 39 (ins_global -> funcion .)


state 6

    (40) ins_global -> struct .

    FN              reduce using rule 40 (ins_global -> struct .)
    STRUCT          reduce using rule 40 (ins_global -> struct .)
    MOD             reduce using rule 40 (ins_global -> struct .)
    $end            reduce using rule 40 (ins_global -> struct .)


state 7

    (41) ins_global -> mod .

    FN              reduce using rule 41 (ins_global -> mod .)
    STRUCT          reduce using rule 41 (ins_global -> mod .)
    MOD             reduce using rule 41 (ins_global -> mod .)
    $end            reduce using rule 41 (ins_global -> mod .)


state 8

    (59) funcion -> FN . ID PAR_I lista_param PAR_D statement
    (60) funcion -> FN . ID PAR_I PAR_D statement
    (61) funcion -> FN . ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> FN . ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement

    ID              shift and go to state 13


state 9

    (145) struct -> STRUCT . ID LLV_I lista_campos LLV_D

    ID              shift and go to state 14


state 10

    (43) mod -> MOD . ID LLV_I instrucciones_mod LLV_D

    ID              shift and go to state 15


state 11

    (37) intrucciones_global -> intrucciones_global ins_global .

    FN              reduce using rule 37 (intrucciones_global -> intrucciones_global ins_global .)
    STRUCT          reduce using rule 37 (intrucciones_global -> intrucciones_global ins_global .)
    MOD             reduce using rule 37 (intrucciones_global -> intrucciones_global ins_global .)
    $end            reduce using rule 37 (intrucciones_global -> intrucciones_global ins_global .)


state 12

    (42) intrucciones_global -> error LLV_D .

    FN              reduce using rule 42 (intrucciones_global -> error LLV_D .)
    STRUCT          reduce using rule 42 (intrucciones_global -> error LLV_D .)
    MOD             reduce using rule 42 (intrucciones_global -> error LLV_D .)
    $end            reduce using rule 42 (intrucciones_global -> error LLV_D .)


state 13

    (59) funcion -> FN ID . PAR_I lista_param PAR_D statement
    (60) funcion -> FN ID . PAR_I PAR_D statement
    (61) funcion -> FN ID . PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> FN ID . PAR_I PAR_D MENOS MAYOR tipo_funcion statement

    PAR_I           shift and go to state 16


state 14

    (145) struct -> STRUCT ID . LLV_I lista_campos LLV_D

    LLV_I           shift and go to state 17


state 15

    (43) mod -> MOD ID . LLV_I instrucciones_mod LLV_D

    LLV_I           shift and go to state 18


state 16

    (59) funcion -> FN ID PAR_I . lista_param PAR_D statement
    (60) funcion -> FN ID PAR_I . PAR_D statement
    (61) funcion -> FN ID PAR_I . lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> FN ID PAR_I . PAR_D MENOS MAYOR tipo_funcion statement
    (63) lista_param -> . lista_param COMA parametro
    (64) lista_param -> . parametro
    (65) parametro -> . ID D_PUNTO tipo_funcion
    (66) parametro -> . ID D_PUNTO AMP MUT tipo_funcion
    (67) parametro -> . MUT ID D_PUNTO tipo_funcion
    (68) parametro -> . MUT ID D_PUNTO AMP tipo_funcion

    PAR_D           shift and go to state 21
    ID              shift and go to state 19
    MUT             shift and go to state 23

    lista_param                    shift and go to state 20
    parametro                      shift and go to state 22

state 17

    (145) struct -> STRUCT ID LLV_I . lista_campos LLV_D
    (146) lista_campos -> . lista_campos COMA campo
    (147) lista_campos -> . campo
    (148) campo -> . ID D_PUNTO tipo_funcion
    (149) campo -> . PUB ID D_PUNTO tipo_funcion

    ID              shift and go to state 24
    PUB             shift and go to state 27

    lista_campos                   shift and go to state 25
    campo                          shift and go to state 26

state 18

    (43) mod -> MOD ID LLV_I . instrucciones_mod LLV_D
    (44) instrucciones_mod -> . instrucciones_mod instruccion_mod
    (45) instrucciones_mod -> . instruccion_mod
    (46) instruccion_mod -> . struct
    (47) instruccion_mod -> . funcion
    (48) instruccion_mod -> . mod
    (49) instruccion_mod -> . PUB struct
    (50) instruccion_mod -> . PUB funcion
    (51) instruccion_mod -> . PUB mod
    (145) struct -> . STRUCT ID LLV_I lista_campos LLV_D
    (59) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (60) funcion -> . FN ID PAR_I PAR_D statement
    (61) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement
    (43) mod -> . MOD ID LLV_I instrucciones_mod LLV_D

    PUB             shift and go to state 33
    STRUCT          shift and go to state 9
    FN              shift and go to state 8
    MOD             shift and go to state 10

    instrucciones_mod              shift and go to state 28
    instruccion_mod                shift and go to state 29
    struct                         shift and go to state 30
    funcion                        shift and go to state 31
    mod                            shift and go to state 32

state 19

    (65) parametro -> ID . D_PUNTO tipo_funcion
    (66) parametro -> ID . D_PUNTO AMP MUT tipo_funcion

    D_PUNTO         shift and go to state 34


state 20

    (59) funcion -> FN ID PAR_I lista_param . PAR_D statement
    (61) funcion -> FN ID PAR_I lista_param . PAR_D MENOS MAYOR tipo_funcion statement
    (63) lista_param -> lista_param . COMA parametro

    PAR_D           shift and go to state 35
    COMA            shift and go to state 36


state 21

    (60) funcion -> FN ID PAR_I PAR_D . statement
    (62) funcion -> FN ID PAR_I PAR_D . MENOS MAYOR tipo_funcion statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    MENOS           shift and go to state 38
    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 37

state 22

    (64) lista_param -> parametro .

    PAR_D           reduce using rule 64 (lista_param -> parametro .)
    COMA            reduce using rule 64 (lista_param -> parametro .)


state 23

    (67) parametro -> MUT . ID D_PUNTO tipo_funcion
    (68) parametro -> MUT . ID D_PUNTO AMP tipo_funcion

    ID              shift and go to state 41


state 24

    (148) campo -> ID . D_PUNTO tipo_funcion

    D_PUNTO         shift and go to state 42


state 25

    (145) struct -> STRUCT ID LLV_I lista_campos . LLV_D
    (146) lista_campos -> lista_campos . COMA campo

    LLV_D           shift and go to state 43
    COMA            shift and go to state 44


state 26

    (147) lista_campos -> campo .

    LLV_D           reduce using rule 147 (lista_campos -> campo .)
    COMA            reduce using rule 147 (lista_campos -> campo .)


state 27

    (149) campo -> PUB . ID D_PUNTO tipo_funcion

    ID              shift and go to state 45


state 28

    (43) mod -> MOD ID LLV_I instrucciones_mod . LLV_D
    (44) instrucciones_mod -> instrucciones_mod . instruccion_mod
    (46) instruccion_mod -> . struct
    (47) instruccion_mod -> . funcion
    (48) instruccion_mod -> . mod
    (49) instruccion_mod -> . PUB struct
    (50) instruccion_mod -> . PUB funcion
    (51) instruccion_mod -> . PUB mod
    (145) struct -> . STRUCT ID LLV_I lista_campos LLV_D
    (59) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (60) funcion -> . FN ID PAR_I PAR_D statement
    (61) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement
    (43) mod -> . MOD ID LLV_I instrucciones_mod LLV_D

    LLV_D           shift and go to state 46
    PUB             shift and go to state 33
    STRUCT          shift and go to state 9
    FN              shift and go to state 8
    MOD             shift and go to state 10

    instruccion_mod                shift and go to state 47
    struct                         shift and go to state 30
    funcion                        shift and go to state 31
    mod                            shift and go to state 32

state 29

    (45) instrucciones_mod -> instruccion_mod .

    LLV_D           reduce using rule 45 (instrucciones_mod -> instruccion_mod .)
    PUB             reduce using rule 45 (instrucciones_mod -> instruccion_mod .)
    STRUCT          reduce using rule 45 (instrucciones_mod -> instruccion_mod .)
    FN              reduce using rule 45 (instrucciones_mod -> instruccion_mod .)
    MOD             reduce using rule 45 (instrucciones_mod -> instruccion_mod .)


state 30

    (46) instruccion_mod -> struct .

    LLV_D           reduce using rule 46 (instruccion_mod -> struct .)
    PUB             reduce using rule 46 (instruccion_mod -> struct .)
    STRUCT          reduce using rule 46 (instruccion_mod -> struct .)
    FN              reduce using rule 46 (instruccion_mod -> struct .)
    MOD             reduce using rule 46 (instruccion_mod -> struct .)


state 31

    (47) instruccion_mod -> funcion .

    LLV_D           reduce using rule 47 (instruccion_mod -> funcion .)
    PUB             reduce using rule 47 (instruccion_mod -> funcion .)
    STRUCT          reduce using rule 47 (instruccion_mod -> funcion .)
    FN              reduce using rule 47 (instruccion_mod -> funcion .)
    MOD             reduce using rule 47 (instruccion_mod -> funcion .)


state 32

    (48) instruccion_mod -> mod .

    LLV_D           reduce using rule 48 (instruccion_mod -> mod .)
    PUB             reduce using rule 48 (instruccion_mod -> mod .)
    STRUCT          reduce using rule 48 (instruccion_mod -> mod .)
    FN              reduce using rule 48 (instruccion_mod -> mod .)
    MOD             reduce using rule 48 (instruccion_mod -> mod .)


state 33

    (49) instruccion_mod -> PUB . struct
    (50) instruccion_mod -> PUB . funcion
    (51) instruccion_mod -> PUB . mod
    (145) struct -> . STRUCT ID LLV_I lista_campos LLV_D
    (59) funcion -> . FN ID PAR_I lista_param PAR_D statement
    (60) funcion -> . FN ID PAR_I PAR_D statement
    (61) funcion -> . FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement
    (62) funcion -> . FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement
    (43) mod -> . MOD ID LLV_I instrucciones_mod LLV_D

    STRUCT          shift and go to state 9
    FN              shift and go to state 8
    MOD             shift and go to state 10

    struct                         shift and go to state 48
    funcion                        shift and go to state 49
    mod                            shift and go to state 50

state 34

    (65) parametro -> ID D_PUNTO . tipo_funcion
    (66) parametro -> ID D_PUNTO . AMP MUT tipo_funcion
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    AMP             shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 52
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 35

    (59) funcion -> FN ID PAR_I lista_param PAR_D . statement
    (61) funcion -> FN ID PAR_I lista_param PAR_D . MENOS MAYOR tipo_funcion statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    MENOS           shift and go to state 66
    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 65

state 36

    (63) lista_param -> lista_param COMA . parametro
    (65) parametro -> . ID D_PUNTO tipo_funcion
    (66) parametro -> . ID D_PUNTO AMP MUT tipo_funcion
    (67) parametro -> . MUT ID D_PUNTO tipo_funcion
    (68) parametro -> . MUT ID D_PUNTO AMP tipo_funcion

    ID              shift and go to state 19
    MUT             shift and go to state 23

    parametro                      shift and go to state 67

state 37

    (60) funcion -> FN ID PAR_I PAR_D statement .

    FN              reduce using rule 60 (funcion -> FN ID PAR_I PAR_D statement .)
    STRUCT          reduce using rule 60 (funcion -> FN ID PAR_I PAR_D statement .)
    MOD             reduce using rule 60 (funcion -> FN ID PAR_I PAR_D statement .)
    $end            reduce using rule 60 (funcion -> FN ID PAR_I PAR_D statement .)
    LLV_D           reduce using rule 60 (funcion -> FN ID PAR_I PAR_D statement .)
    PUB             reduce using rule 60 (funcion -> FN ID PAR_I PAR_D statement .)


state 38

    (62) funcion -> FN ID PAR_I PAR_D MENOS . MAYOR tipo_funcion statement

    MAYOR           shift and go to state 68


state 39

    (24) statement -> error . PUNTOCOMA
    (84) statement -> error . LLV_D

    PUNTOCOMA       shift and go to state 69
    LLV_D           shift and go to state 70


state 40

    (82) statement -> LLV_I . instrucciones LLV_D
    (83) statement -> LLV_I . LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D

    LLV_D           shift and go to state 72
    LET             shift and go to state 94
    ID              shift and go to state 95
    IF              shift and go to state 98
    MATCH           shift and go to state 99
    WHILE           shift and go to state 100
    LOOP            shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    instrucciones                  shift and go to state 71
    instruccion                    shift and go to state 73
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    llamada                        shift and go to state 86
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    vec_remove                     shift and go to state 92
    acceso_mod_exp                 shift and go to state 93
    datos_arreglo                  shift and go to state 96
    expresion                      shift and go to state 97
    acceso_struct                  shift and go to state 110
    vec_dato                       shift and go to state 111
    vec_new                        shift and go to state 113
    vec_capacity                   shift and go to state 114
    acceso_mod                     shift and go to state 115
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133

state 41

    (67) parametro -> MUT ID . D_PUNTO tipo_funcion
    (68) parametro -> MUT ID . D_PUNTO AMP tipo_funcion

    D_PUNTO         shift and go to state 136


state 42

    (148) campo -> ID D_PUNTO . tipo_funcion
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    AMP             shift and go to state 138
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 137
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 43

    (145) struct -> STRUCT ID LLV_I lista_campos LLV_D .

    FN              reduce using rule 145 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    STRUCT          reduce using rule 145 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    MOD             reduce using rule 145 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    $end            reduce using rule 145 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    LLV_D           reduce using rule 145 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)
    PUB             reduce using rule 145 (struct -> STRUCT ID LLV_I lista_campos LLV_D .)


state 44

    (146) lista_campos -> lista_campos COMA . campo
    (148) campo -> . ID D_PUNTO tipo_funcion
    (149) campo -> . PUB ID D_PUNTO tipo_funcion

    ID              shift and go to state 24
    PUB             shift and go to state 27

    campo                          shift and go to state 139

state 45

    (149) campo -> PUB ID . D_PUNTO tipo_funcion

    D_PUNTO         shift and go to state 140


state 46

    (43) mod -> MOD ID LLV_I instrucciones_mod LLV_D .

    FN              reduce using rule 43 (mod -> MOD ID LLV_I instrucciones_mod LLV_D .)
    STRUCT          reduce using rule 43 (mod -> MOD ID LLV_I instrucciones_mod LLV_D .)
    MOD             reduce using rule 43 (mod -> MOD ID LLV_I instrucciones_mod LLV_D .)
    $end            reduce using rule 43 (mod -> MOD ID LLV_I instrucciones_mod LLV_D .)
    LLV_D           reduce using rule 43 (mod -> MOD ID LLV_I instrucciones_mod LLV_D .)
    PUB             reduce using rule 43 (mod -> MOD ID LLV_I instrucciones_mod LLV_D .)


state 47

    (44) instrucciones_mod -> instrucciones_mod instruccion_mod .

    LLV_D           reduce using rule 44 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    PUB             reduce using rule 44 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    STRUCT          reduce using rule 44 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    FN              reduce using rule 44 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    MOD             reduce using rule 44 (instrucciones_mod -> instrucciones_mod instruccion_mod .)


state 48

    (49) instruccion_mod -> PUB struct .

    LLV_D           reduce using rule 49 (instruccion_mod -> PUB struct .)
    PUB             reduce using rule 49 (instruccion_mod -> PUB struct .)
    STRUCT          reduce using rule 49 (instruccion_mod -> PUB struct .)
    FN              reduce using rule 49 (instruccion_mod -> PUB struct .)
    MOD             reduce using rule 49 (instruccion_mod -> PUB struct .)


state 49

    (50) instruccion_mod -> PUB funcion .

    LLV_D           reduce using rule 50 (instruccion_mod -> PUB funcion .)
    PUB             reduce using rule 50 (instruccion_mod -> PUB funcion .)
    STRUCT          reduce using rule 50 (instruccion_mod -> PUB funcion .)
    FN              reduce using rule 50 (instruccion_mod -> PUB funcion .)
    MOD             reduce using rule 50 (instruccion_mod -> PUB funcion .)


state 50

    (51) instruccion_mod -> PUB mod .

    LLV_D           reduce using rule 51 (instruccion_mod -> PUB mod .)
    PUB             reduce using rule 51 (instruccion_mod -> PUB mod .)
    STRUCT          reduce using rule 51 (instruccion_mod -> PUB mod .)
    FN              reduce using rule 51 (instruccion_mod -> PUB mod .)
    MOD             reduce using rule 51 (instruccion_mod -> PUB mod .)


state 51

    (137) tipo_funcion -> ID .

    PAR_D           reduce using rule 137 (tipo_funcion -> ID .)
    COMA            reduce using rule 137 (tipo_funcion -> ID .)
    LLV_D           reduce using rule 137 (tipo_funcion -> ID .)
    error           reduce using rule 137 (tipo_funcion -> ID .)
    LLV_I           reduce using rule 137 (tipo_funcion -> ID .)


state 52

    (65) parametro -> ID D_PUNTO tipo_funcion .

    PAR_D           reduce using rule 65 (parametro -> ID D_PUNTO tipo_funcion .)
    COMA            reduce using rule 65 (parametro -> ID D_PUNTO tipo_funcion .)


state 53

    (66) parametro -> ID D_PUNTO AMP . MUT tipo_funcion
    (133) tipo_funcion -> AMP . STR

    MUT             shift and go to state 141
    STR             shift and go to state 142


state 54

    (130) tipo_funcion -> INT .

    PAR_D           reduce using rule 130 (tipo_funcion -> INT .)
    COMA            reduce using rule 130 (tipo_funcion -> INT .)
    LLV_D           reduce using rule 130 (tipo_funcion -> INT .)
    error           reduce using rule 130 (tipo_funcion -> INT .)
    LLV_I           reduce using rule 130 (tipo_funcion -> INT .)


state 55

    (131) tipo_funcion -> FLOAT .

    PAR_D           reduce using rule 131 (tipo_funcion -> FLOAT .)
    COMA            reduce using rule 131 (tipo_funcion -> FLOAT .)
    LLV_D           reduce using rule 131 (tipo_funcion -> FLOAT .)
    error           reduce using rule 131 (tipo_funcion -> FLOAT .)
    LLV_I           reduce using rule 131 (tipo_funcion -> FLOAT .)


state 56

    (132) tipo_funcion -> BOOL .

    PAR_D           reduce using rule 132 (tipo_funcion -> BOOL .)
    COMA            reduce using rule 132 (tipo_funcion -> BOOL .)
    LLV_D           reduce using rule 132 (tipo_funcion -> BOOL .)
    error           reduce using rule 132 (tipo_funcion -> BOOL .)
    LLV_I           reduce using rule 132 (tipo_funcion -> BOOL .)


state 57

    (134) tipo_funcion -> STRING .

    PAR_D           reduce using rule 134 (tipo_funcion -> STRING .)
    COMA            reduce using rule 134 (tipo_funcion -> STRING .)
    LLV_D           reduce using rule 134 (tipo_funcion -> STRING .)
    error           reduce using rule 134 (tipo_funcion -> STRING .)
    LLV_I           reduce using rule 134 (tipo_funcion -> STRING .)


state 58

    (135) tipo_funcion -> CHAR .

    PAR_D           reduce using rule 135 (tipo_funcion -> CHAR .)
    COMA            reduce using rule 135 (tipo_funcion -> CHAR .)
    LLV_D           reduce using rule 135 (tipo_funcion -> CHAR .)
    error           reduce using rule 135 (tipo_funcion -> CHAR .)
    LLV_I           reduce using rule 135 (tipo_funcion -> CHAR .)


state 59

    (136) tipo_funcion -> VOID .

    PAR_D           reduce using rule 136 (tipo_funcion -> VOID .)
    COMA            reduce using rule 136 (tipo_funcion -> VOID .)
    LLV_D           reduce using rule 136 (tipo_funcion -> VOID .)
    error           reduce using rule 136 (tipo_funcion -> VOID .)
    LLV_I           reduce using rule 136 (tipo_funcion -> VOID .)


state 60

    (138) tipo_funcion -> VEC_U . MENOR tipo MAYOR

    MENOR           shift and go to state 143


state 61

    (139) tipo_funcion -> dimensiones_arreglo_tipo .

    PAR_D           reduce using rule 139 (tipo_funcion -> dimensiones_arreglo_tipo .)
    COMA            reduce using rule 139 (tipo_funcion -> dimensiones_arreglo_tipo .)
    LLV_D           reduce using rule 139 (tipo_funcion -> dimensiones_arreglo_tipo .)
    error           reduce using rule 139 (tipo_funcion -> dimensiones_arreglo_tipo .)
    LLV_I           reduce using rule 139 (tipo_funcion -> dimensiones_arreglo_tipo .)


state 62

    (140) tipo_funcion -> dimensiones_un_tipo .

    PAR_D           reduce using rule 140 (tipo_funcion -> dimensiones_un_tipo .)
    COMA            reduce using rule 140 (tipo_funcion -> dimensiones_un_tipo .)
    LLV_D           reduce using rule 140 (tipo_funcion -> dimensiones_un_tipo .)
    error           reduce using rule 140 (tipo_funcion -> dimensiones_un_tipo .)
    LLV_I           reduce using rule 140 (tipo_funcion -> dimensiones_un_tipo .)


state 63

    (141) tipo_funcion -> USIZE .

    PAR_D           reduce using rule 141 (tipo_funcion -> USIZE .)
    COMA            reduce using rule 141 (tipo_funcion -> USIZE .)
    LLV_D           reduce using rule 141 (tipo_funcion -> USIZE .)
    error           reduce using rule 141 (tipo_funcion -> USIZE .)
    LLV_I           reduce using rule 141 (tipo_funcion -> USIZE .)


state 64

    (142) dimensiones_arreglo_tipo -> COR_I . dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> COR_I . tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> COR_I . tipo COR_D
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    COR_I           shift and go to state 144
    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    dimensiones_arreglo_tipo       shift and go to state 145
    tipo                           shift and go to state 146
    acceso_mod                     shift and go to state 154

state 65

    (59) funcion -> FN ID PAR_I lista_param PAR_D statement .

    FN              reduce using rule 59 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    STRUCT          reduce using rule 59 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    MOD             reduce using rule 59 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    $end            reduce using rule 59 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    LLV_D           reduce using rule 59 (funcion -> FN ID PAR_I lista_param PAR_D statement .)
    PUB             reduce using rule 59 (funcion -> FN ID PAR_I lista_param PAR_D statement .)


state 66

    (61) funcion -> FN ID PAR_I lista_param PAR_D MENOS . MAYOR tipo_funcion statement

    MAYOR           shift and go to state 157


state 67

    (63) lista_param -> lista_param COMA parametro .

    PAR_D           reduce using rule 63 (lista_param -> lista_param COMA parametro .)
    COMA            reduce using rule 63 (lista_param -> lista_param COMA parametro .)


state 68

    (62) funcion -> FN ID PAR_I PAR_D MENOS MAYOR . tipo_funcion statement
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    AMP             shift and go to state 138
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 158
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 69

    (24) statement -> error PUNTOCOMA .

    FN              reduce using rule 24 (statement -> error PUNTOCOMA .)
    STRUCT          reduce using rule 24 (statement -> error PUNTOCOMA .)
    MOD             reduce using rule 24 (statement -> error PUNTOCOMA .)
    $end            reduce using rule 24 (statement -> error PUNTOCOMA .)
    LLV_D           reduce using rule 24 (statement -> error PUNTOCOMA .)
    PUB             reduce using rule 24 (statement -> error PUNTOCOMA .)
    LET             reduce using rule 24 (statement -> error PUNTOCOMA .)
    ID              reduce using rule 24 (statement -> error PUNTOCOMA .)
    IF              reduce using rule 24 (statement -> error PUNTOCOMA .)
    MATCH           reduce using rule 24 (statement -> error PUNTOCOMA .)
    WHILE           reduce using rule 24 (statement -> error PUNTOCOMA .)
    LOOP            reduce using rule 24 (statement -> error PUNTOCOMA .)
    FOR             reduce using rule 24 (statement -> error PUNTOCOMA .)
    BREAK           reduce using rule 24 (statement -> error PUNTOCOMA .)
    CONTINUE        reduce using rule 24 (statement -> error PUNTOCOMA .)
    RETURN          reduce using rule 24 (statement -> error PUNTOCOMA .)
    PRINT           reduce using rule 24 (statement -> error PUNTOCOMA .)
    MENOS           reduce using rule 24 (statement -> error PUNTOCOMA .)
    INT             reduce using rule 24 (statement -> error PUNTOCOMA .)
    FLOAT           reduce using rule 24 (statement -> error PUNTOCOMA .)
    NOT             reduce using rule 24 (statement -> error PUNTOCOMA .)
    PAR_I           reduce using rule 24 (statement -> error PUNTOCOMA .)
    ENTERO          reduce using rule 24 (statement -> error PUNTOCOMA .)
    DECIMAL         reduce using rule 24 (statement -> error PUNTOCOMA .)
    TRUE            reduce using rule 24 (statement -> error PUNTOCOMA .)
    FALSE           reduce using rule 24 (statement -> error PUNTOCOMA .)
    CHAR_S          reduce using rule 24 (statement -> error PUNTOCOMA .)
    CADENA          reduce using rule 24 (statement -> error PUNTOCOMA .)
    COR_I           reduce using rule 24 (statement -> error PUNTOCOMA .)
    VEC_L           reduce using rule 24 (statement -> error PUNTOCOMA .)
    VEC_U           reduce using rule 24 (statement -> error PUNTOCOMA .)
    PUNTO           reduce using rule 24 (statement -> error PUNTOCOMA .)
    MAS             reduce using rule 24 (statement -> error PUNTOCOMA .)
    MULTI           reduce using rule 24 (statement -> error PUNTOCOMA .)
    DIV             reduce using rule 24 (statement -> error PUNTOCOMA .)
    MODULO          reduce using rule 24 (statement -> error PUNTOCOMA .)
    MAYOR           reduce using rule 24 (statement -> error PUNTOCOMA .)
    MENOR           reduce using rule 24 (statement -> error PUNTOCOMA .)
    MAYOR_I         reduce using rule 24 (statement -> error PUNTOCOMA .)
    MENOR_I         reduce using rule 24 (statement -> error PUNTOCOMA .)
    D_IGUAL         reduce using rule 24 (statement -> error PUNTOCOMA .)
    NO_IGUAL        reduce using rule 24 (statement -> error PUNTOCOMA .)
    OR              reduce using rule 24 (statement -> error PUNTOCOMA .)
    AND             reduce using rule 24 (statement -> error PUNTOCOMA .)
    AS              reduce using rule 24 (statement -> error PUNTOCOMA .)
    COMA            reduce using rule 24 (statement -> error PUNTOCOMA .)
    GUION_B         reduce using rule 24 (statement -> error PUNTOCOMA .)
    ELSE            reduce using rule 24 (statement -> error PUNTOCOMA .)
    LLV_I           reduce using rule 24 (statement -> error PUNTOCOMA .)
    error           reduce using rule 24 (statement -> error PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 24 (statement -> error PUNTOCOMA .)
    PAR_D           reduce using rule 24 (statement -> error PUNTOCOMA .)
    COR_D           reduce using rule 24 (statement -> error PUNTOCOMA .)
    IGUAL           reduce using rule 24 (statement -> error PUNTOCOMA .)
    BARRA           reduce using rule 24 (statement -> error PUNTOCOMA .)


state 70

    (84) statement -> error LLV_D .

    FN              reduce using rule 84 (statement -> error LLV_D .)
    STRUCT          reduce using rule 84 (statement -> error LLV_D .)
    MOD             reduce using rule 84 (statement -> error LLV_D .)
    $end            reduce using rule 84 (statement -> error LLV_D .)
    LLV_D           reduce using rule 84 (statement -> error LLV_D .)
    PUB             reduce using rule 84 (statement -> error LLV_D .)
    LET             reduce using rule 84 (statement -> error LLV_D .)
    ID              reduce using rule 84 (statement -> error LLV_D .)
    IF              reduce using rule 84 (statement -> error LLV_D .)
    MATCH           reduce using rule 84 (statement -> error LLV_D .)
    WHILE           reduce using rule 84 (statement -> error LLV_D .)
    LOOP            reduce using rule 84 (statement -> error LLV_D .)
    FOR             reduce using rule 84 (statement -> error LLV_D .)
    BREAK           reduce using rule 84 (statement -> error LLV_D .)
    CONTINUE        reduce using rule 84 (statement -> error LLV_D .)
    RETURN          reduce using rule 84 (statement -> error LLV_D .)
    PRINT           reduce using rule 84 (statement -> error LLV_D .)
    MENOS           reduce using rule 84 (statement -> error LLV_D .)
    INT             reduce using rule 84 (statement -> error LLV_D .)
    FLOAT           reduce using rule 84 (statement -> error LLV_D .)
    NOT             reduce using rule 84 (statement -> error LLV_D .)
    PAR_I           reduce using rule 84 (statement -> error LLV_D .)
    ENTERO          reduce using rule 84 (statement -> error LLV_D .)
    DECIMAL         reduce using rule 84 (statement -> error LLV_D .)
    TRUE            reduce using rule 84 (statement -> error LLV_D .)
    FALSE           reduce using rule 84 (statement -> error LLV_D .)
    CHAR_S          reduce using rule 84 (statement -> error LLV_D .)
    CADENA          reduce using rule 84 (statement -> error LLV_D .)
    COR_I           reduce using rule 84 (statement -> error LLV_D .)
    VEC_L           reduce using rule 84 (statement -> error LLV_D .)
    VEC_U           reduce using rule 84 (statement -> error LLV_D .)
    PUNTO           reduce using rule 84 (statement -> error LLV_D .)
    MAS             reduce using rule 84 (statement -> error LLV_D .)
    MULTI           reduce using rule 84 (statement -> error LLV_D .)
    DIV             reduce using rule 84 (statement -> error LLV_D .)
    MODULO          reduce using rule 84 (statement -> error LLV_D .)
    MAYOR           reduce using rule 84 (statement -> error LLV_D .)
    MENOR           reduce using rule 84 (statement -> error LLV_D .)
    MAYOR_I         reduce using rule 84 (statement -> error LLV_D .)
    MENOR_I         reduce using rule 84 (statement -> error LLV_D .)
    D_IGUAL         reduce using rule 84 (statement -> error LLV_D .)
    NO_IGUAL        reduce using rule 84 (statement -> error LLV_D .)
    OR              reduce using rule 84 (statement -> error LLV_D .)
    AND             reduce using rule 84 (statement -> error LLV_D .)
    AS              reduce using rule 84 (statement -> error LLV_D .)
    COMA            reduce using rule 84 (statement -> error LLV_D .)
    GUION_B         reduce using rule 84 (statement -> error LLV_D .)
    ELSE            reduce using rule 84 (statement -> error LLV_D .)
    LLV_I           reduce using rule 84 (statement -> error LLV_D .)
    error           reduce using rule 84 (statement -> error LLV_D .)
    PUNTOCOMA       reduce using rule 84 (statement -> error LLV_D .)
    PAR_D           reduce using rule 84 (statement -> error LLV_D .)
    COR_D           reduce using rule 84 (statement -> error LLV_D .)
    IGUAL           reduce using rule 84 (statement -> error LLV_D .)
    BARRA           reduce using rule 84 (statement -> error LLV_D .)


state 71

    (82) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D

    LLV_D           shift and go to state 159
    LET             shift and go to state 94
    ID              shift and go to state 95
    IF              shift and go to state 98
    MATCH           shift and go to state 99
    WHILE           shift and go to state 100
    LOOP            shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    instruccion                    shift and go to state 160
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    llamada                        shift and go to state 86
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    vec_remove                     shift and go to state 92
    acceso_mod_exp                 shift and go to state 93
    datos_arreglo                  shift and go to state 96
    expresion                      shift and go to state 97
    acceso_struct                  shift and go to state 110
    vec_dato                       shift and go to state 111
    vec_new                        shift and go to state 113
    vec_capacity                   shift and go to state 114
    acceso_mod                     shift and go to state 115
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133

state 72

    (83) statement -> LLV_I LLV_D .

    FN              reduce using rule 83 (statement -> LLV_I LLV_D .)
    STRUCT          reduce using rule 83 (statement -> LLV_I LLV_D .)
    MOD             reduce using rule 83 (statement -> LLV_I LLV_D .)
    $end            reduce using rule 83 (statement -> LLV_I LLV_D .)
    LLV_D           reduce using rule 83 (statement -> LLV_I LLV_D .)
    PUB             reduce using rule 83 (statement -> LLV_I LLV_D .)
    LET             reduce using rule 83 (statement -> LLV_I LLV_D .)
    ID              reduce using rule 83 (statement -> LLV_I LLV_D .)
    IF              reduce using rule 83 (statement -> LLV_I LLV_D .)
    MATCH           reduce using rule 83 (statement -> LLV_I LLV_D .)
    WHILE           reduce using rule 83 (statement -> LLV_I LLV_D .)
    LOOP            reduce using rule 83 (statement -> LLV_I LLV_D .)
    FOR             reduce using rule 83 (statement -> LLV_I LLV_D .)
    BREAK           reduce using rule 83 (statement -> LLV_I LLV_D .)
    CONTINUE        reduce using rule 83 (statement -> LLV_I LLV_D .)
    RETURN          reduce using rule 83 (statement -> LLV_I LLV_D .)
    PRINT           reduce using rule 83 (statement -> LLV_I LLV_D .)
    MENOS           reduce using rule 83 (statement -> LLV_I LLV_D .)
    INT             reduce using rule 83 (statement -> LLV_I LLV_D .)
    FLOAT           reduce using rule 83 (statement -> LLV_I LLV_D .)
    NOT             reduce using rule 83 (statement -> LLV_I LLV_D .)
    PAR_I           reduce using rule 83 (statement -> LLV_I LLV_D .)
    ENTERO          reduce using rule 83 (statement -> LLV_I LLV_D .)
    DECIMAL         reduce using rule 83 (statement -> LLV_I LLV_D .)
    TRUE            reduce using rule 83 (statement -> LLV_I LLV_D .)
    FALSE           reduce using rule 83 (statement -> LLV_I LLV_D .)
    CHAR_S          reduce using rule 83 (statement -> LLV_I LLV_D .)
    CADENA          reduce using rule 83 (statement -> LLV_I LLV_D .)
    COR_I           reduce using rule 83 (statement -> LLV_I LLV_D .)
    VEC_L           reduce using rule 83 (statement -> LLV_I LLV_D .)
    VEC_U           reduce using rule 83 (statement -> LLV_I LLV_D .)
    PUNTO           reduce using rule 83 (statement -> LLV_I LLV_D .)
    MAS             reduce using rule 83 (statement -> LLV_I LLV_D .)
    MULTI           reduce using rule 83 (statement -> LLV_I LLV_D .)
    DIV             reduce using rule 83 (statement -> LLV_I LLV_D .)
    MODULO          reduce using rule 83 (statement -> LLV_I LLV_D .)
    MAYOR           reduce using rule 83 (statement -> LLV_I LLV_D .)
    MENOR           reduce using rule 83 (statement -> LLV_I LLV_D .)
    MAYOR_I         reduce using rule 83 (statement -> LLV_I LLV_D .)
    MENOR_I         reduce using rule 83 (statement -> LLV_I LLV_D .)
    D_IGUAL         reduce using rule 83 (statement -> LLV_I LLV_D .)
    NO_IGUAL        reduce using rule 83 (statement -> LLV_I LLV_D .)
    OR              reduce using rule 83 (statement -> LLV_I LLV_D .)
    AND             reduce using rule 83 (statement -> LLV_I LLV_D .)
    AS              reduce using rule 83 (statement -> LLV_I LLV_D .)
    COMA            reduce using rule 83 (statement -> LLV_I LLV_D .)
    GUION_B         reduce using rule 83 (statement -> LLV_I LLV_D .)
    ELSE            reduce using rule 83 (statement -> LLV_I LLV_D .)
    LLV_I           reduce using rule 83 (statement -> LLV_I LLV_D .)
    error           reduce using rule 83 (statement -> LLV_I LLV_D .)
    PUNTOCOMA       reduce using rule 83 (statement -> LLV_I LLV_D .)
    PAR_D           reduce using rule 83 (statement -> LLV_I LLV_D .)
    COR_D           reduce using rule 83 (statement -> LLV_I LLV_D .)
    IGUAL           reduce using rule 83 (statement -> LLV_I LLV_D .)
    BARRA           reduce using rule 83 (statement -> LLV_I LLV_D .)


state 73

    (3) instrucciones -> instruccion .

    LLV_D           reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    INT             reduce using rule 3 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    PAR_I           reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    CHAR_S          reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    COR_I           reduce using rule 3 (instrucciones -> instruccion .)
    VEC_L           reduce using rule 3 (instrucciones -> instruccion .)
    VEC_U           reduce using rule 3 (instrucciones -> instruccion .)


state 74

    (4) instruccion -> declaracion_arreglo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 161


state 75

    (5) instruccion -> declaracion_struct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 162


state 76

    (6) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 163


state 77

    (7) instruccion -> if .

    LLV_D           reduce using rule 7 (instruccion -> if .)
    LET             reduce using rule 7 (instruccion -> if .)
    ID              reduce using rule 7 (instruccion -> if .)
    IF              reduce using rule 7 (instruccion -> if .)
    MATCH           reduce using rule 7 (instruccion -> if .)
    WHILE           reduce using rule 7 (instruccion -> if .)
    LOOP            reduce using rule 7 (instruccion -> if .)
    FOR             reduce using rule 7 (instruccion -> if .)
    BREAK           reduce using rule 7 (instruccion -> if .)
    CONTINUE        reduce using rule 7 (instruccion -> if .)
    RETURN          reduce using rule 7 (instruccion -> if .)
    PRINT           reduce using rule 7 (instruccion -> if .)
    MENOS           reduce using rule 7 (instruccion -> if .)
    INT             reduce using rule 7 (instruccion -> if .)
    FLOAT           reduce using rule 7 (instruccion -> if .)
    NOT             reduce using rule 7 (instruccion -> if .)
    PAR_I           reduce using rule 7 (instruccion -> if .)
    ENTERO          reduce using rule 7 (instruccion -> if .)
    DECIMAL         reduce using rule 7 (instruccion -> if .)
    TRUE            reduce using rule 7 (instruccion -> if .)
    FALSE           reduce using rule 7 (instruccion -> if .)
    CHAR_S          reduce using rule 7 (instruccion -> if .)
    CADENA          reduce using rule 7 (instruccion -> if .)
    COR_I           reduce using rule 7 (instruccion -> if .)
    VEC_L           reduce using rule 7 (instruccion -> if .)
    VEC_U           reduce using rule 7 (instruccion -> if .)


state 78

    (8) instruccion -> match .

    LLV_D           reduce using rule 8 (instruccion -> match .)
    LET             reduce using rule 8 (instruccion -> match .)
    ID              reduce using rule 8 (instruccion -> match .)
    IF              reduce using rule 8 (instruccion -> match .)
    MATCH           reduce using rule 8 (instruccion -> match .)
    WHILE           reduce using rule 8 (instruccion -> match .)
    LOOP            reduce using rule 8 (instruccion -> match .)
    FOR             reduce using rule 8 (instruccion -> match .)
    BREAK           reduce using rule 8 (instruccion -> match .)
    CONTINUE        reduce using rule 8 (instruccion -> match .)
    RETURN          reduce using rule 8 (instruccion -> match .)
    PRINT           reduce using rule 8 (instruccion -> match .)
    MENOS           reduce using rule 8 (instruccion -> match .)
    INT             reduce using rule 8 (instruccion -> match .)
    FLOAT           reduce using rule 8 (instruccion -> match .)
    NOT             reduce using rule 8 (instruccion -> match .)
    PAR_I           reduce using rule 8 (instruccion -> match .)
    ENTERO          reduce using rule 8 (instruccion -> match .)
    DECIMAL         reduce using rule 8 (instruccion -> match .)
    TRUE            reduce using rule 8 (instruccion -> match .)
    FALSE           reduce using rule 8 (instruccion -> match .)
    CHAR_S          reduce using rule 8 (instruccion -> match .)
    CADENA          reduce using rule 8 (instruccion -> match .)
    COR_I           reduce using rule 8 (instruccion -> match .)
    VEC_L           reduce using rule 8 (instruccion -> match .)
    VEC_U           reduce using rule 8 (instruccion -> match .)


state 79

    (9) instruccion -> while .

    LLV_D           reduce using rule 9 (instruccion -> while .)
    LET             reduce using rule 9 (instruccion -> while .)
    ID              reduce using rule 9 (instruccion -> while .)
    IF              reduce using rule 9 (instruccion -> while .)
    MATCH           reduce using rule 9 (instruccion -> while .)
    WHILE           reduce using rule 9 (instruccion -> while .)
    LOOP            reduce using rule 9 (instruccion -> while .)
    FOR             reduce using rule 9 (instruccion -> while .)
    BREAK           reduce using rule 9 (instruccion -> while .)
    CONTINUE        reduce using rule 9 (instruccion -> while .)
    RETURN          reduce using rule 9 (instruccion -> while .)
    PRINT           reduce using rule 9 (instruccion -> while .)
    MENOS           reduce using rule 9 (instruccion -> while .)
    INT             reduce using rule 9 (instruccion -> while .)
    FLOAT           reduce using rule 9 (instruccion -> while .)
    NOT             reduce using rule 9 (instruccion -> while .)
    PAR_I           reduce using rule 9 (instruccion -> while .)
    ENTERO          reduce using rule 9 (instruccion -> while .)
    DECIMAL         reduce using rule 9 (instruccion -> while .)
    TRUE            reduce using rule 9 (instruccion -> while .)
    FALSE           reduce using rule 9 (instruccion -> while .)
    CHAR_S          reduce using rule 9 (instruccion -> while .)
    CADENA          reduce using rule 9 (instruccion -> while .)
    COR_I           reduce using rule 9 (instruccion -> while .)
    VEC_L           reduce using rule 9 (instruccion -> while .)
    VEC_U           reduce using rule 9 (instruccion -> while .)


state 80

    (10) instruccion -> loop .

    LLV_D           reduce using rule 10 (instruccion -> loop .)
    LET             reduce using rule 10 (instruccion -> loop .)
    ID              reduce using rule 10 (instruccion -> loop .)
    IF              reduce using rule 10 (instruccion -> loop .)
    MATCH           reduce using rule 10 (instruccion -> loop .)
    WHILE           reduce using rule 10 (instruccion -> loop .)
    LOOP            reduce using rule 10 (instruccion -> loop .)
    FOR             reduce using rule 10 (instruccion -> loop .)
    BREAK           reduce using rule 10 (instruccion -> loop .)
    CONTINUE        reduce using rule 10 (instruccion -> loop .)
    RETURN          reduce using rule 10 (instruccion -> loop .)
    PRINT           reduce using rule 10 (instruccion -> loop .)
    MENOS           reduce using rule 10 (instruccion -> loop .)
    INT             reduce using rule 10 (instruccion -> loop .)
    FLOAT           reduce using rule 10 (instruccion -> loop .)
    NOT             reduce using rule 10 (instruccion -> loop .)
    PAR_I           reduce using rule 10 (instruccion -> loop .)
    ENTERO          reduce using rule 10 (instruccion -> loop .)
    DECIMAL         reduce using rule 10 (instruccion -> loop .)
    TRUE            reduce using rule 10 (instruccion -> loop .)
    FALSE           reduce using rule 10 (instruccion -> loop .)
    CHAR_S          reduce using rule 10 (instruccion -> loop .)
    CADENA          reduce using rule 10 (instruccion -> loop .)
    COR_I           reduce using rule 10 (instruccion -> loop .)
    VEC_L           reduce using rule 10 (instruccion -> loop .)
    VEC_U           reduce using rule 10 (instruccion -> loop .)


state 81

    (11) instruccion -> for .

    LLV_D           reduce using rule 11 (instruccion -> for .)
    LET             reduce using rule 11 (instruccion -> for .)
    ID              reduce using rule 11 (instruccion -> for .)
    IF              reduce using rule 11 (instruccion -> for .)
    MATCH           reduce using rule 11 (instruccion -> for .)
    WHILE           reduce using rule 11 (instruccion -> for .)
    LOOP            reduce using rule 11 (instruccion -> for .)
    FOR             reduce using rule 11 (instruccion -> for .)
    BREAK           reduce using rule 11 (instruccion -> for .)
    CONTINUE        reduce using rule 11 (instruccion -> for .)
    RETURN          reduce using rule 11 (instruccion -> for .)
    PRINT           reduce using rule 11 (instruccion -> for .)
    MENOS           reduce using rule 11 (instruccion -> for .)
    INT             reduce using rule 11 (instruccion -> for .)
    FLOAT           reduce using rule 11 (instruccion -> for .)
    NOT             reduce using rule 11 (instruccion -> for .)
    PAR_I           reduce using rule 11 (instruccion -> for .)
    ENTERO          reduce using rule 11 (instruccion -> for .)
    DECIMAL         reduce using rule 11 (instruccion -> for .)
    TRUE            reduce using rule 11 (instruccion -> for .)
    FALSE           reduce using rule 11 (instruccion -> for .)
    CHAR_S          reduce using rule 11 (instruccion -> for .)
    CADENA          reduce using rule 11 (instruccion -> for .)
    COR_I           reduce using rule 11 (instruccion -> for .)
    VEC_L           reduce using rule 11 (instruccion -> for .)
    VEC_U           reduce using rule 11 (instruccion -> for .)


state 82

    (12) instruccion -> break . PUNTOCOMA

    PUNTOCOMA       shift and go to state 164


state 83

    (13) instruccion -> continue . PUNTOCOMA

    PUNTOCOMA       shift and go to state 165


state 84

    (14) instruccion -> return . PUNTOCOMA

    PUNTOCOMA       shift and go to state 166


state 85

    (15) instruccion -> print . PUNTOCOMA

    PUNTOCOMA       shift and go to state 167


state 86

    (16) instruccion -> llamada . PUNTOCOMA
    (240) expresion -> llamada .

    PUNTOCOMA       shift and go to state 168
    PUNTO           reduce using rule 240 (expresion -> llamada .)
    MAS             reduce using rule 240 (expresion -> llamada .)
    MENOS           reduce using rule 240 (expresion -> llamada .)
    MULTI           reduce using rule 240 (expresion -> llamada .)
    DIV             reduce using rule 240 (expresion -> llamada .)
    MODULO          reduce using rule 240 (expresion -> llamada .)
    MAYOR           reduce using rule 240 (expresion -> llamada .)
    MENOR           reduce using rule 240 (expresion -> llamada .)
    MAYOR_I         reduce using rule 240 (expresion -> llamada .)
    MENOR_I         reduce using rule 240 (expresion -> llamada .)
    D_IGUAL         reduce using rule 240 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 240 (expresion -> llamada .)
    OR              reduce using rule 240 (expresion -> llamada .)
    AND             reduce using rule 240 (expresion -> llamada .)
    AS              reduce using rule 240 (expresion -> llamada .)


state 87

    (17) instruccion -> mod_struct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 169


state 88

    (18) instruccion -> mod_arreglo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 170


state 89

    (19) instruccion -> declaracion_vector . PUNTOCOMA

    PUNTOCOMA       shift and go to state 171


state 90

    (20) instruccion -> vec_push . PUNTOCOMA

    PUNTOCOMA       shift and go to state 172


state 91

    (21) instruccion -> vec_insert . PUNTOCOMA

    PUNTOCOMA       shift and go to state 173


state 92

    (22) instruccion -> vec_remove . PUNTOCOMA
    (246) expresion -> vec_remove .

    PUNTOCOMA       shift and go to state 174
    PUNTO           reduce using rule 246 (expresion -> vec_remove .)
    MAS             reduce using rule 246 (expresion -> vec_remove .)
    MENOS           reduce using rule 246 (expresion -> vec_remove .)
    MULTI           reduce using rule 246 (expresion -> vec_remove .)
    DIV             reduce using rule 246 (expresion -> vec_remove .)
    MODULO          reduce using rule 246 (expresion -> vec_remove .)
    MAYOR           reduce using rule 246 (expresion -> vec_remove .)
    MENOR           reduce using rule 246 (expresion -> vec_remove .)
    MAYOR_I         reduce using rule 246 (expresion -> vec_remove .)
    MENOR_I         reduce using rule 246 (expresion -> vec_remove .)
    D_IGUAL         reduce using rule 246 (expresion -> vec_remove .)
    NO_IGUAL        reduce using rule 246 (expresion -> vec_remove .)
    OR              reduce using rule 246 (expresion -> vec_remove .)
    AND             reduce using rule 246 (expresion -> vec_remove .)
    AS              reduce using rule 246 (expresion -> vec_remove .)


state 93

    (23) instruccion -> acceso_mod_exp . PUNTOCOMA
    (253) expresion -> acceso_mod_exp .

    PUNTOCOMA       shift and go to state 175
    PUNTO           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAS             reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOS           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MULTI           reduce using rule 253 (expresion -> acceso_mod_exp .)
    DIV             reduce using rule 253 (expresion -> acceso_mod_exp .)
    MODULO          reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAYOR           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOR           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAYOR_I         reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOR_I         reduce using rule 253 (expresion -> acceso_mod_exp .)
    D_IGUAL         reduce using rule 253 (expresion -> acceso_mod_exp .)
    NO_IGUAL        reduce using rule 253 (expresion -> acceso_mod_exp .)
    OR              reduce using rule 253 (expresion -> acceso_mod_exp .)
    AND             reduce using rule 253 (expresion -> acceso_mod_exp .)
    AS              reduce using rule 253 (expresion -> acceso_mod_exp .)


state 94

    (159) declaracion_arreglo -> LET . ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> LET . MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> LET . MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> LET . ID IGUAL datos_arreglo
    (150) declaracion_struct -> LET . ID IGUAL instancia
    (151) declaracion_struct -> LET . MUT ID IGUAL instancia
    (116) asignacion -> LET . ID IGUAL expresion
    (117) asignacion -> LET . MUT ID IGUAL expresion
    (118) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion
    (172) declaracion_vector -> LET . ID IGUAL vec_dato
    (173) declaracion_vector -> LET . MUT ID IGUAL vec_dato
    (174) declaracion_vector -> LET . ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> LET . MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> LET . ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> LET . MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> LET . ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> LET . MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity

    ID              shift and go to state 176
    MUT             shift and go to state 177


state 95

    (120) asignacion -> ID . IGUAL expresion
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (171) mod_arreglo -> ID . dimensiones IGUAL expresion
    (198) vec_push -> ID . PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> ID . PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (54) acceso_mod -> ID .
    (207) expresion -> ID .
    (167) acceso_arreglo -> ID . dimensiones
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 178
    PAR_I           shift and go to state 179
    PUNTO           shift and go to state 181
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 180
    dimension                      shift and go to state 182

state 96

    (244) expresion -> datos_arreglo .

    PUNTO           reduce using rule 244 (expresion -> datos_arreglo .)
    MAS             reduce using rule 244 (expresion -> datos_arreglo .)
    MENOS           reduce using rule 244 (expresion -> datos_arreglo .)
    MULTI           reduce using rule 244 (expresion -> datos_arreglo .)
    DIV             reduce using rule 244 (expresion -> datos_arreglo .)
    MODULO          reduce using rule 244 (expresion -> datos_arreglo .)
    MAYOR           reduce using rule 244 (expresion -> datos_arreglo .)
    MENOR           reduce using rule 244 (expresion -> datos_arreglo .)
    MAYOR_I         reduce using rule 244 (expresion -> datos_arreglo .)
    MENOR_I         reduce using rule 244 (expresion -> datos_arreglo .)
    D_IGUAL         reduce using rule 244 (expresion -> datos_arreglo .)
    NO_IGUAL        reduce using rule 244 (expresion -> datos_arreglo .)
    OR              reduce using rule 244 (expresion -> datos_arreglo .)
    AND             reduce using rule 244 (expresion -> datos_arreglo .)
    AS              reduce using rule 244 (expresion -> datos_arreglo .)
    LLV_I           reduce using rule 244 (expresion -> datos_arreglo .)
    error           reduce using rule 244 (expresion -> datos_arreglo .)
    PUNTOCOMA       reduce using rule 244 (expresion -> datos_arreglo .)
    COMA            reduce using rule 244 (expresion -> datos_arreglo .)
    PAR_D           reduce using rule 244 (expresion -> datos_arreglo .)
    COR_D           reduce using rule 244 (expresion -> datos_arreglo .)
    IGUAL           reduce using rule 244 (expresion -> datos_arreglo .)
    LLV_D           reduce using rule 244 (expresion -> datos_arreglo .)
    BARRA           reduce using rule 244 (expresion -> datos_arreglo .)
    GUION_B         reduce using rule 244 (expresion -> datos_arreglo .)
    ID              reduce using rule 244 (expresion -> datos_arreglo .)
    INT             reduce using rule 244 (expresion -> datos_arreglo .)
    FLOAT           reduce using rule 244 (expresion -> datos_arreglo .)
    NOT             reduce using rule 244 (expresion -> datos_arreglo .)
    PAR_I           reduce using rule 244 (expresion -> datos_arreglo .)
    ENTERO          reduce using rule 244 (expresion -> datos_arreglo .)
    DECIMAL         reduce using rule 244 (expresion -> datos_arreglo .)
    TRUE            reduce using rule 244 (expresion -> datos_arreglo .)
    FALSE           reduce using rule 244 (expresion -> datos_arreglo .)
    CHAR_S          reduce using rule 244 (expresion -> datos_arreglo .)
    CADENA          reduce using rule 244 (expresion -> datos_arreglo .)
    IF              reduce using rule 244 (expresion -> datos_arreglo .)
    MATCH           reduce using rule 244 (expresion -> datos_arreglo .)
    LOOP            reduce using rule 244 (expresion -> datos_arreglo .)
    COR_I           reduce using rule 244 (expresion -> datos_arreglo .)
    VEC_L           reduce using rule 244 (expresion -> datos_arreglo .)
    VEC_U           reduce using rule 244 (expresion -> datos_arreglo .)


state 97

    (158) acceso_struct -> expresion . PUNTO expresion
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D

    PUNTO           shift and go to state 184
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 98

    (78) if -> IF . expresion statement
    (79) if -> IF . expresion statement else
    (85) exp_if -> IF . expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 200
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 99

    (90) match -> MATCH . expresion LLV_I case_list LLV_D
    (91) match -> MATCH . expresion LLV_I case_list default LLV_D
    (100) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 208
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 100

    (107) while -> WHILE . expresion statement
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 209
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 101

    (111) loop -> LOOP . statement
    (112) loop_exp -> LOOP . statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 210

state 102

    (113) for -> FOR . ID IN rango statement
    (114) for -> FOR . ID IN expresion statement

    ID              shift and go to state 211


state 103

    (108) break -> BREAK .
    (109) break -> BREAK . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    PUNTOCOMA       reduce using rule 108 (break -> BREAK .)
    COMA            reduce using rule 108 (break -> BREAK .)
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 212
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 104

    (110) continue -> CONTINUE .

    PUNTOCOMA       reduce using rule 110 (continue -> CONTINUE .)
    COMA            reduce using rule 110 (continue -> CONTINUE .)


state 105

    (69) return -> RETURN . expresion
    (70) return -> RETURN .
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    PUNTOCOMA       reduce using rule 70 (return -> RETURN .)
    COMA            reduce using rule 70 (return -> RETURN .)
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 213
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 106

    (55) print -> PRINT . NOT PAR_I expresion PAR_D
    (56) print -> PRINT . NOT PAR_I CADENA COMA exp_list PAR_D

    NOT             shift and go to state 214


state 107

    (226) expresion -> NOT . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 215
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 108

    (227) expresion -> PAR_I . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 216
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 109

    (233) expresion -> CADENA .

    PUNTO           reduce using rule 233 (expresion -> CADENA .)
    MAS             reduce using rule 233 (expresion -> CADENA .)
    MENOS           reduce using rule 233 (expresion -> CADENA .)
    MULTI           reduce using rule 233 (expresion -> CADENA .)
    DIV             reduce using rule 233 (expresion -> CADENA .)
    MODULO          reduce using rule 233 (expresion -> CADENA .)
    MAYOR           reduce using rule 233 (expresion -> CADENA .)
    MENOR           reduce using rule 233 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 233 (expresion -> CADENA .)
    MENOR_I         reduce using rule 233 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 233 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 233 (expresion -> CADENA .)
    OR              reduce using rule 233 (expresion -> CADENA .)
    AND             reduce using rule 233 (expresion -> CADENA .)
    AS              reduce using rule 233 (expresion -> CADENA .)
    LLV_I           reduce using rule 233 (expresion -> CADENA .)
    error           reduce using rule 233 (expresion -> CADENA .)
    PUNTOCOMA       reduce using rule 233 (expresion -> CADENA .)
    COMA            reduce using rule 233 (expresion -> CADENA .)
    PAR_D           reduce using rule 233 (expresion -> CADENA .)
    COR_D           reduce using rule 233 (expresion -> CADENA .)
    IGUAL           reduce using rule 233 (expresion -> CADENA .)
    LLV_D           reduce using rule 233 (expresion -> CADENA .)
    BARRA           reduce using rule 233 (expresion -> CADENA .)
    GUION_B         reduce using rule 233 (expresion -> CADENA .)
    ID              reduce using rule 233 (expresion -> CADENA .)
    INT             reduce using rule 233 (expresion -> CADENA .)
    FLOAT           reduce using rule 233 (expresion -> CADENA .)
    NOT             reduce using rule 233 (expresion -> CADENA .)
    PAR_I           reduce using rule 233 (expresion -> CADENA .)
    ENTERO          reduce using rule 233 (expresion -> CADENA .)
    DECIMAL         reduce using rule 233 (expresion -> CADENA .)
    TRUE            reduce using rule 233 (expresion -> CADENA .)
    FALSE           reduce using rule 233 (expresion -> CADENA .)
    CHAR_S          reduce using rule 233 (expresion -> CADENA .)
    CADENA          reduce using rule 233 (expresion -> CADENA .)
    IF              reduce using rule 233 (expresion -> CADENA .)
    MATCH           reduce using rule 233 (expresion -> CADENA .)
    LOOP            reduce using rule 233 (expresion -> CADENA .)
    COR_I           reduce using rule 233 (expresion -> CADENA .)
    VEC_L           reduce using rule 233 (expresion -> CADENA .)
    VEC_U           reduce using rule 233 (expresion -> CADENA .)


state 110

    (155) mod_struct -> acceso_struct . IGUAL expresion
    (157) acceso_struct -> acceso_struct . PUNTO expresion
    (156) acceso_struct_exp -> acceso_struct .

  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 217
    PUNTO           shift and go to state 218
    MAS             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOS           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MULTI           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DIV             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MODULO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    D_IGUAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NO_IGUAL        reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    OR              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AND             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AS              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)

  ! PUNTO           [ reduce using rule 156 (acceso_struct_exp -> acceso_struct .) ]


state 111

    (245) expresion -> vec_dato .

    PUNTO           reduce using rule 245 (expresion -> vec_dato .)
    MAS             reduce using rule 245 (expresion -> vec_dato .)
    MENOS           reduce using rule 245 (expresion -> vec_dato .)
    MULTI           reduce using rule 245 (expresion -> vec_dato .)
    DIV             reduce using rule 245 (expresion -> vec_dato .)
    MODULO          reduce using rule 245 (expresion -> vec_dato .)
    MAYOR           reduce using rule 245 (expresion -> vec_dato .)
    MENOR           reduce using rule 245 (expresion -> vec_dato .)
    MAYOR_I         reduce using rule 245 (expresion -> vec_dato .)
    MENOR_I         reduce using rule 245 (expresion -> vec_dato .)
    D_IGUAL         reduce using rule 245 (expresion -> vec_dato .)
    NO_IGUAL        reduce using rule 245 (expresion -> vec_dato .)
    OR              reduce using rule 245 (expresion -> vec_dato .)
    AND             reduce using rule 245 (expresion -> vec_dato .)
    AS              reduce using rule 245 (expresion -> vec_dato .)
    LLV_I           reduce using rule 245 (expresion -> vec_dato .)
    error           reduce using rule 245 (expresion -> vec_dato .)
    PUNTOCOMA       reduce using rule 245 (expresion -> vec_dato .)
    COMA            reduce using rule 245 (expresion -> vec_dato .)
    PAR_D           reduce using rule 245 (expresion -> vec_dato .)
    COR_D           reduce using rule 245 (expresion -> vec_dato .)
    IGUAL           reduce using rule 245 (expresion -> vec_dato .)
    LLV_D           reduce using rule 245 (expresion -> vec_dato .)
    BARRA           reduce using rule 245 (expresion -> vec_dato .)
    GUION_B         reduce using rule 245 (expresion -> vec_dato .)
    ID              reduce using rule 245 (expresion -> vec_dato .)
    INT             reduce using rule 245 (expresion -> vec_dato .)
    FLOAT           reduce using rule 245 (expresion -> vec_dato .)
    NOT             reduce using rule 245 (expresion -> vec_dato .)
    PAR_I           reduce using rule 245 (expresion -> vec_dato .)
    ENTERO          reduce using rule 245 (expresion -> vec_dato .)
    DECIMAL         reduce using rule 245 (expresion -> vec_dato .)
    TRUE            reduce using rule 245 (expresion -> vec_dato .)
    FALSE           reduce using rule 245 (expresion -> vec_dato .)
    CHAR_S          reduce using rule 245 (expresion -> vec_dato .)
    CADENA          reduce using rule 245 (expresion -> vec_dato .)
    IF              reduce using rule 245 (expresion -> vec_dato .)
    MATCH           reduce using rule 245 (expresion -> vec_dato .)
    LOOP            reduce using rule 245 (expresion -> vec_dato .)
    COR_I           reduce using rule 245 (expresion -> vec_dato .)
    VEC_L           reduce using rule 245 (expresion -> vec_dato .)
    VEC_U           reduce using rule 245 (expresion -> vec_dato .)


state 112

    (195) vec_capacity -> VEC_U . D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> VEC_U . D_PUNTO D_PUNTO NEW PAR_I PAR_D

    D_PUNTO         shift and go to state 219


state 113

    (252) expresion -> vec_new .

    PUNTO           reduce using rule 252 (expresion -> vec_new .)
    MAS             reduce using rule 252 (expresion -> vec_new .)
    MENOS           reduce using rule 252 (expresion -> vec_new .)
    MULTI           reduce using rule 252 (expresion -> vec_new .)
    DIV             reduce using rule 252 (expresion -> vec_new .)
    MODULO          reduce using rule 252 (expresion -> vec_new .)
    MAYOR           reduce using rule 252 (expresion -> vec_new .)
    MENOR           reduce using rule 252 (expresion -> vec_new .)
    MAYOR_I         reduce using rule 252 (expresion -> vec_new .)
    MENOR_I         reduce using rule 252 (expresion -> vec_new .)
    D_IGUAL         reduce using rule 252 (expresion -> vec_new .)
    NO_IGUAL        reduce using rule 252 (expresion -> vec_new .)
    OR              reduce using rule 252 (expresion -> vec_new .)
    AND             reduce using rule 252 (expresion -> vec_new .)
    AS              reduce using rule 252 (expresion -> vec_new .)
    LLV_I           reduce using rule 252 (expresion -> vec_new .)
    error           reduce using rule 252 (expresion -> vec_new .)
    PUNTOCOMA       reduce using rule 252 (expresion -> vec_new .)
    COMA            reduce using rule 252 (expresion -> vec_new .)
    PAR_D           reduce using rule 252 (expresion -> vec_new .)
    COR_D           reduce using rule 252 (expresion -> vec_new .)
    IGUAL           reduce using rule 252 (expresion -> vec_new .)
    LLV_D           reduce using rule 252 (expresion -> vec_new .)
    BARRA           reduce using rule 252 (expresion -> vec_new .)
    GUION_B         reduce using rule 252 (expresion -> vec_new .)
    ID              reduce using rule 252 (expresion -> vec_new .)
    INT             reduce using rule 252 (expresion -> vec_new .)
    FLOAT           reduce using rule 252 (expresion -> vec_new .)
    NOT             reduce using rule 252 (expresion -> vec_new .)
    PAR_I           reduce using rule 252 (expresion -> vec_new .)
    ENTERO          reduce using rule 252 (expresion -> vec_new .)
    DECIMAL         reduce using rule 252 (expresion -> vec_new .)
    TRUE            reduce using rule 252 (expresion -> vec_new .)
    FALSE           reduce using rule 252 (expresion -> vec_new .)
    CHAR_S          reduce using rule 252 (expresion -> vec_new .)
    CADENA          reduce using rule 252 (expresion -> vec_new .)
    IF              reduce using rule 252 (expresion -> vec_new .)
    MATCH           reduce using rule 252 (expresion -> vec_new .)
    LOOP            reduce using rule 252 (expresion -> vec_new .)
    COR_I           reduce using rule 252 (expresion -> vec_new .)
    VEC_L           reduce using rule 252 (expresion -> vec_new .)
    VEC_U           reduce using rule 252 (expresion -> vec_new .)


state 114

    (251) expresion -> vec_capacity .

    PUNTO           reduce using rule 251 (expresion -> vec_capacity .)
    MAS             reduce using rule 251 (expresion -> vec_capacity .)
    MENOS           reduce using rule 251 (expresion -> vec_capacity .)
    MULTI           reduce using rule 251 (expresion -> vec_capacity .)
    DIV             reduce using rule 251 (expresion -> vec_capacity .)
    MODULO          reduce using rule 251 (expresion -> vec_capacity .)
    MAYOR           reduce using rule 251 (expresion -> vec_capacity .)
    MENOR           reduce using rule 251 (expresion -> vec_capacity .)
    MAYOR_I         reduce using rule 251 (expresion -> vec_capacity .)
    MENOR_I         reduce using rule 251 (expresion -> vec_capacity .)
    D_IGUAL         reduce using rule 251 (expresion -> vec_capacity .)
    NO_IGUAL        reduce using rule 251 (expresion -> vec_capacity .)
    OR              reduce using rule 251 (expresion -> vec_capacity .)
    AND             reduce using rule 251 (expresion -> vec_capacity .)
    AS              reduce using rule 251 (expresion -> vec_capacity .)
    LLV_I           reduce using rule 251 (expresion -> vec_capacity .)
    error           reduce using rule 251 (expresion -> vec_capacity .)
    PUNTOCOMA       reduce using rule 251 (expresion -> vec_capacity .)
    COMA            reduce using rule 251 (expresion -> vec_capacity .)
    PAR_D           reduce using rule 251 (expresion -> vec_capacity .)
    COR_D           reduce using rule 251 (expresion -> vec_capacity .)
    IGUAL           reduce using rule 251 (expresion -> vec_capacity .)
    LLV_D           reduce using rule 251 (expresion -> vec_capacity .)
    BARRA           reduce using rule 251 (expresion -> vec_capacity .)
    GUION_B         reduce using rule 251 (expresion -> vec_capacity .)
    ID              reduce using rule 251 (expresion -> vec_capacity .)
    INT             reduce using rule 251 (expresion -> vec_capacity .)
    FLOAT           reduce using rule 251 (expresion -> vec_capacity .)
    NOT             reduce using rule 251 (expresion -> vec_capacity .)
    PAR_I           reduce using rule 251 (expresion -> vec_capacity .)
    ENTERO          reduce using rule 251 (expresion -> vec_capacity .)
    DECIMAL         reduce using rule 251 (expresion -> vec_capacity .)
    TRUE            reduce using rule 251 (expresion -> vec_capacity .)
    FALSE           reduce using rule 251 (expresion -> vec_capacity .)
    CHAR_S          reduce using rule 251 (expresion -> vec_capacity .)
    CADENA          reduce using rule 251 (expresion -> vec_capacity .)
    IF              reduce using rule 251 (expresion -> vec_capacity .)
    MATCH           reduce using rule 251 (expresion -> vec_capacity .)
    LOOP            reduce using rule 251 (expresion -> vec_capacity .)
    COR_I           reduce using rule 251 (expresion -> vec_capacity .)
    VEC_L           reduce using rule 251 (expresion -> vec_capacity .)
    VEC_U           reduce using rule 251 (expresion -> vec_capacity .)


state 115

    (52) acceso_mod_exp -> acceso_mod . D_PUNTO D_PUNTO llamada
    (53) acceso_mod -> acceso_mod . D_PUNTO D_PUNTO ID

    D_PUNTO         shift and go to state 220


state 116

    (213) expresion -> MENOS . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 221
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 117

    (214) expresion -> INT . D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 222


state 118

    (215) expresion -> FLOAT . D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 223


state 119

    (228) expresion -> ENTERO .

    PUNTO           reduce using rule 228 (expresion -> ENTERO .)
    MAS             reduce using rule 228 (expresion -> ENTERO .)
    MENOS           reduce using rule 228 (expresion -> ENTERO .)
    MULTI           reduce using rule 228 (expresion -> ENTERO .)
    DIV             reduce using rule 228 (expresion -> ENTERO .)
    MODULO          reduce using rule 228 (expresion -> ENTERO .)
    MAYOR           reduce using rule 228 (expresion -> ENTERO .)
    MENOR           reduce using rule 228 (expresion -> ENTERO .)
    MAYOR_I         reduce using rule 228 (expresion -> ENTERO .)
    MENOR_I         reduce using rule 228 (expresion -> ENTERO .)
    D_IGUAL         reduce using rule 228 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 228 (expresion -> ENTERO .)
    OR              reduce using rule 228 (expresion -> ENTERO .)
    AND             reduce using rule 228 (expresion -> ENTERO .)
    AS              reduce using rule 228 (expresion -> ENTERO .)
    LLV_I           reduce using rule 228 (expresion -> ENTERO .)
    error           reduce using rule 228 (expresion -> ENTERO .)
    PUNTOCOMA       reduce using rule 228 (expresion -> ENTERO .)
    COMA            reduce using rule 228 (expresion -> ENTERO .)
    PAR_D           reduce using rule 228 (expresion -> ENTERO .)
    COR_D           reduce using rule 228 (expresion -> ENTERO .)
    IGUAL           reduce using rule 228 (expresion -> ENTERO .)
    LLV_D           reduce using rule 228 (expresion -> ENTERO .)
    BARRA           reduce using rule 228 (expresion -> ENTERO .)
    GUION_B         reduce using rule 228 (expresion -> ENTERO .)
    ID              reduce using rule 228 (expresion -> ENTERO .)
    INT             reduce using rule 228 (expresion -> ENTERO .)
    FLOAT           reduce using rule 228 (expresion -> ENTERO .)
    NOT             reduce using rule 228 (expresion -> ENTERO .)
    PAR_I           reduce using rule 228 (expresion -> ENTERO .)
    ENTERO          reduce using rule 228 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 228 (expresion -> ENTERO .)
    TRUE            reduce using rule 228 (expresion -> ENTERO .)
    FALSE           reduce using rule 228 (expresion -> ENTERO .)
    CHAR_S          reduce using rule 228 (expresion -> ENTERO .)
    CADENA          reduce using rule 228 (expresion -> ENTERO .)
    IF              reduce using rule 228 (expresion -> ENTERO .)
    MATCH           reduce using rule 228 (expresion -> ENTERO .)
    LOOP            reduce using rule 228 (expresion -> ENTERO .)
    COR_I           reduce using rule 228 (expresion -> ENTERO .)
    VEC_L           reduce using rule 228 (expresion -> ENTERO .)
    VEC_U           reduce using rule 228 (expresion -> ENTERO .)


state 120

    (229) expresion -> DECIMAL .

    PUNTO           reduce using rule 229 (expresion -> DECIMAL .)
    MAS             reduce using rule 229 (expresion -> DECIMAL .)
    MENOS           reduce using rule 229 (expresion -> DECIMAL .)
    MULTI           reduce using rule 229 (expresion -> DECIMAL .)
    DIV             reduce using rule 229 (expresion -> DECIMAL .)
    MODULO          reduce using rule 229 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 229 (expresion -> DECIMAL .)
    MENOR           reduce using rule 229 (expresion -> DECIMAL .)
    MAYOR_I         reduce using rule 229 (expresion -> DECIMAL .)
    MENOR_I         reduce using rule 229 (expresion -> DECIMAL .)
    D_IGUAL         reduce using rule 229 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 229 (expresion -> DECIMAL .)
    OR              reduce using rule 229 (expresion -> DECIMAL .)
    AND             reduce using rule 229 (expresion -> DECIMAL .)
    AS              reduce using rule 229 (expresion -> DECIMAL .)
    LLV_I           reduce using rule 229 (expresion -> DECIMAL .)
    error           reduce using rule 229 (expresion -> DECIMAL .)
    PUNTOCOMA       reduce using rule 229 (expresion -> DECIMAL .)
    COMA            reduce using rule 229 (expresion -> DECIMAL .)
    PAR_D           reduce using rule 229 (expresion -> DECIMAL .)
    COR_D           reduce using rule 229 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 229 (expresion -> DECIMAL .)
    LLV_D           reduce using rule 229 (expresion -> DECIMAL .)
    BARRA           reduce using rule 229 (expresion -> DECIMAL .)
    GUION_B         reduce using rule 229 (expresion -> DECIMAL .)
    ID              reduce using rule 229 (expresion -> DECIMAL .)
    INT             reduce using rule 229 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 229 (expresion -> DECIMAL .)
    NOT             reduce using rule 229 (expresion -> DECIMAL .)
    PAR_I           reduce using rule 229 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 229 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 229 (expresion -> DECIMAL .)
    TRUE            reduce using rule 229 (expresion -> DECIMAL .)
    FALSE           reduce using rule 229 (expresion -> DECIMAL .)
    CHAR_S          reduce using rule 229 (expresion -> DECIMAL .)
    CADENA          reduce using rule 229 (expresion -> DECIMAL .)
    IF              reduce using rule 229 (expresion -> DECIMAL .)
    MATCH           reduce using rule 229 (expresion -> DECIMAL .)
    LOOP            reduce using rule 229 (expresion -> DECIMAL .)
    COR_I           reduce using rule 229 (expresion -> DECIMAL .)
    VEC_L           reduce using rule 229 (expresion -> DECIMAL .)
    VEC_U           reduce using rule 229 (expresion -> DECIMAL .)


state 121

    (230) expresion -> TRUE .

    PUNTO           reduce using rule 230 (expresion -> TRUE .)
    MAS             reduce using rule 230 (expresion -> TRUE .)
    MENOS           reduce using rule 230 (expresion -> TRUE .)
    MULTI           reduce using rule 230 (expresion -> TRUE .)
    DIV             reduce using rule 230 (expresion -> TRUE .)
    MODULO          reduce using rule 230 (expresion -> TRUE .)
    MAYOR           reduce using rule 230 (expresion -> TRUE .)
    MENOR           reduce using rule 230 (expresion -> TRUE .)
    MAYOR_I         reduce using rule 230 (expresion -> TRUE .)
    MENOR_I         reduce using rule 230 (expresion -> TRUE .)
    D_IGUAL         reduce using rule 230 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 230 (expresion -> TRUE .)
    OR              reduce using rule 230 (expresion -> TRUE .)
    AND             reduce using rule 230 (expresion -> TRUE .)
    AS              reduce using rule 230 (expresion -> TRUE .)
    LLV_I           reduce using rule 230 (expresion -> TRUE .)
    error           reduce using rule 230 (expresion -> TRUE .)
    PUNTOCOMA       reduce using rule 230 (expresion -> TRUE .)
    COMA            reduce using rule 230 (expresion -> TRUE .)
    PAR_D           reduce using rule 230 (expresion -> TRUE .)
    COR_D           reduce using rule 230 (expresion -> TRUE .)
    IGUAL           reduce using rule 230 (expresion -> TRUE .)
    LLV_D           reduce using rule 230 (expresion -> TRUE .)
    BARRA           reduce using rule 230 (expresion -> TRUE .)
    GUION_B         reduce using rule 230 (expresion -> TRUE .)
    ID              reduce using rule 230 (expresion -> TRUE .)
    INT             reduce using rule 230 (expresion -> TRUE .)
    FLOAT           reduce using rule 230 (expresion -> TRUE .)
    NOT             reduce using rule 230 (expresion -> TRUE .)
    PAR_I           reduce using rule 230 (expresion -> TRUE .)
    ENTERO          reduce using rule 230 (expresion -> TRUE .)
    DECIMAL         reduce using rule 230 (expresion -> TRUE .)
    TRUE            reduce using rule 230 (expresion -> TRUE .)
    FALSE           reduce using rule 230 (expresion -> TRUE .)
    CHAR_S          reduce using rule 230 (expresion -> TRUE .)
    CADENA          reduce using rule 230 (expresion -> TRUE .)
    IF              reduce using rule 230 (expresion -> TRUE .)
    MATCH           reduce using rule 230 (expresion -> TRUE .)
    LOOP            reduce using rule 230 (expresion -> TRUE .)
    COR_I           reduce using rule 230 (expresion -> TRUE .)
    VEC_L           reduce using rule 230 (expresion -> TRUE .)
    VEC_U           reduce using rule 230 (expresion -> TRUE .)


state 122

    (231) expresion -> FALSE .

    PUNTO           reduce using rule 231 (expresion -> FALSE .)
    MAS             reduce using rule 231 (expresion -> FALSE .)
    MENOS           reduce using rule 231 (expresion -> FALSE .)
    MULTI           reduce using rule 231 (expresion -> FALSE .)
    DIV             reduce using rule 231 (expresion -> FALSE .)
    MODULO          reduce using rule 231 (expresion -> FALSE .)
    MAYOR           reduce using rule 231 (expresion -> FALSE .)
    MENOR           reduce using rule 231 (expresion -> FALSE .)
    MAYOR_I         reduce using rule 231 (expresion -> FALSE .)
    MENOR_I         reduce using rule 231 (expresion -> FALSE .)
    D_IGUAL         reduce using rule 231 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 231 (expresion -> FALSE .)
    OR              reduce using rule 231 (expresion -> FALSE .)
    AND             reduce using rule 231 (expresion -> FALSE .)
    AS              reduce using rule 231 (expresion -> FALSE .)
    LLV_I           reduce using rule 231 (expresion -> FALSE .)
    error           reduce using rule 231 (expresion -> FALSE .)
    PUNTOCOMA       reduce using rule 231 (expresion -> FALSE .)
    COMA            reduce using rule 231 (expresion -> FALSE .)
    PAR_D           reduce using rule 231 (expresion -> FALSE .)
    COR_D           reduce using rule 231 (expresion -> FALSE .)
    IGUAL           reduce using rule 231 (expresion -> FALSE .)
    LLV_D           reduce using rule 231 (expresion -> FALSE .)
    BARRA           reduce using rule 231 (expresion -> FALSE .)
    GUION_B         reduce using rule 231 (expresion -> FALSE .)
    ID              reduce using rule 231 (expresion -> FALSE .)
    INT             reduce using rule 231 (expresion -> FALSE .)
    FLOAT           reduce using rule 231 (expresion -> FALSE .)
    NOT             reduce using rule 231 (expresion -> FALSE .)
    PAR_I           reduce using rule 231 (expresion -> FALSE .)
    ENTERO          reduce using rule 231 (expresion -> FALSE .)
    DECIMAL         reduce using rule 231 (expresion -> FALSE .)
    TRUE            reduce using rule 231 (expresion -> FALSE .)
    FALSE           reduce using rule 231 (expresion -> FALSE .)
    CHAR_S          reduce using rule 231 (expresion -> FALSE .)
    CADENA          reduce using rule 231 (expresion -> FALSE .)
    IF              reduce using rule 231 (expresion -> FALSE .)
    MATCH           reduce using rule 231 (expresion -> FALSE .)
    LOOP            reduce using rule 231 (expresion -> FALSE .)
    COR_I           reduce using rule 231 (expresion -> FALSE .)
    VEC_L           reduce using rule 231 (expresion -> FALSE .)
    VEC_U           reduce using rule 231 (expresion -> FALSE .)


state 123

    (232) expresion -> CHAR_S .

    PUNTO           reduce using rule 232 (expresion -> CHAR_S .)
    MAS             reduce using rule 232 (expresion -> CHAR_S .)
    MENOS           reduce using rule 232 (expresion -> CHAR_S .)
    MULTI           reduce using rule 232 (expresion -> CHAR_S .)
    DIV             reduce using rule 232 (expresion -> CHAR_S .)
    MODULO          reduce using rule 232 (expresion -> CHAR_S .)
    MAYOR           reduce using rule 232 (expresion -> CHAR_S .)
    MENOR           reduce using rule 232 (expresion -> CHAR_S .)
    MAYOR_I         reduce using rule 232 (expresion -> CHAR_S .)
    MENOR_I         reduce using rule 232 (expresion -> CHAR_S .)
    D_IGUAL         reduce using rule 232 (expresion -> CHAR_S .)
    NO_IGUAL        reduce using rule 232 (expresion -> CHAR_S .)
    OR              reduce using rule 232 (expresion -> CHAR_S .)
    AND             reduce using rule 232 (expresion -> CHAR_S .)
    AS              reduce using rule 232 (expresion -> CHAR_S .)
    LLV_I           reduce using rule 232 (expresion -> CHAR_S .)
    error           reduce using rule 232 (expresion -> CHAR_S .)
    PUNTOCOMA       reduce using rule 232 (expresion -> CHAR_S .)
    COMA            reduce using rule 232 (expresion -> CHAR_S .)
    PAR_D           reduce using rule 232 (expresion -> CHAR_S .)
    COR_D           reduce using rule 232 (expresion -> CHAR_S .)
    IGUAL           reduce using rule 232 (expresion -> CHAR_S .)
    LLV_D           reduce using rule 232 (expresion -> CHAR_S .)
    BARRA           reduce using rule 232 (expresion -> CHAR_S .)
    GUION_B         reduce using rule 232 (expresion -> CHAR_S .)
    ID              reduce using rule 232 (expresion -> CHAR_S .)
    INT             reduce using rule 232 (expresion -> CHAR_S .)
    FLOAT           reduce using rule 232 (expresion -> CHAR_S .)
    NOT             reduce using rule 232 (expresion -> CHAR_S .)
    PAR_I           reduce using rule 232 (expresion -> CHAR_S .)
    ENTERO          reduce using rule 232 (expresion -> CHAR_S .)
    DECIMAL         reduce using rule 232 (expresion -> CHAR_S .)
    TRUE            reduce using rule 232 (expresion -> CHAR_S .)
    FALSE           reduce using rule 232 (expresion -> CHAR_S .)
    CHAR_S          reduce using rule 232 (expresion -> CHAR_S .)
    CADENA          reduce using rule 232 (expresion -> CHAR_S .)
    IF              reduce using rule 232 (expresion -> CHAR_S .)
    MATCH           reduce using rule 232 (expresion -> CHAR_S .)
    LOOP            reduce using rule 232 (expresion -> CHAR_S .)
    COR_I           reduce using rule 232 (expresion -> CHAR_S .)
    VEC_L           reduce using rule 232 (expresion -> CHAR_S .)
    VEC_U           reduce using rule 232 (expresion -> CHAR_S .)


state 124

    (237) expresion -> exp_if .

    PUNTO           reduce using rule 237 (expresion -> exp_if .)
    MAS             reduce using rule 237 (expresion -> exp_if .)
    MENOS           reduce using rule 237 (expresion -> exp_if .)
    MULTI           reduce using rule 237 (expresion -> exp_if .)
    DIV             reduce using rule 237 (expresion -> exp_if .)
    MODULO          reduce using rule 237 (expresion -> exp_if .)
    MAYOR           reduce using rule 237 (expresion -> exp_if .)
    MENOR           reduce using rule 237 (expresion -> exp_if .)
    MAYOR_I         reduce using rule 237 (expresion -> exp_if .)
    MENOR_I         reduce using rule 237 (expresion -> exp_if .)
    D_IGUAL         reduce using rule 237 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 237 (expresion -> exp_if .)
    OR              reduce using rule 237 (expresion -> exp_if .)
    AND             reduce using rule 237 (expresion -> exp_if .)
    AS              reduce using rule 237 (expresion -> exp_if .)
    LLV_I           reduce using rule 237 (expresion -> exp_if .)
    error           reduce using rule 237 (expresion -> exp_if .)
    PUNTOCOMA       reduce using rule 237 (expresion -> exp_if .)
    COMA            reduce using rule 237 (expresion -> exp_if .)
    PAR_D           reduce using rule 237 (expresion -> exp_if .)
    COR_D           reduce using rule 237 (expresion -> exp_if .)
    IGUAL           reduce using rule 237 (expresion -> exp_if .)
    LLV_D           reduce using rule 237 (expresion -> exp_if .)
    BARRA           reduce using rule 237 (expresion -> exp_if .)
    GUION_B         reduce using rule 237 (expresion -> exp_if .)
    ID              reduce using rule 237 (expresion -> exp_if .)
    INT             reduce using rule 237 (expresion -> exp_if .)
    FLOAT           reduce using rule 237 (expresion -> exp_if .)
    NOT             reduce using rule 237 (expresion -> exp_if .)
    PAR_I           reduce using rule 237 (expresion -> exp_if .)
    ENTERO          reduce using rule 237 (expresion -> exp_if .)
    DECIMAL         reduce using rule 237 (expresion -> exp_if .)
    TRUE            reduce using rule 237 (expresion -> exp_if .)
    FALSE           reduce using rule 237 (expresion -> exp_if .)
    CHAR_S          reduce using rule 237 (expresion -> exp_if .)
    CADENA          reduce using rule 237 (expresion -> exp_if .)
    IF              reduce using rule 237 (expresion -> exp_if .)
    MATCH           reduce using rule 237 (expresion -> exp_if .)
    LOOP            reduce using rule 237 (expresion -> exp_if .)
    COR_I           reduce using rule 237 (expresion -> exp_if .)
    VEC_L           reduce using rule 237 (expresion -> exp_if .)
    VEC_U           reduce using rule 237 (expresion -> exp_if .)


state 125

    (238) expresion -> match_exp .

    PUNTO           reduce using rule 238 (expresion -> match_exp .)
    MAS             reduce using rule 238 (expresion -> match_exp .)
    MENOS           reduce using rule 238 (expresion -> match_exp .)
    MULTI           reduce using rule 238 (expresion -> match_exp .)
    DIV             reduce using rule 238 (expresion -> match_exp .)
    MODULO          reduce using rule 238 (expresion -> match_exp .)
    MAYOR           reduce using rule 238 (expresion -> match_exp .)
    MENOR           reduce using rule 238 (expresion -> match_exp .)
    MAYOR_I         reduce using rule 238 (expresion -> match_exp .)
    MENOR_I         reduce using rule 238 (expresion -> match_exp .)
    D_IGUAL         reduce using rule 238 (expresion -> match_exp .)
    NO_IGUAL        reduce using rule 238 (expresion -> match_exp .)
    OR              reduce using rule 238 (expresion -> match_exp .)
    AND             reduce using rule 238 (expresion -> match_exp .)
    AS              reduce using rule 238 (expresion -> match_exp .)
    LLV_I           reduce using rule 238 (expresion -> match_exp .)
    error           reduce using rule 238 (expresion -> match_exp .)
    PUNTOCOMA       reduce using rule 238 (expresion -> match_exp .)
    COMA            reduce using rule 238 (expresion -> match_exp .)
    PAR_D           reduce using rule 238 (expresion -> match_exp .)
    COR_D           reduce using rule 238 (expresion -> match_exp .)
    IGUAL           reduce using rule 238 (expresion -> match_exp .)
    LLV_D           reduce using rule 238 (expresion -> match_exp .)
    BARRA           reduce using rule 238 (expresion -> match_exp .)
    GUION_B         reduce using rule 238 (expresion -> match_exp .)
    ID              reduce using rule 238 (expresion -> match_exp .)
    INT             reduce using rule 238 (expresion -> match_exp .)
    FLOAT           reduce using rule 238 (expresion -> match_exp .)
    NOT             reduce using rule 238 (expresion -> match_exp .)
    PAR_I           reduce using rule 238 (expresion -> match_exp .)
    ENTERO          reduce using rule 238 (expresion -> match_exp .)
    DECIMAL         reduce using rule 238 (expresion -> match_exp .)
    TRUE            reduce using rule 238 (expresion -> match_exp .)
    FALSE           reduce using rule 238 (expresion -> match_exp .)
    CHAR_S          reduce using rule 238 (expresion -> match_exp .)
    CADENA          reduce using rule 238 (expresion -> match_exp .)
    IF              reduce using rule 238 (expresion -> match_exp .)
    MATCH           reduce using rule 238 (expresion -> match_exp .)
    LOOP            reduce using rule 238 (expresion -> match_exp .)
    COR_I           reduce using rule 238 (expresion -> match_exp .)
    VEC_L           reduce using rule 238 (expresion -> match_exp .)
    VEC_U           reduce using rule 238 (expresion -> match_exp .)


state 126

    (239) expresion -> loop_exp .

    PUNTO           reduce using rule 239 (expresion -> loop_exp .)
    MAS             reduce using rule 239 (expresion -> loop_exp .)
    MENOS           reduce using rule 239 (expresion -> loop_exp .)
    MULTI           reduce using rule 239 (expresion -> loop_exp .)
    DIV             reduce using rule 239 (expresion -> loop_exp .)
    MODULO          reduce using rule 239 (expresion -> loop_exp .)
    MAYOR           reduce using rule 239 (expresion -> loop_exp .)
    MENOR           reduce using rule 239 (expresion -> loop_exp .)
    MAYOR_I         reduce using rule 239 (expresion -> loop_exp .)
    MENOR_I         reduce using rule 239 (expresion -> loop_exp .)
    D_IGUAL         reduce using rule 239 (expresion -> loop_exp .)
    NO_IGUAL        reduce using rule 239 (expresion -> loop_exp .)
    OR              reduce using rule 239 (expresion -> loop_exp .)
    AND             reduce using rule 239 (expresion -> loop_exp .)
    AS              reduce using rule 239 (expresion -> loop_exp .)
    LLV_I           reduce using rule 239 (expresion -> loop_exp .)
    error           reduce using rule 239 (expresion -> loop_exp .)
    PUNTOCOMA       reduce using rule 239 (expresion -> loop_exp .)
    COMA            reduce using rule 239 (expresion -> loop_exp .)
    PAR_D           reduce using rule 239 (expresion -> loop_exp .)
    COR_D           reduce using rule 239 (expresion -> loop_exp .)
    IGUAL           reduce using rule 239 (expresion -> loop_exp .)
    LLV_D           reduce using rule 239 (expresion -> loop_exp .)
    BARRA           reduce using rule 239 (expresion -> loop_exp .)
    GUION_B         reduce using rule 239 (expresion -> loop_exp .)
    ID              reduce using rule 239 (expresion -> loop_exp .)
    INT             reduce using rule 239 (expresion -> loop_exp .)
    FLOAT           reduce using rule 239 (expresion -> loop_exp .)
    NOT             reduce using rule 239 (expresion -> loop_exp .)
    PAR_I           reduce using rule 239 (expresion -> loop_exp .)
    ENTERO          reduce using rule 239 (expresion -> loop_exp .)
    DECIMAL         reduce using rule 239 (expresion -> loop_exp .)
    TRUE            reduce using rule 239 (expresion -> loop_exp .)
    FALSE           reduce using rule 239 (expresion -> loop_exp .)
    CHAR_S          reduce using rule 239 (expresion -> loop_exp .)
    CADENA          reduce using rule 239 (expresion -> loop_exp .)
    IF              reduce using rule 239 (expresion -> loop_exp .)
    MATCH           reduce using rule 239 (expresion -> loop_exp .)
    LOOP            reduce using rule 239 (expresion -> loop_exp .)
    COR_I           reduce using rule 239 (expresion -> loop_exp .)
    VEC_L           reduce using rule 239 (expresion -> loop_exp .)
    VEC_U           reduce using rule 239 (expresion -> loop_exp .)


state 127

    (241) expresion -> acceso_struct_exp .

    PUNTO           reduce using rule 241 (expresion -> acceso_struct_exp .)
    MAS             reduce using rule 241 (expresion -> acceso_struct_exp .)
    MENOS           reduce using rule 241 (expresion -> acceso_struct_exp .)
    MULTI           reduce using rule 241 (expresion -> acceso_struct_exp .)
    DIV             reduce using rule 241 (expresion -> acceso_struct_exp .)
    MODULO          reduce using rule 241 (expresion -> acceso_struct_exp .)
    MAYOR           reduce using rule 241 (expresion -> acceso_struct_exp .)
    MENOR           reduce using rule 241 (expresion -> acceso_struct_exp .)
    MAYOR_I         reduce using rule 241 (expresion -> acceso_struct_exp .)
    MENOR_I         reduce using rule 241 (expresion -> acceso_struct_exp .)
    D_IGUAL         reduce using rule 241 (expresion -> acceso_struct_exp .)
    NO_IGUAL        reduce using rule 241 (expresion -> acceso_struct_exp .)
    OR              reduce using rule 241 (expresion -> acceso_struct_exp .)
    AND             reduce using rule 241 (expresion -> acceso_struct_exp .)
    AS              reduce using rule 241 (expresion -> acceso_struct_exp .)
    LLV_I           reduce using rule 241 (expresion -> acceso_struct_exp .)
    error           reduce using rule 241 (expresion -> acceso_struct_exp .)
    PUNTOCOMA       reduce using rule 241 (expresion -> acceso_struct_exp .)
    COMA            reduce using rule 241 (expresion -> acceso_struct_exp .)
    PAR_D           reduce using rule 241 (expresion -> acceso_struct_exp .)
    COR_D           reduce using rule 241 (expresion -> acceso_struct_exp .)
    IGUAL           reduce using rule 241 (expresion -> acceso_struct_exp .)
    LLV_D           reduce using rule 241 (expresion -> acceso_struct_exp .)
    BARRA           reduce using rule 241 (expresion -> acceso_struct_exp .)
    GUION_B         reduce using rule 241 (expresion -> acceso_struct_exp .)
    ID              reduce using rule 241 (expresion -> acceso_struct_exp .)
    INT             reduce using rule 241 (expresion -> acceso_struct_exp .)
    FLOAT           reduce using rule 241 (expresion -> acceso_struct_exp .)
    NOT             reduce using rule 241 (expresion -> acceso_struct_exp .)
    PAR_I           reduce using rule 241 (expresion -> acceso_struct_exp .)
    ENTERO          reduce using rule 241 (expresion -> acceso_struct_exp .)
    DECIMAL         reduce using rule 241 (expresion -> acceso_struct_exp .)
    TRUE            reduce using rule 241 (expresion -> acceso_struct_exp .)
    FALSE           reduce using rule 241 (expresion -> acceso_struct_exp .)
    CHAR_S          reduce using rule 241 (expresion -> acceso_struct_exp .)
    CADENA          reduce using rule 241 (expresion -> acceso_struct_exp .)
    IF              reduce using rule 241 (expresion -> acceso_struct_exp .)
    MATCH           reduce using rule 241 (expresion -> acceso_struct_exp .)
    LOOP            reduce using rule 241 (expresion -> acceso_struct_exp .)
    COR_I           reduce using rule 241 (expresion -> acceso_struct_exp .)
    VEC_L           reduce using rule 241 (expresion -> acceso_struct_exp .)
    VEC_U           reduce using rule 241 (expresion -> acceso_struct_exp .)


state 128

    (242) expresion -> acceso_arreglo .

    PUNTO           reduce using rule 242 (expresion -> acceso_arreglo .)
    MAS             reduce using rule 242 (expresion -> acceso_arreglo .)
    MENOS           reduce using rule 242 (expresion -> acceso_arreglo .)
    MULTI           reduce using rule 242 (expresion -> acceso_arreglo .)
    DIV             reduce using rule 242 (expresion -> acceso_arreglo .)
    MODULO          reduce using rule 242 (expresion -> acceso_arreglo .)
    MAYOR           reduce using rule 242 (expresion -> acceso_arreglo .)
    MENOR           reduce using rule 242 (expresion -> acceso_arreglo .)
    MAYOR_I         reduce using rule 242 (expresion -> acceso_arreglo .)
    MENOR_I         reduce using rule 242 (expresion -> acceso_arreglo .)
    D_IGUAL         reduce using rule 242 (expresion -> acceso_arreglo .)
    NO_IGUAL        reduce using rule 242 (expresion -> acceso_arreglo .)
    OR              reduce using rule 242 (expresion -> acceso_arreglo .)
    AND             reduce using rule 242 (expresion -> acceso_arreglo .)
    AS              reduce using rule 242 (expresion -> acceso_arreglo .)
    LLV_I           reduce using rule 242 (expresion -> acceso_arreglo .)
    error           reduce using rule 242 (expresion -> acceso_arreglo .)
    PUNTOCOMA       reduce using rule 242 (expresion -> acceso_arreglo .)
    COMA            reduce using rule 242 (expresion -> acceso_arreglo .)
    PAR_D           reduce using rule 242 (expresion -> acceso_arreglo .)
    COR_D           reduce using rule 242 (expresion -> acceso_arreglo .)
    IGUAL           reduce using rule 242 (expresion -> acceso_arreglo .)
    LLV_D           reduce using rule 242 (expresion -> acceso_arreglo .)
    BARRA           reduce using rule 242 (expresion -> acceso_arreglo .)
    GUION_B         reduce using rule 242 (expresion -> acceso_arreglo .)
    ID              reduce using rule 242 (expresion -> acceso_arreglo .)
    INT             reduce using rule 242 (expresion -> acceso_arreglo .)
    FLOAT           reduce using rule 242 (expresion -> acceso_arreglo .)
    NOT             reduce using rule 242 (expresion -> acceso_arreglo .)
    PAR_I           reduce using rule 242 (expresion -> acceso_arreglo .)
    ENTERO          reduce using rule 242 (expresion -> acceso_arreglo .)
    DECIMAL         reduce using rule 242 (expresion -> acceso_arreglo .)
    TRUE            reduce using rule 242 (expresion -> acceso_arreglo .)
    FALSE           reduce using rule 242 (expresion -> acceso_arreglo .)
    CHAR_S          reduce using rule 242 (expresion -> acceso_arreglo .)
    CADENA          reduce using rule 242 (expresion -> acceso_arreglo .)
    IF              reduce using rule 242 (expresion -> acceso_arreglo .)
    MATCH           reduce using rule 242 (expresion -> acceso_arreglo .)
    LOOP            reduce using rule 242 (expresion -> acceso_arreglo .)
    COR_I           reduce using rule 242 (expresion -> acceso_arreglo .)
    VEC_L           reduce using rule 242 (expresion -> acceso_arreglo .)
    VEC_U           reduce using rule 242 (expresion -> acceso_arreglo .)


state 129

    (243) expresion -> chars .

    PUNTO           reduce using rule 243 (expresion -> chars .)
    MAS             reduce using rule 243 (expresion -> chars .)
    MENOS           reduce using rule 243 (expresion -> chars .)
    MULTI           reduce using rule 243 (expresion -> chars .)
    DIV             reduce using rule 243 (expresion -> chars .)
    MODULO          reduce using rule 243 (expresion -> chars .)
    MAYOR           reduce using rule 243 (expresion -> chars .)
    MENOR           reduce using rule 243 (expresion -> chars .)
    MAYOR_I         reduce using rule 243 (expresion -> chars .)
    MENOR_I         reduce using rule 243 (expresion -> chars .)
    D_IGUAL         reduce using rule 243 (expresion -> chars .)
    NO_IGUAL        reduce using rule 243 (expresion -> chars .)
    OR              reduce using rule 243 (expresion -> chars .)
    AND             reduce using rule 243 (expresion -> chars .)
    AS              reduce using rule 243 (expresion -> chars .)
    LLV_I           reduce using rule 243 (expresion -> chars .)
    error           reduce using rule 243 (expresion -> chars .)
    PUNTOCOMA       reduce using rule 243 (expresion -> chars .)
    COMA            reduce using rule 243 (expresion -> chars .)
    PAR_D           reduce using rule 243 (expresion -> chars .)
    COR_D           reduce using rule 243 (expresion -> chars .)
    IGUAL           reduce using rule 243 (expresion -> chars .)
    LLV_D           reduce using rule 243 (expresion -> chars .)
    BARRA           reduce using rule 243 (expresion -> chars .)
    GUION_B         reduce using rule 243 (expresion -> chars .)
    ID              reduce using rule 243 (expresion -> chars .)
    INT             reduce using rule 243 (expresion -> chars .)
    FLOAT           reduce using rule 243 (expresion -> chars .)
    NOT             reduce using rule 243 (expresion -> chars .)
    PAR_I           reduce using rule 243 (expresion -> chars .)
    ENTERO          reduce using rule 243 (expresion -> chars .)
    DECIMAL         reduce using rule 243 (expresion -> chars .)
    TRUE            reduce using rule 243 (expresion -> chars .)
    FALSE           reduce using rule 243 (expresion -> chars .)
    CHAR_S          reduce using rule 243 (expresion -> chars .)
    CADENA          reduce using rule 243 (expresion -> chars .)
    IF              reduce using rule 243 (expresion -> chars .)
    MATCH           reduce using rule 243 (expresion -> chars .)
    LOOP            reduce using rule 243 (expresion -> chars .)
    COR_I           reduce using rule 243 (expresion -> chars .)
    VEC_L           reduce using rule 243 (expresion -> chars .)
    VEC_U           reduce using rule 243 (expresion -> chars .)


state 130

    (247) expresion -> vec_contains .

    PUNTO           reduce using rule 247 (expresion -> vec_contains .)
    MAS             reduce using rule 247 (expresion -> vec_contains .)
    MENOS           reduce using rule 247 (expresion -> vec_contains .)
    MULTI           reduce using rule 247 (expresion -> vec_contains .)
    DIV             reduce using rule 247 (expresion -> vec_contains .)
    MODULO          reduce using rule 247 (expresion -> vec_contains .)
    MAYOR           reduce using rule 247 (expresion -> vec_contains .)
    MENOR           reduce using rule 247 (expresion -> vec_contains .)
    MAYOR_I         reduce using rule 247 (expresion -> vec_contains .)
    MENOR_I         reduce using rule 247 (expresion -> vec_contains .)
    D_IGUAL         reduce using rule 247 (expresion -> vec_contains .)
    NO_IGUAL        reduce using rule 247 (expresion -> vec_contains .)
    OR              reduce using rule 247 (expresion -> vec_contains .)
    AND             reduce using rule 247 (expresion -> vec_contains .)
    AS              reduce using rule 247 (expresion -> vec_contains .)
    LLV_I           reduce using rule 247 (expresion -> vec_contains .)
    error           reduce using rule 247 (expresion -> vec_contains .)
    PUNTOCOMA       reduce using rule 247 (expresion -> vec_contains .)
    COMA            reduce using rule 247 (expresion -> vec_contains .)
    PAR_D           reduce using rule 247 (expresion -> vec_contains .)
    COR_D           reduce using rule 247 (expresion -> vec_contains .)
    IGUAL           reduce using rule 247 (expresion -> vec_contains .)
    LLV_D           reduce using rule 247 (expresion -> vec_contains .)
    BARRA           reduce using rule 247 (expresion -> vec_contains .)
    GUION_B         reduce using rule 247 (expresion -> vec_contains .)
    ID              reduce using rule 247 (expresion -> vec_contains .)
    INT             reduce using rule 247 (expresion -> vec_contains .)
    FLOAT           reduce using rule 247 (expresion -> vec_contains .)
    NOT             reduce using rule 247 (expresion -> vec_contains .)
    PAR_I           reduce using rule 247 (expresion -> vec_contains .)
    ENTERO          reduce using rule 247 (expresion -> vec_contains .)
    DECIMAL         reduce using rule 247 (expresion -> vec_contains .)
    TRUE            reduce using rule 247 (expresion -> vec_contains .)
    FALSE           reduce using rule 247 (expresion -> vec_contains .)
    CHAR_S          reduce using rule 247 (expresion -> vec_contains .)
    CADENA          reduce using rule 247 (expresion -> vec_contains .)
    IF              reduce using rule 247 (expresion -> vec_contains .)
    MATCH           reduce using rule 247 (expresion -> vec_contains .)
    LOOP            reduce using rule 247 (expresion -> vec_contains .)
    COR_I           reduce using rule 247 (expresion -> vec_contains .)
    VEC_L           reduce using rule 247 (expresion -> vec_contains .)
    VEC_U           reduce using rule 247 (expresion -> vec_contains .)


state 131

    (248) expresion -> vec_get_capacity .

    PUNTO           reduce using rule 248 (expresion -> vec_get_capacity .)
    MAS             reduce using rule 248 (expresion -> vec_get_capacity .)
    MENOS           reduce using rule 248 (expresion -> vec_get_capacity .)
    MULTI           reduce using rule 248 (expresion -> vec_get_capacity .)
    DIV             reduce using rule 248 (expresion -> vec_get_capacity .)
    MODULO          reduce using rule 248 (expresion -> vec_get_capacity .)
    MAYOR           reduce using rule 248 (expresion -> vec_get_capacity .)
    MENOR           reduce using rule 248 (expresion -> vec_get_capacity .)
    MAYOR_I         reduce using rule 248 (expresion -> vec_get_capacity .)
    MENOR_I         reduce using rule 248 (expresion -> vec_get_capacity .)
    D_IGUAL         reduce using rule 248 (expresion -> vec_get_capacity .)
    NO_IGUAL        reduce using rule 248 (expresion -> vec_get_capacity .)
    OR              reduce using rule 248 (expresion -> vec_get_capacity .)
    AND             reduce using rule 248 (expresion -> vec_get_capacity .)
    AS              reduce using rule 248 (expresion -> vec_get_capacity .)
    LLV_I           reduce using rule 248 (expresion -> vec_get_capacity .)
    error           reduce using rule 248 (expresion -> vec_get_capacity .)
    PUNTOCOMA       reduce using rule 248 (expresion -> vec_get_capacity .)
    COMA            reduce using rule 248 (expresion -> vec_get_capacity .)
    PAR_D           reduce using rule 248 (expresion -> vec_get_capacity .)
    COR_D           reduce using rule 248 (expresion -> vec_get_capacity .)
    IGUAL           reduce using rule 248 (expresion -> vec_get_capacity .)
    LLV_D           reduce using rule 248 (expresion -> vec_get_capacity .)
    BARRA           reduce using rule 248 (expresion -> vec_get_capacity .)
    GUION_B         reduce using rule 248 (expresion -> vec_get_capacity .)
    ID              reduce using rule 248 (expresion -> vec_get_capacity .)
    INT             reduce using rule 248 (expresion -> vec_get_capacity .)
    FLOAT           reduce using rule 248 (expresion -> vec_get_capacity .)
    NOT             reduce using rule 248 (expresion -> vec_get_capacity .)
    PAR_I           reduce using rule 248 (expresion -> vec_get_capacity .)
    ENTERO          reduce using rule 248 (expresion -> vec_get_capacity .)
    DECIMAL         reduce using rule 248 (expresion -> vec_get_capacity .)
    TRUE            reduce using rule 248 (expresion -> vec_get_capacity .)
    FALSE           reduce using rule 248 (expresion -> vec_get_capacity .)
    CHAR_S          reduce using rule 248 (expresion -> vec_get_capacity .)
    CADENA          reduce using rule 248 (expresion -> vec_get_capacity .)
    IF              reduce using rule 248 (expresion -> vec_get_capacity .)
    MATCH           reduce using rule 248 (expresion -> vec_get_capacity .)
    LOOP            reduce using rule 248 (expresion -> vec_get_capacity .)
    COR_I           reduce using rule 248 (expresion -> vec_get_capacity .)
    VEC_L           reduce using rule 248 (expresion -> vec_get_capacity .)
    VEC_U           reduce using rule 248 (expresion -> vec_get_capacity .)


state 132

    (249) expresion -> length .

    PUNTO           reduce using rule 249 (expresion -> length .)
    MAS             reduce using rule 249 (expresion -> length .)
    MENOS           reduce using rule 249 (expresion -> length .)
    MULTI           reduce using rule 249 (expresion -> length .)
    DIV             reduce using rule 249 (expresion -> length .)
    MODULO          reduce using rule 249 (expresion -> length .)
    MAYOR           reduce using rule 249 (expresion -> length .)
    MENOR           reduce using rule 249 (expresion -> length .)
    MAYOR_I         reduce using rule 249 (expresion -> length .)
    MENOR_I         reduce using rule 249 (expresion -> length .)
    D_IGUAL         reduce using rule 249 (expresion -> length .)
    NO_IGUAL        reduce using rule 249 (expresion -> length .)
    OR              reduce using rule 249 (expresion -> length .)
    AND             reduce using rule 249 (expresion -> length .)
    AS              reduce using rule 249 (expresion -> length .)
    LLV_I           reduce using rule 249 (expresion -> length .)
    error           reduce using rule 249 (expresion -> length .)
    PUNTOCOMA       reduce using rule 249 (expresion -> length .)
    COMA            reduce using rule 249 (expresion -> length .)
    PAR_D           reduce using rule 249 (expresion -> length .)
    COR_D           reduce using rule 249 (expresion -> length .)
    IGUAL           reduce using rule 249 (expresion -> length .)
    LLV_D           reduce using rule 249 (expresion -> length .)
    BARRA           reduce using rule 249 (expresion -> length .)
    GUION_B         reduce using rule 249 (expresion -> length .)
    ID              reduce using rule 249 (expresion -> length .)
    INT             reduce using rule 249 (expresion -> length .)
    FLOAT           reduce using rule 249 (expresion -> length .)
    NOT             reduce using rule 249 (expresion -> length .)
    PAR_I           reduce using rule 249 (expresion -> length .)
    ENTERO          reduce using rule 249 (expresion -> length .)
    DECIMAL         reduce using rule 249 (expresion -> length .)
    TRUE            reduce using rule 249 (expresion -> length .)
    FALSE           reduce using rule 249 (expresion -> length .)
    CHAR_S          reduce using rule 249 (expresion -> length .)
    CADENA          reduce using rule 249 (expresion -> length .)
    IF              reduce using rule 249 (expresion -> length .)
    MATCH           reduce using rule 249 (expresion -> length .)
    LOOP            reduce using rule 249 (expresion -> length .)
    COR_I           reduce using rule 249 (expresion -> length .)
    VEC_L           reduce using rule 249 (expresion -> length .)
    VEC_U           reduce using rule 249 (expresion -> length .)


state 133

    (250) expresion -> clone .

    PUNTO           reduce using rule 250 (expresion -> clone .)
    MAS             reduce using rule 250 (expresion -> clone .)
    MENOS           reduce using rule 250 (expresion -> clone .)
    MULTI           reduce using rule 250 (expresion -> clone .)
    DIV             reduce using rule 250 (expresion -> clone .)
    MODULO          reduce using rule 250 (expresion -> clone .)
    MAYOR           reduce using rule 250 (expresion -> clone .)
    MENOR           reduce using rule 250 (expresion -> clone .)
    MAYOR_I         reduce using rule 250 (expresion -> clone .)
    MENOR_I         reduce using rule 250 (expresion -> clone .)
    D_IGUAL         reduce using rule 250 (expresion -> clone .)
    NO_IGUAL        reduce using rule 250 (expresion -> clone .)
    OR              reduce using rule 250 (expresion -> clone .)
    AND             reduce using rule 250 (expresion -> clone .)
    AS              reduce using rule 250 (expresion -> clone .)
    LLV_I           reduce using rule 250 (expresion -> clone .)
    error           reduce using rule 250 (expresion -> clone .)
    PUNTOCOMA       reduce using rule 250 (expresion -> clone .)
    COMA            reduce using rule 250 (expresion -> clone .)
    PAR_D           reduce using rule 250 (expresion -> clone .)
    COR_D           reduce using rule 250 (expresion -> clone .)
    IGUAL           reduce using rule 250 (expresion -> clone .)
    LLV_D           reduce using rule 250 (expresion -> clone .)
    BARRA           reduce using rule 250 (expresion -> clone .)
    GUION_B         reduce using rule 250 (expresion -> clone .)
    ID              reduce using rule 250 (expresion -> clone .)
    INT             reduce using rule 250 (expresion -> clone .)
    FLOAT           reduce using rule 250 (expresion -> clone .)
    NOT             reduce using rule 250 (expresion -> clone .)
    PAR_I           reduce using rule 250 (expresion -> clone .)
    ENTERO          reduce using rule 250 (expresion -> clone .)
    DECIMAL         reduce using rule 250 (expresion -> clone .)
    TRUE            reduce using rule 250 (expresion -> clone .)
    FALSE           reduce using rule 250 (expresion -> clone .)
    CHAR_S          reduce using rule 250 (expresion -> clone .)
    CADENA          reduce using rule 250 (expresion -> clone .)
    IF              reduce using rule 250 (expresion -> clone .)
    MATCH           reduce using rule 250 (expresion -> clone .)
    LOOP            reduce using rule 250 (expresion -> clone .)
    COR_I           reduce using rule 250 (expresion -> clone .)
    VEC_L           reduce using rule 250 (expresion -> clone .)
    VEC_U           reduce using rule 250 (expresion -> clone .)


state 134

    (165) datos_arreglo -> COR_I . exp_list COR_D
    (166) datos_arreglo -> COR_I . expresion PUNTOCOMA expresion COR_D
    (57) exp_list -> . exp_list COMA expresion
    (58) exp_list -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    exp_list                       shift and go to state 224
    expresion                      shift and go to state 225
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 135

    (196) vec_dato -> VEC_L . NOT COR_I exp_list COR_D
    (197) vec_dato -> VEC_L . NOT COR_I expresion PUNTOCOMA expresion COR_D

    NOT             shift and go to state 226


state 136

    (67) parametro -> MUT ID D_PUNTO . tipo_funcion
    (68) parametro -> MUT ID D_PUNTO . AMP tipo_funcion
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    AMP             shift and go to state 228
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 227
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 137

    (148) campo -> ID D_PUNTO tipo_funcion .

    LLV_D           reduce using rule 148 (campo -> ID D_PUNTO tipo_funcion .)
    COMA            reduce using rule 148 (campo -> ID D_PUNTO tipo_funcion .)


state 138

    (133) tipo_funcion -> AMP . STR

    STR             shift and go to state 142


state 139

    (146) lista_campos -> lista_campos COMA campo .

    LLV_D           reduce using rule 146 (lista_campos -> lista_campos COMA campo .)
    COMA            reduce using rule 146 (lista_campos -> lista_campos COMA campo .)


state 140

    (149) campo -> PUB ID D_PUNTO . tipo_funcion
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    AMP             shift and go to state 138
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 229
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 141

    (66) parametro -> ID D_PUNTO AMP MUT . tipo_funcion
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    AMP             shift and go to state 138
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 230
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 142

    (133) tipo_funcion -> AMP STR .

    PAR_D           reduce using rule 133 (tipo_funcion -> AMP STR .)
    COMA            reduce using rule 133 (tipo_funcion -> AMP STR .)
    LLV_D           reduce using rule 133 (tipo_funcion -> AMP STR .)
    error           reduce using rule 133 (tipo_funcion -> AMP STR .)
    LLV_I           reduce using rule 133 (tipo_funcion -> AMP STR .)


state 143

    (138) tipo_funcion -> VEC_U MENOR . tipo MAYOR
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    tipo                           shift and go to state 231
    acceso_mod                     shift and go to state 154

state 144

    (142) dimensiones_arreglo_tipo -> COR_I . dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> COR_I . tipo PUNTOCOMA expresion COR_D
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    COR_I           shift and go to state 144
    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    dimensiones_arreglo_tipo       shift and go to state 145
    tipo                           shift and go to state 232
    acceso_mod                     shift and go to state 154

state 145

    (142) dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo . PUNTOCOMA expresion COR_D

    PUNTOCOMA       shift and go to state 233


state 146

    (143) dimensiones_arreglo_tipo -> COR_I tipo . PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> COR_I tipo . COR_D

    PUNTOCOMA       shift and go to state 234
    COR_D           shift and go to state 235


state 147

    (121) tipo -> INT .

    PUNTOCOMA       reduce using rule 121 (tipo -> INT .)
    COR_D           reduce using rule 121 (tipo -> INT .)
    MAYOR           reduce using rule 121 (tipo -> INT .)
    PUNTO           reduce using rule 121 (tipo -> INT .)
    MAS             reduce using rule 121 (tipo -> INT .)
    MENOS           reduce using rule 121 (tipo -> INT .)
    MULTI           reduce using rule 121 (tipo -> INT .)
    DIV             reduce using rule 121 (tipo -> INT .)
    MODULO          reduce using rule 121 (tipo -> INT .)
    MENOR           reduce using rule 121 (tipo -> INT .)
    MAYOR_I         reduce using rule 121 (tipo -> INT .)
    MENOR_I         reduce using rule 121 (tipo -> INT .)
    D_IGUAL         reduce using rule 121 (tipo -> INT .)
    NO_IGUAL        reduce using rule 121 (tipo -> INT .)
    OR              reduce using rule 121 (tipo -> INT .)
    AND             reduce using rule 121 (tipo -> INT .)
    AS              reduce using rule 121 (tipo -> INT .)
    LLV_I           reduce using rule 121 (tipo -> INT .)
    error           reduce using rule 121 (tipo -> INT .)
    COMA            reduce using rule 121 (tipo -> INT .)
    PAR_D           reduce using rule 121 (tipo -> INT .)
    IGUAL           reduce using rule 121 (tipo -> INT .)
    LLV_D           reduce using rule 121 (tipo -> INT .)
    BARRA           reduce using rule 121 (tipo -> INT .)
    GUION_B         reduce using rule 121 (tipo -> INT .)
    ID              reduce using rule 121 (tipo -> INT .)
    INT             reduce using rule 121 (tipo -> INT .)
    FLOAT           reduce using rule 121 (tipo -> INT .)
    NOT             reduce using rule 121 (tipo -> INT .)
    PAR_I           reduce using rule 121 (tipo -> INT .)
    ENTERO          reduce using rule 121 (tipo -> INT .)
    DECIMAL         reduce using rule 121 (tipo -> INT .)
    TRUE            reduce using rule 121 (tipo -> INT .)
    FALSE           reduce using rule 121 (tipo -> INT .)
    CHAR_S          reduce using rule 121 (tipo -> INT .)
    CADENA          reduce using rule 121 (tipo -> INT .)
    IF              reduce using rule 121 (tipo -> INT .)
    MATCH           reduce using rule 121 (tipo -> INT .)
    LOOP            reduce using rule 121 (tipo -> INT .)
    COR_I           reduce using rule 121 (tipo -> INT .)
    VEC_L           reduce using rule 121 (tipo -> INT .)
    VEC_U           reduce using rule 121 (tipo -> INT .)


state 148

    (122) tipo -> FLOAT .

    PUNTOCOMA       reduce using rule 122 (tipo -> FLOAT .)
    COR_D           reduce using rule 122 (tipo -> FLOAT .)
    MAYOR           reduce using rule 122 (tipo -> FLOAT .)
    PUNTO           reduce using rule 122 (tipo -> FLOAT .)
    MAS             reduce using rule 122 (tipo -> FLOAT .)
    MENOS           reduce using rule 122 (tipo -> FLOAT .)
    MULTI           reduce using rule 122 (tipo -> FLOAT .)
    DIV             reduce using rule 122 (tipo -> FLOAT .)
    MODULO          reduce using rule 122 (tipo -> FLOAT .)
    MENOR           reduce using rule 122 (tipo -> FLOAT .)
    MAYOR_I         reduce using rule 122 (tipo -> FLOAT .)
    MENOR_I         reduce using rule 122 (tipo -> FLOAT .)
    D_IGUAL         reduce using rule 122 (tipo -> FLOAT .)
    NO_IGUAL        reduce using rule 122 (tipo -> FLOAT .)
    OR              reduce using rule 122 (tipo -> FLOAT .)
    AND             reduce using rule 122 (tipo -> FLOAT .)
    AS              reduce using rule 122 (tipo -> FLOAT .)
    LLV_I           reduce using rule 122 (tipo -> FLOAT .)
    error           reduce using rule 122 (tipo -> FLOAT .)
    COMA            reduce using rule 122 (tipo -> FLOAT .)
    PAR_D           reduce using rule 122 (tipo -> FLOAT .)
    IGUAL           reduce using rule 122 (tipo -> FLOAT .)
    LLV_D           reduce using rule 122 (tipo -> FLOAT .)
    BARRA           reduce using rule 122 (tipo -> FLOAT .)
    GUION_B         reduce using rule 122 (tipo -> FLOAT .)
    ID              reduce using rule 122 (tipo -> FLOAT .)
    INT             reduce using rule 122 (tipo -> FLOAT .)
    FLOAT           reduce using rule 122 (tipo -> FLOAT .)
    NOT             reduce using rule 122 (tipo -> FLOAT .)
    PAR_I           reduce using rule 122 (tipo -> FLOAT .)
    ENTERO          reduce using rule 122 (tipo -> FLOAT .)
    DECIMAL         reduce using rule 122 (tipo -> FLOAT .)
    TRUE            reduce using rule 122 (tipo -> FLOAT .)
    FALSE           reduce using rule 122 (tipo -> FLOAT .)
    CHAR_S          reduce using rule 122 (tipo -> FLOAT .)
    CADENA          reduce using rule 122 (tipo -> FLOAT .)
    IF              reduce using rule 122 (tipo -> FLOAT .)
    MATCH           reduce using rule 122 (tipo -> FLOAT .)
    LOOP            reduce using rule 122 (tipo -> FLOAT .)
    COR_I           reduce using rule 122 (tipo -> FLOAT .)
    VEC_L           reduce using rule 122 (tipo -> FLOAT .)
    VEC_U           reduce using rule 122 (tipo -> FLOAT .)


state 149

    (123) tipo -> BOOL .

    PUNTOCOMA       reduce using rule 123 (tipo -> BOOL .)
    COR_D           reduce using rule 123 (tipo -> BOOL .)
    MAYOR           reduce using rule 123 (tipo -> BOOL .)
    PUNTO           reduce using rule 123 (tipo -> BOOL .)
    MAS             reduce using rule 123 (tipo -> BOOL .)
    MENOS           reduce using rule 123 (tipo -> BOOL .)
    MULTI           reduce using rule 123 (tipo -> BOOL .)
    DIV             reduce using rule 123 (tipo -> BOOL .)
    MODULO          reduce using rule 123 (tipo -> BOOL .)
    MENOR           reduce using rule 123 (tipo -> BOOL .)
    MAYOR_I         reduce using rule 123 (tipo -> BOOL .)
    MENOR_I         reduce using rule 123 (tipo -> BOOL .)
    D_IGUAL         reduce using rule 123 (tipo -> BOOL .)
    NO_IGUAL        reduce using rule 123 (tipo -> BOOL .)
    OR              reduce using rule 123 (tipo -> BOOL .)
    AND             reduce using rule 123 (tipo -> BOOL .)
    AS              reduce using rule 123 (tipo -> BOOL .)
    LLV_I           reduce using rule 123 (tipo -> BOOL .)
    error           reduce using rule 123 (tipo -> BOOL .)
    COMA            reduce using rule 123 (tipo -> BOOL .)
    PAR_D           reduce using rule 123 (tipo -> BOOL .)
    IGUAL           reduce using rule 123 (tipo -> BOOL .)
    LLV_D           reduce using rule 123 (tipo -> BOOL .)
    BARRA           reduce using rule 123 (tipo -> BOOL .)
    GUION_B         reduce using rule 123 (tipo -> BOOL .)
    ID              reduce using rule 123 (tipo -> BOOL .)
    INT             reduce using rule 123 (tipo -> BOOL .)
    FLOAT           reduce using rule 123 (tipo -> BOOL .)
    NOT             reduce using rule 123 (tipo -> BOOL .)
    PAR_I           reduce using rule 123 (tipo -> BOOL .)
    ENTERO          reduce using rule 123 (tipo -> BOOL .)
    DECIMAL         reduce using rule 123 (tipo -> BOOL .)
    TRUE            reduce using rule 123 (tipo -> BOOL .)
    FALSE           reduce using rule 123 (tipo -> BOOL .)
    CHAR_S          reduce using rule 123 (tipo -> BOOL .)
    CADENA          reduce using rule 123 (tipo -> BOOL .)
    IF              reduce using rule 123 (tipo -> BOOL .)
    MATCH           reduce using rule 123 (tipo -> BOOL .)
    LOOP            reduce using rule 123 (tipo -> BOOL .)
    COR_I           reduce using rule 123 (tipo -> BOOL .)
    VEC_L           reduce using rule 123 (tipo -> BOOL .)
    VEC_U           reduce using rule 123 (tipo -> BOOL .)


state 150

    (124) tipo -> AMP . STR

    STR             shift and go to state 236


state 151

    (125) tipo -> STRING .

    PUNTOCOMA       reduce using rule 125 (tipo -> STRING .)
    COR_D           reduce using rule 125 (tipo -> STRING .)
    MAYOR           reduce using rule 125 (tipo -> STRING .)
    PUNTO           reduce using rule 125 (tipo -> STRING .)
    MAS             reduce using rule 125 (tipo -> STRING .)
    MENOS           reduce using rule 125 (tipo -> STRING .)
    MULTI           reduce using rule 125 (tipo -> STRING .)
    DIV             reduce using rule 125 (tipo -> STRING .)
    MODULO          reduce using rule 125 (tipo -> STRING .)
    MENOR           reduce using rule 125 (tipo -> STRING .)
    MAYOR_I         reduce using rule 125 (tipo -> STRING .)
    MENOR_I         reduce using rule 125 (tipo -> STRING .)
    D_IGUAL         reduce using rule 125 (tipo -> STRING .)
    NO_IGUAL        reduce using rule 125 (tipo -> STRING .)
    OR              reduce using rule 125 (tipo -> STRING .)
    AND             reduce using rule 125 (tipo -> STRING .)
    AS              reduce using rule 125 (tipo -> STRING .)
    LLV_I           reduce using rule 125 (tipo -> STRING .)
    error           reduce using rule 125 (tipo -> STRING .)
    COMA            reduce using rule 125 (tipo -> STRING .)
    PAR_D           reduce using rule 125 (tipo -> STRING .)
    IGUAL           reduce using rule 125 (tipo -> STRING .)
    LLV_D           reduce using rule 125 (tipo -> STRING .)
    BARRA           reduce using rule 125 (tipo -> STRING .)
    GUION_B         reduce using rule 125 (tipo -> STRING .)
    ID              reduce using rule 125 (tipo -> STRING .)
    INT             reduce using rule 125 (tipo -> STRING .)
    FLOAT           reduce using rule 125 (tipo -> STRING .)
    NOT             reduce using rule 125 (tipo -> STRING .)
    PAR_I           reduce using rule 125 (tipo -> STRING .)
    ENTERO          reduce using rule 125 (tipo -> STRING .)
    DECIMAL         reduce using rule 125 (tipo -> STRING .)
    TRUE            reduce using rule 125 (tipo -> STRING .)
    FALSE           reduce using rule 125 (tipo -> STRING .)
    CHAR_S          reduce using rule 125 (tipo -> STRING .)
    CADENA          reduce using rule 125 (tipo -> STRING .)
    IF              reduce using rule 125 (tipo -> STRING .)
    MATCH           reduce using rule 125 (tipo -> STRING .)
    LOOP            reduce using rule 125 (tipo -> STRING .)
    COR_I           reduce using rule 125 (tipo -> STRING .)
    VEC_L           reduce using rule 125 (tipo -> STRING .)
    VEC_U           reduce using rule 125 (tipo -> STRING .)


state 152

    (126) tipo -> CHAR .

    PUNTOCOMA       reduce using rule 126 (tipo -> CHAR .)
    COR_D           reduce using rule 126 (tipo -> CHAR .)
    MAYOR           reduce using rule 126 (tipo -> CHAR .)
    PUNTO           reduce using rule 126 (tipo -> CHAR .)
    MAS             reduce using rule 126 (tipo -> CHAR .)
    MENOS           reduce using rule 126 (tipo -> CHAR .)
    MULTI           reduce using rule 126 (tipo -> CHAR .)
    DIV             reduce using rule 126 (tipo -> CHAR .)
    MODULO          reduce using rule 126 (tipo -> CHAR .)
    MENOR           reduce using rule 126 (tipo -> CHAR .)
    MAYOR_I         reduce using rule 126 (tipo -> CHAR .)
    MENOR_I         reduce using rule 126 (tipo -> CHAR .)
    D_IGUAL         reduce using rule 126 (tipo -> CHAR .)
    NO_IGUAL        reduce using rule 126 (tipo -> CHAR .)
    OR              reduce using rule 126 (tipo -> CHAR .)
    AND             reduce using rule 126 (tipo -> CHAR .)
    AS              reduce using rule 126 (tipo -> CHAR .)
    LLV_I           reduce using rule 126 (tipo -> CHAR .)
    error           reduce using rule 126 (tipo -> CHAR .)
    COMA            reduce using rule 126 (tipo -> CHAR .)
    PAR_D           reduce using rule 126 (tipo -> CHAR .)
    IGUAL           reduce using rule 126 (tipo -> CHAR .)
    LLV_D           reduce using rule 126 (tipo -> CHAR .)
    BARRA           reduce using rule 126 (tipo -> CHAR .)
    GUION_B         reduce using rule 126 (tipo -> CHAR .)
    ID              reduce using rule 126 (tipo -> CHAR .)
    INT             reduce using rule 126 (tipo -> CHAR .)
    FLOAT           reduce using rule 126 (tipo -> CHAR .)
    NOT             reduce using rule 126 (tipo -> CHAR .)
    PAR_I           reduce using rule 126 (tipo -> CHAR .)
    ENTERO          reduce using rule 126 (tipo -> CHAR .)
    DECIMAL         reduce using rule 126 (tipo -> CHAR .)
    TRUE            reduce using rule 126 (tipo -> CHAR .)
    FALSE           reduce using rule 126 (tipo -> CHAR .)
    CHAR_S          reduce using rule 126 (tipo -> CHAR .)
    CADENA          reduce using rule 126 (tipo -> CHAR .)
    IF              reduce using rule 126 (tipo -> CHAR .)
    MATCH           reduce using rule 126 (tipo -> CHAR .)
    LOOP            reduce using rule 126 (tipo -> CHAR .)
    COR_I           reduce using rule 126 (tipo -> CHAR .)
    VEC_L           reduce using rule 126 (tipo -> CHAR .)
    VEC_U           reduce using rule 126 (tipo -> CHAR .)


state 153

    (127) tipo -> VOID .

    PUNTOCOMA       reduce using rule 127 (tipo -> VOID .)
    COR_D           reduce using rule 127 (tipo -> VOID .)
    MAYOR           reduce using rule 127 (tipo -> VOID .)
    PUNTO           reduce using rule 127 (tipo -> VOID .)
    MAS             reduce using rule 127 (tipo -> VOID .)
    MENOS           reduce using rule 127 (tipo -> VOID .)
    MULTI           reduce using rule 127 (tipo -> VOID .)
    DIV             reduce using rule 127 (tipo -> VOID .)
    MODULO          reduce using rule 127 (tipo -> VOID .)
    MENOR           reduce using rule 127 (tipo -> VOID .)
    MAYOR_I         reduce using rule 127 (tipo -> VOID .)
    MENOR_I         reduce using rule 127 (tipo -> VOID .)
    D_IGUAL         reduce using rule 127 (tipo -> VOID .)
    NO_IGUAL        reduce using rule 127 (tipo -> VOID .)
    OR              reduce using rule 127 (tipo -> VOID .)
    AND             reduce using rule 127 (tipo -> VOID .)
    AS              reduce using rule 127 (tipo -> VOID .)
    LLV_I           reduce using rule 127 (tipo -> VOID .)
    error           reduce using rule 127 (tipo -> VOID .)
    COMA            reduce using rule 127 (tipo -> VOID .)
    PAR_D           reduce using rule 127 (tipo -> VOID .)
    IGUAL           reduce using rule 127 (tipo -> VOID .)
    LLV_D           reduce using rule 127 (tipo -> VOID .)
    BARRA           reduce using rule 127 (tipo -> VOID .)
    GUION_B         reduce using rule 127 (tipo -> VOID .)
    ID              reduce using rule 127 (tipo -> VOID .)
    INT             reduce using rule 127 (tipo -> VOID .)
    FLOAT           reduce using rule 127 (tipo -> VOID .)
    NOT             reduce using rule 127 (tipo -> VOID .)
    PAR_I           reduce using rule 127 (tipo -> VOID .)
    ENTERO          reduce using rule 127 (tipo -> VOID .)
    DECIMAL         reduce using rule 127 (tipo -> VOID .)
    TRUE            reduce using rule 127 (tipo -> VOID .)
    FALSE           reduce using rule 127 (tipo -> VOID .)
    CHAR_S          reduce using rule 127 (tipo -> VOID .)
    CADENA          reduce using rule 127 (tipo -> VOID .)
    IF              reduce using rule 127 (tipo -> VOID .)
    MATCH           reduce using rule 127 (tipo -> VOID .)
    LOOP            reduce using rule 127 (tipo -> VOID .)
    COR_I           reduce using rule 127 (tipo -> VOID .)
    VEC_L           reduce using rule 127 (tipo -> VOID .)
    VEC_U           reduce using rule 127 (tipo -> VOID .)


state 154

    (128) tipo -> acceso_mod .
    (53) acceso_mod -> acceso_mod . D_PUNTO D_PUNTO ID

    PUNTOCOMA       reduce using rule 128 (tipo -> acceso_mod .)
    COR_D           reduce using rule 128 (tipo -> acceso_mod .)
    MAYOR           reduce using rule 128 (tipo -> acceso_mod .)
    PUNTO           reduce using rule 128 (tipo -> acceso_mod .)
    MAS             reduce using rule 128 (tipo -> acceso_mod .)
    MENOS           reduce using rule 128 (tipo -> acceso_mod .)
    MULTI           reduce using rule 128 (tipo -> acceso_mod .)
    DIV             reduce using rule 128 (tipo -> acceso_mod .)
    MODULO          reduce using rule 128 (tipo -> acceso_mod .)
    MENOR           reduce using rule 128 (tipo -> acceso_mod .)
    MAYOR_I         reduce using rule 128 (tipo -> acceso_mod .)
    MENOR_I         reduce using rule 128 (tipo -> acceso_mod .)
    D_IGUAL         reduce using rule 128 (tipo -> acceso_mod .)
    NO_IGUAL        reduce using rule 128 (tipo -> acceso_mod .)
    OR              reduce using rule 128 (tipo -> acceso_mod .)
    AND             reduce using rule 128 (tipo -> acceso_mod .)
    AS              reduce using rule 128 (tipo -> acceso_mod .)
    LLV_I           reduce using rule 128 (tipo -> acceso_mod .)
    error           reduce using rule 128 (tipo -> acceso_mod .)
    COMA            reduce using rule 128 (tipo -> acceso_mod .)
    PAR_D           reduce using rule 128 (tipo -> acceso_mod .)
    IGUAL           reduce using rule 128 (tipo -> acceso_mod .)
    LLV_D           reduce using rule 128 (tipo -> acceso_mod .)
    BARRA           reduce using rule 128 (tipo -> acceso_mod .)
    GUION_B         reduce using rule 128 (tipo -> acceso_mod .)
    ID              reduce using rule 128 (tipo -> acceso_mod .)
    INT             reduce using rule 128 (tipo -> acceso_mod .)
    FLOAT           reduce using rule 128 (tipo -> acceso_mod .)
    NOT             reduce using rule 128 (tipo -> acceso_mod .)
    PAR_I           reduce using rule 128 (tipo -> acceso_mod .)
    ENTERO          reduce using rule 128 (tipo -> acceso_mod .)
    DECIMAL         reduce using rule 128 (tipo -> acceso_mod .)
    TRUE            reduce using rule 128 (tipo -> acceso_mod .)
    FALSE           reduce using rule 128 (tipo -> acceso_mod .)
    CHAR_S          reduce using rule 128 (tipo -> acceso_mod .)
    CADENA          reduce using rule 128 (tipo -> acceso_mod .)
    IF              reduce using rule 128 (tipo -> acceso_mod .)
    MATCH           reduce using rule 128 (tipo -> acceso_mod .)
    LOOP            reduce using rule 128 (tipo -> acceso_mod .)
    COR_I           reduce using rule 128 (tipo -> acceso_mod .)
    VEC_L           reduce using rule 128 (tipo -> acceso_mod .)
    VEC_U           reduce using rule 128 (tipo -> acceso_mod .)
    D_PUNTO         shift and go to state 237


state 155

    (129) tipo -> USIZE .

    PUNTOCOMA       reduce using rule 129 (tipo -> USIZE .)
    COR_D           reduce using rule 129 (tipo -> USIZE .)
    MAYOR           reduce using rule 129 (tipo -> USIZE .)
    PUNTO           reduce using rule 129 (tipo -> USIZE .)
    MAS             reduce using rule 129 (tipo -> USIZE .)
    MENOS           reduce using rule 129 (tipo -> USIZE .)
    MULTI           reduce using rule 129 (tipo -> USIZE .)
    DIV             reduce using rule 129 (tipo -> USIZE .)
    MODULO          reduce using rule 129 (tipo -> USIZE .)
    MENOR           reduce using rule 129 (tipo -> USIZE .)
    MAYOR_I         reduce using rule 129 (tipo -> USIZE .)
    MENOR_I         reduce using rule 129 (tipo -> USIZE .)
    D_IGUAL         reduce using rule 129 (tipo -> USIZE .)
    NO_IGUAL        reduce using rule 129 (tipo -> USIZE .)
    OR              reduce using rule 129 (tipo -> USIZE .)
    AND             reduce using rule 129 (tipo -> USIZE .)
    AS              reduce using rule 129 (tipo -> USIZE .)
    LLV_I           reduce using rule 129 (tipo -> USIZE .)
    error           reduce using rule 129 (tipo -> USIZE .)
    COMA            reduce using rule 129 (tipo -> USIZE .)
    PAR_D           reduce using rule 129 (tipo -> USIZE .)
    IGUAL           reduce using rule 129 (tipo -> USIZE .)
    LLV_D           reduce using rule 129 (tipo -> USIZE .)
    BARRA           reduce using rule 129 (tipo -> USIZE .)
    GUION_B         reduce using rule 129 (tipo -> USIZE .)
    ID              reduce using rule 129 (tipo -> USIZE .)
    INT             reduce using rule 129 (tipo -> USIZE .)
    FLOAT           reduce using rule 129 (tipo -> USIZE .)
    NOT             reduce using rule 129 (tipo -> USIZE .)
    PAR_I           reduce using rule 129 (tipo -> USIZE .)
    ENTERO          reduce using rule 129 (tipo -> USIZE .)
    DECIMAL         reduce using rule 129 (tipo -> USIZE .)
    TRUE            reduce using rule 129 (tipo -> USIZE .)
    FALSE           reduce using rule 129 (tipo -> USIZE .)
    CHAR_S          reduce using rule 129 (tipo -> USIZE .)
    CADENA          reduce using rule 129 (tipo -> USIZE .)
    IF              reduce using rule 129 (tipo -> USIZE .)
    MATCH           reduce using rule 129 (tipo -> USIZE .)
    LOOP            reduce using rule 129 (tipo -> USIZE .)
    COR_I           reduce using rule 129 (tipo -> USIZE .)
    VEC_L           reduce using rule 129 (tipo -> USIZE .)
    VEC_U           reduce using rule 129 (tipo -> USIZE .)


state 156

    (54) acceso_mod -> ID .

    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    PUNTOCOMA       reduce using rule 54 (acceso_mod -> ID .)
    COR_D           reduce using rule 54 (acceso_mod -> ID .)
    MAYOR           reduce using rule 54 (acceso_mod -> ID .)
    PUNTO           reduce using rule 54 (acceso_mod -> ID .)
    MAS             reduce using rule 54 (acceso_mod -> ID .)
    MENOS           reduce using rule 54 (acceso_mod -> ID .)
    MULTI           reduce using rule 54 (acceso_mod -> ID .)
    DIV             reduce using rule 54 (acceso_mod -> ID .)
    MODULO          reduce using rule 54 (acceso_mod -> ID .)
    MENOR           reduce using rule 54 (acceso_mod -> ID .)
    MAYOR_I         reduce using rule 54 (acceso_mod -> ID .)
    MENOR_I         reduce using rule 54 (acceso_mod -> ID .)
    D_IGUAL         reduce using rule 54 (acceso_mod -> ID .)
    NO_IGUAL        reduce using rule 54 (acceso_mod -> ID .)
    OR              reduce using rule 54 (acceso_mod -> ID .)
    AND             reduce using rule 54 (acceso_mod -> ID .)
    AS              reduce using rule 54 (acceso_mod -> ID .)
    LLV_I           reduce using rule 54 (acceso_mod -> ID .)
    error           reduce using rule 54 (acceso_mod -> ID .)
    COMA            reduce using rule 54 (acceso_mod -> ID .)
    PAR_D           reduce using rule 54 (acceso_mod -> ID .)
    IGUAL           reduce using rule 54 (acceso_mod -> ID .)
    LLV_D           reduce using rule 54 (acceso_mod -> ID .)
    BARRA           reduce using rule 54 (acceso_mod -> ID .)
    GUION_B         reduce using rule 54 (acceso_mod -> ID .)
    ID              reduce using rule 54 (acceso_mod -> ID .)
    INT             reduce using rule 54 (acceso_mod -> ID .)
    FLOAT           reduce using rule 54 (acceso_mod -> ID .)
    NOT             reduce using rule 54 (acceso_mod -> ID .)
    PAR_I           reduce using rule 54 (acceso_mod -> ID .)
    ENTERO          reduce using rule 54 (acceso_mod -> ID .)
    DECIMAL         reduce using rule 54 (acceso_mod -> ID .)
    TRUE            reduce using rule 54 (acceso_mod -> ID .)
    FALSE           reduce using rule 54 (acceso_mod -> ID .)
    CHAR_S          reduce using rule 54 (acceso_mod -> ID .)
    CADENA          reduce using rule 54 (acceso_mod -> ID .)
    IF              reduce using rule 54 (acceso_mod -> ID .)
    MATCH           reduce using rule 54 (acceso_mod -> ID .)
    LOOP            reduce using rule 54 (acceso_mod -> ID .)
    COR_I           reduce using rule 54 (acceso_mod -> ID .)
    VEC_L           reduce using rule 54 (acceso_mod -> ID .)
    VEC_U           reduce using rule 54 (acceso_mod -> ID .)


state 157

    (61) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR . tipo_funcion statement
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    AMP             shift and go to state 138
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 238
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 158

    (62) funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion . statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 239

state 159

    (82) statement -> LLV_I instrucciones LLV_D .

    FN              reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    STRUCT          reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MOD             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    $end            reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    LLV_D           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    PUB             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    LET             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    ID              reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    IF              reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MATCH           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    WHILE           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    LOOP            reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    FOR             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    BREAK           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    CONTINUE        reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    RETURN          reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    PRINT           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MENOS           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    INT             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    FLOAT           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    NOT             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    PAR_I           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    ENTERO          reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    DECIMAL         reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    TRUE            reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    FALSE           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    CHAR_S          reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    CADENA          reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    COR_I           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    VEC_L           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    VEC_U           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    PUNTO           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MAS             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MULTI           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    DIV             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MODULO          reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MENOR           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MAYOR_I         reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    MENOR_I         reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    D_IGUAL         reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    NO_IGUAL        reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    OR              reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    AND             reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    AS              reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    COMA            reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    GUION_B         reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    ELSE            reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    LLV_I           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    error           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    PUNTOCOMA       reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    PAR_D           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    COR_D           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    IGUAL           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)
    BARRA           reduce using rule 82 (statement -> LLV_I instrucciones LLV_D .)


state 160

    (2) instrucciones -> instrucciones instruccion .

    LLV_D           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PAR_I           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR_S          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    COR_I           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VEC_L           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VEC_U           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 161

    (4) instruccion -> declaracion_arreglo PUNTOCOMA .

    LLV_D           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    LET             reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    IF              reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    MATCH           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    LOOP            reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    FOR             reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    BREAK           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    RETURN          reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    PRINT           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    MENOS           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    INT             reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    FLOAT           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    NOT             reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    PAR_I           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    ENTERO          reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    DECIMAL         reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    TRUE            reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    FALSE           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    CHAR_S          reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    CADENA          reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    COR_I           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    VEC_L           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)
    VEC_U           reduce using rule 4 (instruccion -> declaracion_arreglo PUNTOCOMA .)


state 162

    (5) instruccion -> declaracion_struct PUNTOCOMA .

    LLV_D           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    LET             reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    ID              reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    IF              reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    MATCH           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    WHILE           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    LOOP            reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    FOR             reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    BREAK           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    RETURN          reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    PRINT           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    MENOS           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    INT             reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    FLOAT           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    NOT             reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    PAR_I           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    ENTERO          reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    DECIMAL         reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    TRUE            reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    FALSE           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    CHAR_S          reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    CADENA          reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    COR_I           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    VEC_L           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)
    VEC_U           reduce using rule 5 (instruccion -> declaracion_struct PUNTOCOMA .)


state 163

    (6) instruccion -> asignacion PUNTOCOMA .

    LLV_D           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    LET             reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    MATCH           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    LOOP            reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    FOR             reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    BREAK           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    RETURN          reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    PRINT           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    MENOS           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    INT             reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    FLOAT           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    NOT             reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    PAR_I           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    ENTERO          reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    DECIMAL         reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    TRUE            reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    FALSE           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    CHAR_S          reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    CADENA          reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    COR_I           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    VEC_L           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)
    VEC_U           reduce using rule 6 (instruccion -> asignacion PUNTOCOMA .)


state 164

    (12) instruccion -> break PUNTOCOMA .

    LLV_D           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    LET             reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    IF              reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    MATCH           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    LOOP            reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    FOR             reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    BREAK           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    RETURN          reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    PRINT           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    MENOS           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    INT             reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    FLOAT           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    NOT             reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    PAR_I           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    ENTERO          reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    DECIMAL         reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    TRUE            reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    FALSE           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    CHAR_S          reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    CADENA          reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    COR_I           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    VEC_L           reduce using rule 12 (instruccion -> break PUNTOCOMA .)
    VEC_U           reduce using rule 12 (instruccion -> break PUNTOCOMA .)


state 165

    (13) instruccion -> continue PUNTOCOMA .

    LLV_D           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    LET             reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    ID              reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    IF              reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    MATCH           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    WHILE           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    LOOP            reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    FOR             reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    BREAK           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    RETURN          reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    PRINT           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    MENOS           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    INT             reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    FLOAT           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    NOT             reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    PAR_I           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    ENTERO          reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    DECIMAL         reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    TRUE            reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    FALSE           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    CHAR_S          reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    CADENA          reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    COR_I           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    VEC_L           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)
    VEC_U           reduce using rule 13 (instruccion -> continue PUNTOCOMA .)


state 166

    (14) instruccion -> return PUNTOCOMA .

    LLV_D           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    LET             reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    ID              reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    IF              reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    MATCH           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    WHILE           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    LOOP            reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    FOR             reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    BREAK           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    RETURN          reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    PRINT           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    MENOS           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    INT             reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    FLOAT           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    NOT             reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    PAR_I           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    ENTERO          reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    DECIMAL         reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    TRUE            reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    FALSE           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    CHAR_S          reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    CADENA          reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    COR_I           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    VEC_L           reduce using rule 14 (instruccion -> return PUNTOCOMA .)
    VEC_U           reduce using rule 14 (instruccion -> return PUNTOCOMA .)


state 167

    (15) instruccion -> print PUNTOCOMA .

    LLV_D           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    LET             reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    ID              reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    IF              reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    MATCH           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    WHILE           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    LOOP            reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    FOR             reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    BREAK           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    RETURN          reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    PRINT           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    MENOS           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    INT             reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    FLOAT           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    NOT             reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    PAR_I           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    ENTERO          reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    DECIMAL         reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    TRUE            reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    FALSE           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    CHAR_S          reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    CADENA          reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    COR_I           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    VEC_L           reduce using rule 15 (instruccion -> print PUNTOCOMA .)
    VEC_U           reduce using rule 15 (instruccion -> print PUNTOCOMA .)


state 168

    (16) instruccion -> llamada PUNTOCOMA .

    LLV_D           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    LET             reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    ID              reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    IF              reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    MATCH           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    WHILE           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    LOOP            reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    FOR             reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    BREAK           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    CONTINUE        reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    RETURN          reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    PRINT           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    MENOS           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    INT             reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    FLOAT           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    NOT             reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    PAR_I           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    ENTERO          reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    DECIMAL         reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    TRUE            reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    FALSE           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    CHAR_S          reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    CADENA          reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    COR_I           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    VEC_L           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)
    VEC_U           reduce using rule 16 (instruccion -> llamada PUNTOCOMA .)


state 169

    (17) instruccion -> mod_struct PUNTOCOMA .

    LLV_D           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    LET             reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    ID              reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    IF              reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    MATCH           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    WHILE           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    LOOP            reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    FOR             reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    BREAK           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    CONTINUE        reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    RETURN          reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    PRINT           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    MENOS           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    INT             reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    FLOAT           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    NOT             reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    PAR_I           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    ENTERO          reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    DECIMAL         reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    TRUE            reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    FALSE           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    CHAR_S          reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    CADENA          reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    COR_I           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    VEC_L           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)
    VEC_U           reduce using rule 17 (instruccion -> mod_struct PUNTOCOMA .)


state 170

    (18) instruccion -> mod_arreglo PUNTOCOMA .

    LLV_D           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    LET             reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    ID              reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    IF              reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    MATCH           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    WHILE           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    LOOP            reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    FOR             reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    BREAK           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    CONTINUE        reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    RETURN          reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    PRINT           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    MENOS           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    INT             reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    FLOAT           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    NOT             reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    PAR_I           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    ENTERO          reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    DECIMAL         reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    TRUE            reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    FALSE           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    CHAR_S          reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    CADENA          reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    COR_I           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    VEC_L           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)
    VEC_U           reduce using rule 18 (instruccion -> mod_arreglo PUNTOCOMA .)


state 171

    (19) instruccion -> declaracion_vector PUNTOCOMA .

    LLV_D           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    LET             reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    ID              reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    IF              reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    MATCH           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    WHILE           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    LOOP            reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    FOR             reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    BREAK           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    RETURN          reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    PRINT           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    MENOS           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    INT             reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    FLOAT           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    NOT             reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    PAR_I           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    ENTERO          reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    DECIMAL         reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    TRUE            reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    FALSE           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    CHAR_S          reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    CADENA          reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    COR_I           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    VEC_L           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)
    VEC_U           reduce using rule 19 (instruccion -> declaracion_vector PUNTOCOMA .)


state 172

    (20) instruccion -> vec_push PUNTOCOMA .

    LLV_D           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    LET             reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    ID              reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    IF              reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    MATCH           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    WHILE           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    LOOP            reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    FOR             reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    BREAK           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    CONTINUE        reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    RETURN          reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    PRINT           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    MENOS           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    INT             reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    FLOAT           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    NOT             reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    PAR_I           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    ENTERO          reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    DECIMAL         reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    TRUE            reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    FALSE           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    CHAR_S          reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    CADENA          reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    COR_I           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    VEC_L           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)
    VEC_U           reduce using rule 20 (instruccion -> vec_push PUNTOCOMA .)


state 173

    (21) instruccion -> vec_insert PUNTOCOMA .

    LLV_D           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    LET             reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    ID              reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    IF              reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    MATCH           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    WHILE           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    LOOP            reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    FOR             reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    BREAK           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    RETURN          reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    PRINT           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    MENOS           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    INT             reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    FLOAT           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    NOT             reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    PAR_I           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    ENTERO          reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    DECIMAL         reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    TRUE            reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    FALSE           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    CHAR_S          reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    CADENA          reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    COR_I           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    VEC_L           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)
    VEC_U           reduce using rule 21 (instruccion -> vec_insert PUNTOCOMA .)


state 174

    (22) instruccion -> vec_remove PUNTOCOMA .

    LLV_D           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    LET             reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    ID              reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    IF              reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    MATCH           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    WHILE           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    LOOP            reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    FOR             reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    BREAK           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    CONTINUE        reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    RETURN          reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    PRINT           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    MENOS           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    INT             reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    FLOAT           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    NOT             reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    PAR_I           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    ENTERO          reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    DECIMAL         reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    TRUE            reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    FALSE           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    CHAR_S          reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    CADENA          reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    COR_I           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    VEC_L           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)
    VEC_U           reduce using rule 22 (instruccion -> vec_remove PUNTOCOMA .)


state 175

    (23) instruccion -> acceso_mod_exp PUNTOCOMA .

    LLV_D           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    LET             reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    ID              reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    IF              reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    MATCH           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    WHILE           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    LOOP            reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    FOR             reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    BREAK           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    CONTINUE        reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    RETURN          reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    PRINT           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    MENOS           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    INT             reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    FLOAT           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    NOT             reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    PAR_I           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    ENTERO          reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    DECIMAL         reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    TRUE            reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    FALSE           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    CHAR_S          reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    CADENA          reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    COR_I           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    VEC_L           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)
    VEC_U           reduce using rule 23 (instruccion -> acceso_mod_exp PUNTOCOMA .)


state 176

    (159) declaracion_arreglo -> LET ID . D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (162) declaracion_arreglo -> LET ID . IGUAL datos_arreglo
    (150) declaracion_struct -> LET ID . IGUAL instancia
    (116) asignacion -> LET ID . IGUAL expresion
    (118) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion
    (172) declaracion_vector -> LET ID . IGUAL vec_dato
    (174) declaracion_vector -> LET ID . D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> LET ID . D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> LET ID . D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity

    D_PUNTO         shift and go to state 240
    IGUAL           shift and go to state 241


state 177

    (160) declaracion_arreglo -> LET MUT . ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> LET MUT . ID IGUAL datos_arreglo
    (151) declaracion_struct -> LET MUT . ID IGUAL instancia
    (117) asignacion -> LET MUT . ID IGUAL expresion
    (119) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion
    (173) declaracion_vector -> LET MUT . ID IGUAL vec_dato
    (175) declaracion_vector -> LET MUT . ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (177) declaracion_vector -> LET MUT . ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (179) declaracion_vector -> LET MUT . ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity

    ID              shift and go to state 242


state 178

    (120) asignacion -> ID IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 243
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 179

    (71) llamada -> ID PAR_I . PAR_D
    (72) llamada -> ID PAR_I . exp_list_llamada PAR_D
    (73) exp_list_llamada -> . exp_list_llamada COMA exp_llamada
    (74) exp_list_llamada -> . exp_llamada
    (75) exp_llamada -> . AMP MUT expresion
    (76) exp_llamada -> . AMP expresion
    (77) exp_llamada -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    PAR_D           shift and go to state 244
    AMP             shift and go to state 247
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    exp_list_llamada               shift and go to state 245
    exp_llamada                    shift and go to state 246
    expresion                      shift and go to state 248
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 180

    (171) mod_arreglo -> ID dimensiones . IGUAL expresion
    (167) acceso_arreglo -> ID dimensiones .
    (168) dimensiones -> dimensiones . dimension
    (170) dimension -> . COR_I expresion COR_D

    IGUAL           shift and go to state 249
    PUNTO           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAS             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOS           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MULTI           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    DIV             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MODULO          reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAYOR           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOR           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAYOR_I         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOR_I         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    D_IGUAL         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    NO_IGUAL        reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    OR              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    AND             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    AS              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    COR_I           shift and go to state 183

    dimension                      shift and go to state 250

state 181

    (198) vec_push -> ID PUNTO . PUSH PAR_I expresion PAR_D
    (199) vec_insert -> ID PUNTO . INSERT PAR_I expresion COMA expresion PAR_D
    (200) vec_remove -> ID PUNTO . REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID PUNTO . CAPACITY PAR_I PAR_D
    (204) length -> ID PUNTO . LEN PAR_I PAR_D

    PUSH            shift and go to state 251
    INSERT          shift and go to state 252
    REMOVE          shift and go to state 253
    CAPACITY        shift and go to state 254
    LEN             shift and go to state 255


state 182

    (169) dimensiones -> dimension .

    IGUAL           reduce using rule 169 (dimensiones -> dimension .)
    COR_I           reduce using rule 169 (dimensiones -> dimension .)
    PUNTO           reduce using rule 169 (dimensiones -> dimension .)
    MAS             reduce using rule 169 (dimensiones -> dimension .)
    MENOS           reduce using rule 169 (dimensiones -> dimension .)
    MULTI           reduce using rule 169 (dimensiones -> dimension .)
    DIV             reduce using rule 169 (dimensiones -> dimension .)
    MODULO          reduce using rule 169 (dimensiones -> dimension .)
    MAYOR           reduce using rule 169 (dimensiones -> dimension .)
    MENOR           reduce using rule 169 (dimensiones -> dimension .)
    MAYOR_I         reduce using rule 169 (dimensiones -> dimension .)
    MENOR_I         reduce using rule 169 (dimensiones -> dimension .)
    D_IGUAL         reduce using rule 169 (dimensiones -> dimension .)
    NO_IGUAL        reduce using rule 169 (dimensiones -> dimension .)
    OR              reduce using rule 169 (dimensiones -> dimension .)
    AND             reduce using rule 169 (dimensiones -> dimension .)
    AS              reduce using rule 169 (dimensiones -> dimension .)
    LLV_I           reduce using rule 169 (dimensiones -> dimension .)
    error           reduce using rule 169 (dimensiones -> dimension .)
    PUNTOCOMA       reduce using rule 169 (dimensiones -> dimension .)
    COMA            reduce using rule 169 (dimensiones -> dimension .)
    PAR_D           reduce using rule 169 (dimensiones -> dimension .)
    COR_D           reduce using rule 169 (dimensiones -> dimension .)
    LLV_D           reduce using rule 169 (dimensiones -> dimension .)
    BARRA           reduce using rule 169 (dimensiones -> dimension .)
    GUION_B         reduce using rule 169 (dimensiones -> dimension .)
    ID              reduce using rule 169 (dimensiones -> dimension .)
    INT             reduce using rule 169 (dimensiones -> dimension .)
    FLOAT           reduce using rule 169 (dimensiones -> dimension .)
    NOT             reduce using rule 169 (dimensiones -> dimension .)
    PAR_I           reduce using rule 169 (dimensiones -> dimension .)
    ENTERO          reduce using rule 169 (dimensiones -> dimension .)
    DECIMAL         reduce using rule 169 (dimensiones -> dimension .)
    TRUE            reduce using rule 169 (dimensiones -> dimension .)
    FALSE           reduce using rule 169 (dimensiones -> dimension .)
    CHAR_S          reduce using rule 169 (dimensiones -> dimension .)
    CADENA          reduce using rule 169 (dimensiones -> dimension .)
    IF              reduce using rule 169 (dimensiones -> dimension .)
    MATCH           reduce using rule 169 (dimensiones -> dimension .)
    LOOP            reduce using rule 169 (dimensiones -> dimension .)
    VEC_L           reduce using rule 169 (dimensiones -> dimension .)
    VEC_U           reduce using rule 169 (dimensiones -> dimension .)


state 183

    (170) dimension -> COR_I . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 256
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 184

    (158) acceso_struct -> expresion PUNTO . expresion
    (216) expresion -> expresion PUNTO . ABS PAR_I PAR_D
    (217) expresion -> expresion PUNTO . SQRT PAR_I PAR_D
    (234) expresion -> expresion PUNTO . TO_STRING PAR_I PAR_D
    (235) expresion -> expresion PUNTO . TO_OWNED PAR_I PAR_D
    (206) chars -> expresion PUNTO . CHARS PAR_I PAR_D
    (201) vec_contains -> expresion PUNTO . CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion PUNTO . LEN PAR_I PAR_D
    (205) clone -> expresion PUNTO . CLONE PAR_I PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ABS             shift and go to state 258
    SQRT            shift and go to state 259
    TO_STRING       shift and go to state 260
    TO_OWNED        shift and go to state 261
    CHARS           shift and go to state 262
    CONTAINS        shift and go to state 263
    LEN             shift and go to state 264
    CLONE           shift and go to state 265
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 257
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 185

    (208) expresion -> expresion MAS . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 266
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 186

    (209) expresion -> expresion MENOS . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 267
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 187

    (210) expresion -> expresion MULTI . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 268
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 188

    (211) expresion -> expresion DIV . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 269
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 189

    (212) expresion -> expresion MODULO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 270
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 190

    (218) expresion -> expresion MAYOR . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 271
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 191

    (219) expresion -> expresion MENOR . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 272
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 192

    (220) expresion -> expresion MAYOR_I . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 273
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 193

    (221) expresion -> expresion MENOR_I . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 274
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 194

    (222) expresion -> expresion D_IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 275
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 195

    (223) expresion -> expresion NO_IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 276
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 196

    (224) expresion -> expresion OR . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 277
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 197

    (225) expresion -> expresion AND . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 278
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 198

    (236) expresion -> expresion AS . tipo
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    tipo                           shift and go to state 279
    acceso_mod                     shift and go to state 154

state 199

    (85) exp_if -> IF . expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 280
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 200

    (78) if -> IF expresion . statement
    (79) if -> IF expresion . statement else
    (85) exp_if -> IF expresion . LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    LLV_I           shift and go to state 282
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198
    error           shift and go to state 39

    statement                      shift and go to state 281

state 201

    (207) expresion -> ID .
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (167) acceso_arreglo -> ID . dimensiones
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (54) acceso_mod -> ID .
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PAR_I resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for COR_I resolved as shift
    LLV_I           reduce using rule 207 (expresion -> ID .)
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    error           reduce using rule 207 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 207 (expresion -> ID .)
    COMA            reduce using rule 207 (expresion -> ID .)
    PAR_D           reduce using rule 207 (expresion -> ID .)
    COR_D           reduce using rule 207 (expresion -> ID .)
    IGUAL           reduce using rule 207 (expresion -> ID .)
    LLV_D           reduce using rule 207 (expresion -> ID .)
    BARRA           reduce using rule 207 (expresion -> ID .)
    GUION_B         reduce using rule 207 (expresion -> ID .)
    ID              reduce using rule 207 (expresion -> ID .)
    INT             reduce using rule 207 (expresion -> ID .)
    FLOAT           reduce using rule 207 (expresion -> ID .)
    NOT             reduce using rule 207 (expresion -> ID .)
    ENTERO          reduce using rule 207 (expresion -> ID .)
    DECIMAL         reduce using rule 207 (expresion -> ID .)
    TRUE            reduce using rule 207 (expresion -> ID .)
    FALSE           reduce using rule 207 (expresion -> ID .)
    CHAR_S          reduce using rule 207 (expresion -> ID .)
    CADENA          reduce using rule 207 (expresion -> ID .)
    IF              reduce using rule 207 (expresion -> ID .)
    MATCH           reduce using rule 207 (expresion -> ID .)
    LOOP            reduce using rule 207 (expresion -> ID .)
    VEC_L           reduce using rule 207 (expresion -> ID .)
    VEC_U           reduce using rule 207 (expresion -> ID .)
    PAR_I           shift and go to state 179
    PUNTO           shift and go to state 285
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]
  ! PAR_I           [ reduce using rule 207 (expresion -> ID .) ]
  ! COR_I           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 284
    dimension                      shift and go to state 182

state 202

    (240) expresion -> llamada .

    LLV_I           reduce using rule 240 (expresion -> llamada .)
    MAS             reduce using rule 240 (expresion -> llamada .)
    MENOS           reduce using rule 240 (expresion -> llamada .)
    MULTI           reduce using rule 240 (expresion -> llamada .)
    DIV             reduce using rule 240 (expresion -> llamada .)
    MODULO          reduce using rule 240 (expresion -> llamada .)
    PUNTO           reduce using rule 240 (expresion -> llamada .)
    MAYOR           reduce using rule 240 (expresion -> llamada .)
    MENOR           reduce using rule 240 (expresion -> llamada .)
    MAYOR_I         reduce using rule 240 (expresion -> llamada .)
    MENOR_I         reduce using rule 240 (expresion -> llamada .)
    D_IGUAL         reduce using rule 240 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 240 (expresion -> llamada .)
    OR              reduce using rule 240 (expresion -> llamada .)
    AND             reduce using rule 240 (expresion -> llamada .)
    AS              reduce using rule 240 (expresion -> llamada .)
    error           reduce using rule 240 (expresion -> llamada .)
    PUNTOCOMA       reduce using rule 240 (expresion -> llamada .)
    COMA            reduce using rule 240 (expresion -> llamada .)
    PAR_D           reduce using rule 240 (expresion -> llamada .)
    COR_D           reduce using rule 240 (expresion -> llamada .)
    IGUAL           reduce using rule 240 (expresion -> llamada .)
    LLV_D           reduce using rule 240 (expresion -> llamada .)
    BARRA           reduce using rule 240 (expresion -> llamada .)
    GUION_B         reduce using rule 240 (expresion -> llamada .)
    ID              reduce using rule 240 (expresion -> llamada .)
    INT             reduce using rule 240 (expresion -> llamada .)
    FLOAT           reduce using rule 240 (expresion -> llamada .)
    NOT             reduce using rule 240 (expresion -> llamada .)
    PAR_I           reduce using rule 240 (expresion -> llamada .)
    ENTERO          reduce using rule 240 (expresion -> llamada .)
    DECIMAL         reduce using rule 240 (expresion -> llamada .)
    TRUE            reduce using rule 240 (expresion -> llamada .)
    FALSE           reduce using rule 240 (expresion -> llamada .)
    CHAR_S          reduce using rule 240 (expresion -> llamada .)
    CADENA          reduce using rule 240 (expresion -> llamada .)
    IF              reduce using rule 240 (expresion -> llamada .)
    MATCH           reduce using rule 240 (expresion -> llamada .)
    LOOP            reduce using rule 240 (expresion -> llamada .)
    COR_I           reduce using rule 240 (expresion -> llamada .)
    VEC_L           reduce using rule 240 (expresion -> llamada .)
    VEC_U           reduce using rule 240 (expresion -> llamada .)


state 203

    (246) expresion -> vec_remove .

    LLV_I           reduce using rule 246 (expresion -> vec_remove .)
    MAS             reduce using rule 246 (expresion -> vec_remove .)
    MENOS           reduce using rule 246 (expresion -> vec_remove .)
    MULTI           reduce using rule 246 (expresion -> vec_remove .)
    DIV             reduce using rule 246 (expresion -> vec_remove .)
    MODULO          reduce using rule 246 (expresion -> vec_remove .)
    PUNTO           reduce using rule 246 (expresion -> vec_remove .)
    MAYOR           reduce using rule 246 (expresion -> vec_remove .)
    MENOR           reduce using rule 246 (expresion -> vec_remove .)
    MAYOR_I         reduce using rule 246 (expresion -> vec_remove .)
    MENOR_I         reduce using rule 246 (expresion -> vec_remove .)
    D_IGUAL         reduce using rule 246 (expresion -> vec_remove .)
    NO_IGUAL        reduce using rule 246 (expresion -> vec_remove .)
    OR              reduce using rule 246 (expresion -> vec_remove .)
    AND             reduce using rule 246 (expresion -> vec_remove .)
    AS              reduce using rule 246 (expresion -> vec_remove .)
    error           reduce using rule 246 (expresion -> vec_remove .)
    PUNTOCOMA       reduce using rule 246 (expresion -> vec_remove .)
    COMA            reduce using rule 246 (expresion -> vec_remove .)
    PAR_D           reduce using rule 246 (expresion -> vec_remove .)
    COR_D           reduce using rule 246 (expresion -> vec_remove .)
    IGUAL           reduce using rule 246 (expresion -> vec_remove .)
    LLV_D           reduce using rule 246 (expresion -> vec_remove .)
    BARRA           reduce using rule 246 (expresion -> vec_remove .)
    GUION_B         reduce using rule 246 (expresion -> vec_remove .)
    ID              reduce using rule 246 (expresion -> vec_remove .)
    INT             reduce using rule 246 (expresion -> vec_remove .)
    FLOAT           reduce using rule 246 (expresion -> vec_remove .)
    NOT             reduce using rule 246 (expresion -> vec_remove .)
    PAR_I           reduce using rule 246 (expresion -> vec_remove .)
    ENTERO          reduce using rule 246 (expresion -> vec_remove .)
    DECIMAL         reduce using rule 246 (expresion -> vec_remove .)
    TRUE            reduce using rule 246 (expresion -> vec_remove .)
    FALSE           reduce using rule 246 (expresion -> vec_remove .)
    CHAR_S          reduce using rule 246 (expresion -> vec_remove .)
    CADENA          reduce using rule 246 (expresion -> vec_remove .)
    IF              reduce using rule 246 (expresion -> vec_remove .)
    MATCH           reduce using rule 246 (expresion -> vec_remove .)
    LOOP            reduce using rule 246 (expresion -> vec_remove .)
    COR_I           reduce using rule 246 (expresion -> vec_remove .)
    VEC_L           reduce using rule 246 (expresion -> vec_remove .)
    VEC_U           reduce using rule 246 (expresion -> vec_remove .)


state 204

    (253) expresion -> acceso_mod_exp .

    LLV_I           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAS             reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOS           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MULTI           reduce using rule 253 (expresion -> acceso_mod_exp .)
    DIV             reduce using rule 253 (expresion -> acceso_mod_exp .)
    MODULO          reduce using rule 253 (expresion -> acceso_mod_exp .)
    PUNTO           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAYOR           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOR           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAYOR_I         reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOR_I         reduce using rule 253 (expresion -> acceso_mod_exp .)
    D_IGUAL         reduce using rule 253 (expresion -> acceso_mod_exp .)
    NO_IGUAL        reduce using rule 253 (expresion -> acceso_mod_exp .)
    OR              reduce using rule 253 (expresion -> acceso_mod_exp .)
    AND             reduce using rule 253 (expresion -> acceso_mod_exp .)
    AS              reduce using rule 253 (expresion -> acceso_mod_exp .)
    error           reduce using rule 253 (expresion -> acceso_mod_exp .)
    PUNTOCOMA       reduce using rule 253 (expresion -> acceso_mod_exp .)
    COMA            reduce using rule 253 (expresion -> acceso_mod_exp .)
    PAR_D           reduce using rule 253 (expresion -> acceso_mod_exp .)
    COR_D           reduce using rule 253 (expresion -> acceso_mod_exp .)
    IGUAL           reduce using rule 253 (expresion -> acceso_mod_exp .)
    LLV_D           reduce using rule 253 (expresion -> acceso_mod_exp .)
    BARRA           reduce using rule 253 (expresion -> acceso_mod_exp .)
    GUION_B         reduce using rule 253 (expresion -> acceso_mod_exp .)
    ID              reduce using rule 253 (expresion -> acceso_mod_exp .)
    INT             reduce using rule 253 (expresion -> acceso_mod_exp .)
    FLOAT           reduce using rule 253 (expresion -> acceso_mod_exp .)
    NOT             reduce using rule 253 (expresion -> acceso_mod_exp .)
    PAR_I           reduce using rule 253 (expresion -> acceso_mod_exp .)
    ENTERO          reduce using rule 253 (expresion -> acceso_mod_exp .)
    DECIMAL         reduce using rule 253 (expresion -> acceso_mod_exp .)
    TRUE            reduce using rule 253 (expresion -> acceso_mod_exp .)
    FALSE           reduce using rule 253 (expresion -> acceso_mod_exp .)
    CHAR_S          reduce using rule 253 (expresion -> acceso_mod_exp .)
    CADENA          reduce using rule 253 (expresion -> acceso_mod_exp .)
    IF              reduce using rule 253 (expresion -> acceso_mod_exp .)
    MATCH           reduce using rule 253 (expresion -> acceso_mod_exp .)
    LOOP            reduce using rule 253 (expresion -> acceso_mod_exp .)
    COR_I           reduce using rule 253 (expresion -> acceso_mod_exp .)
    VEC_L           reduce using rule 253 (expresion -> acceso_mod_exp .)
    VEC_U           reduce using rule 253 (expresion -> acceso_mod_exp .)


state 205

    (100) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 286
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 206

    (112) loop_exp -> LOOP . statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 287

state 207

    (156) acceso_struct_exp -> acceso_struct .
    (157) acceso_struct -> acceso_struct . PUNTO expresion

  ! shift/reduce conflict for PUNTO resolved as shift
    LLV_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAS             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOS           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MULTI           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DIV             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MODULO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    D_IGUAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NO_IGUAL        reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    OR              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AND             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AS              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    error           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PUNTOCOMA       reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    COMA            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PAR_D           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    COR_D           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    IGUAL           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    LLV_D           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    BARRA           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    GUION_B         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    ID              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    INT             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    FLOAT           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NOT             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PAR_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    ENTERO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DECIMAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    TRUE            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    FALSE           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    CHAR_S          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    CADENA          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    IF              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MATCH           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    LOOP            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    COR_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    VEC_L           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    VEC_U           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PUNTO           shift and go to state 218

  ! PUNTO           [ reduce using rule 156 (acceso_struct_exp -> acceso_struct .) ]


state 208

    (90) match -> MATCH expresion . LLV_I case_list LLV_D
    (91) match -> MATCH expresion . LLV_I case_list default LLV_D
    (100) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (101) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_I           shift and go to state 288
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 209

    (107) while -> WHILE expresion . statement
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198
    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 289

state 210

    (111) loop -> LOOP statement .
    (112) loop_exp -> LOOP statement .

  ! reduce/reduce conflict for MENOS resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for COMA resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for LLV_D resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for ID resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for INT resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for NOT resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for PAR_I resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for ENTERO resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for CHAR_S resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for CADENA resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for IF resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for MATCH resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for LOOP resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for COR_I resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for VEC_L resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for VEC_U resolved using rule 111 (loop -> LOOP statement .)
    LLV_D           reduce using rule 111 (loop -> LOOP statement .)
    LET             reduce using rule 111 (loop -> LOOP statement .)
    ID              reduce using rule 111 (loop -> LOOP statement .)
    IF              reduce using rule 111 (loop -> LOOP statement .)
    MATCH           reduce using rule 111 (loop -> LOOP statement .)
    WHILE           reduce using rule 111 (loop -> LOOP statement .)
    LOOP            reduce using rule 111 (loop -> LOOP statement .)
    FOR             reduce using rule 111 (loop -> LOOP statement .)
    BREAK           reduce using rule 111 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 111 (loop -> LOOP statement .)
    RETURN          reduce using rule 111 (loop -> LOOP statement .)
    PRINT           reduce using rule 111 (loop -> LOOP statement .)
    MENOS           reduce using rule 111 (loop -> LOOP statement .)
    INT             reduce using rule 111 (loop -> LOOP statement .)
    FLOAT           reduce using rule 111 (loop -> LOOP statement .)
    NOT             reduce using rule 111 (loop -> LOOP statement .)
    PAR_I           reduce using rule 111 (loop -> LOOP statement .)
    ENTERO          reduce using rule 111 (loop -> LOOP statement .)
    DECIMAL         reduce using rule 111 (loop -> LOOP statement .)
    TRUE            reduce using rule 111 (loop -> LOOP statement .)
    FALSE           reduce using rule 111 (loop -> LOOP statement .)
    CHAR_S          reduce using rule 111 (loop -> LOOP statement .)
    CADENA          reduce using rule 111 (loop -> LOOP statement .)
    COR_I           reduce using rule 111 (loop -> LOOP statement .)
    VEC_L           reduce using rule 111 (loop -> LOOP statement .)
    VEC_U           reduce using rule 111 (loop -> LOOP statement .)
    COMA            reduce using rule 111 (loop -> LOOP statement .)
    PUNTO           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAS             reduce using rule 112 (loop_exp -> LOOP statement .)
    MULTI           reduce using rule 112 (loop_exp -> LOOP statement .)
    DIV             reduce using rule 112 (loop_exp -> LOOP statement .)
    MODULO          reduce using rule 112 (loop_exp -> LOOP statement .)
    MAYOR           reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOR           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAYOR_I         reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOR_I         reduce using rule 112 (loop_exp -> LOOP statement .)
    D_IGUAL         reduce using rule 112 (loop_exp -> LOOP statement .)
    NO_IGUAL        reduce using rule 112 (loop_exp -> LOOP statement .)
    OR              reduce using rule 112 (loop_exp -> LOOP statement .)
    AND             reduce using rule 112 (loop_exp -> LOOP statement .)
    AS              reduce using rule 112 (loop_exp -> LOOP statement .)
    GUION_B         reduce using rule 112 (loop_exp -> LOOP statement .)

  ! MENOS           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! COMA            [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! LLV_D           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! ID              [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! INT             [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! FLOAT           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! NOT             [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! PAR_I           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! ENTERO          [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! DECIMAL         [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! TRUE            [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! FALSE           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! CHAR_S          [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! CADENA          [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! IF              [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! MATCH           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! LOOP            [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! COR_I           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! VEC_L           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! VEC_U           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]


state 211

    (113) for -> FOR ID . IN rango statement
    (114) for -> FOR ID . IN expresion statement

    IN              shift and go to state 290


state 212

    (109) break -> BREAK expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 109 (break -> BREAK expresion .)
    COMA            reduce using rule 109 (break -> BREAK expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 213

    (69) return -> RETURN expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 69 (return -> RETURN expresion .)
    COMA            reduce using rule 69 (return -> RETURN expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 214

    (55) print -> PRINT NOT . PAR_I expresion PAR_D
    (56) print -> PRINT NOT . PAR_I CADENA COMA exp_list PAR_D

    PAR_I           shift and go to state 291


state 215

    (226) expresion -> NOT expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    LLV_I           reduce using rule 226 (expresion -> NOT expresion .)
    error           reduce using rule 226 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 226 (expresion -> NOT expresion .)
    COMA            reduce using rule 226 (expresion -> NOT expresion .)
    PAR_D           reduce using rule 226 (expresion -> NOT expresion .)
    COR_D           reduce using rule 226 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 226 (expresion -> NOT expresion .)
    LLV_D           reduce using rule 226 (expresion -> NOT expresion .)
    BARRA           reduce using rule 226 (expresion -> NOT expresion .)
    GUION_B         reduce using rule 226 (expresion -> NOT expresion .)
    ID              reduce using rule 226 (expresion -> NOT expresion .)
    INT             reduce using rule 226 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 226 (expresion -> NOT expresion .)
    NOT             reduce using rule 226 (expresion -> NOT expresion .)
    PAR_I           reduce using rule 226 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 226 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 226 (expresion -> NOT expresion .)
    TRUE            reduce using rule 226 (expresion -> NOT expresion .)
    FALSE           reduce using rule 226 (expresion -> NOT expresion .)
    CHAR_S          reduce using rule 226 (expresion -> NOT expresion .)
    CADENA          reduce using rule 226 (expresion -> NOT expresion .)
    IF              reduce using rule 226 (expresion -> NOT expresion .)
    MATCH           reduce using rule 226 (expresion -> NOT expresion .)
    LOOP            reduce using rule 226 (expresion -> NOT expresion .)
    COR_I           reduce using rule 226 (expresion -> NOT expresion .)
    VEC_L           reduce using rule 226 (expresion -> NOT expresion .)
    VEC_U           reduce using rule 226 (expresion -> NOT expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198

  ! PUNTO           [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MAS             [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MAYOR_I         [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! MENOR_I         [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! D_IGUAL         [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! OR              [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! AND             [ reduce using rule 226 (expresion -> NOT expresion .) ]
  ! AS              [ reduce using rule 226 (expresion -> NOT expresion .) ]


state 216

    (227) expresion -> PAR_I expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 292
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 217

    (155) mod_struct -> acceso_struct IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    acceso_struct                  shift and go to state 207
    expresion                      shift and go to state 293
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_mod                     shift and go to state 115

state 218

    (157) acceso_struct -> acceso_struct PUNTO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    acceso_struct                  shift and go to state 207
    expresion                      shift and go to state 294
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_mod                     shift and go to state 115

state 219

    (195) vec_capacity -> VEC_U D_PUNTO . D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> VEC_U D_PUNTO . D_PUNTO NEW PAR_I PAR_D

    D_PUNTO         shift and go to state 295


state 220

    (52) acceso_mod_exp -> acceso_mod D_PUNTO . D_PUNTO llamada
    (53) acceso_mod -> acceso_mod D_PUNTO . D_PUNTO ID

    D_PUNTO         shift and go to state 296


state 221

    (213) expresion -> MENOS expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTO           reduce using rule 213 (expresion -> MENOS expresion .)
    MAS             reduce using rule 213 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 213 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 213 (expresion -> MENOS expresion .)
    DIV             reduce using rule 213 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 213 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 213 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 213 (expresion -> MENOS expresion .)
    MAYOR_I         reduce using rule 213 (expresion -> MENOS expresion .)
    MENOR_I         reduce using rule 213 (expresion -> MENOS expresion .)
    D_IGUAL         reduce using rule 213 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 213 (expresion -> MENOS expresion .)
    OR              reduce using rule 213 (expresion -> MENOS expresion .)
    AND             reduce using rule 213 (expresion -> MENOS expresion .)
    AS              reduce using rule 213 (expresion -> MENOS expresion .)
    LLV_I           reduce using rule 213 (expresion -> MENOS expresion .)
    error           reduce using rule 213 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 213 (expresion -> MENOS expresion .)
    COMA            reduce using rule 213 (expresion -> MENOS expresion .)
    PAR_D           reduce using rule 213 (expresion -> MENOS expresion .)
    COR_D           reduce using rule 213 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 213 (expresion -> MENOS expresion .)
    LLV_D           reduce using rule 213 (expresion -> MENOS expresion .)
    BARRA           reduce using rule 213 (expresion -> MENOS expresion .)
    GUION_B         reduce using rule 213 (expresion -> MENOS expresion .)
    ID              reduce using rule 213 (expresion -> MENOS expresion .)
    INT             reduce using rule 213 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 213 (expresion -> MENOS expresion .)
    NOT             reduce using rule 213 (expresion -> MENOS expresion .)
    PAR_I           reduce using rule 213 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 213 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 213 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 213 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 213 (expresion -> MENOS expresion .)
    CHAR_S          reduce using rule 213 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 213 (expresion -> MENOS expresion .)
    IF              reduce using rule 213 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 213 (expresion -> MENOS expresion .)
    LOOP            reduce using rule 213 (expresion -> MENOS expresion .)
    COR_I           reduce using rule 213 (expresion -> MENOS expresion .)
    VEC_L           reduce using rule 213 (expresion -> MENOS expresion .)
    VEC_U           reduce using rule 213 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MULTI           [ shift and go to state 187 ]
  ! DIV             [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 189 ]
  ! PUNTO           [ shift and go to state 283 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 222

    (214) expresion -> INT D_PUNTO . D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 297


state 223

    (215) expresion -> FLOAT D_PUNTO . D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D

    D_PUNTO         shift and go to state 298


state 224

    (165) datos_arreglo -> COR_I exp_list . COR_D
    (57) exp_list -> exp_list . COMA expresion

    COR_D           shift and go to state 299
    COMA            shift and go to state 300


state 225

    (166) datos_arreglo -> COR_I expresion . PUNTOCOMA expresion COR_D
    (58) exp_list -> expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       shift and go to state 301
    COR_D           reduce using rule 58 (exp_list -> expresion .)
    COMA            reduce using rule 58 (exp_list -> expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 226

    (196) vec_dato -> VEC_L NOT . COR_I exp_list COR_D
    (197) vec_dato -> VEC_L NOT . COR_I expresion PUNTOCOMA expresion COR_D

    COR_I           shift and go to state 302


state 227

    (67) parametro -> MUT ID D_PUNTO tipo_funcion .

    PAR_D           reduce using rule 67 (parametro -> MUT ID D_PUNTO tipo_funcion .)
    COMA            reduce using rule 67 (parametro -> MUT ID D_PUNTO tipo_funcion .)


state 228

    (68) parametro -> MUT ID D_PUNTO AMP . tipo_funcion
    (133) tipo_funcion -> AMP . STR
    (130) tipo_funcion -> . INT
    (131) tipo_funcion -> . FLOAT
    (132) tipo_funcion -> . BOOL
    (133) tipo_funcion -> . AMP STR
    (134) tipo_funcion -> . STRING
    (135) tipo_funcion -> . CHAR
    (136) tipo_funcion -> . VOID
    (137) tipo_funcion -> . ID
    (138) tipo_funcion -> . VEC_U MENOR tipo MAYOR
    (139) tipo_funcion -> . dimensiones_arreglo_tipo
    (140) tipo_funcion -> . dimensiones_un_tipo
    (141) tipo_funcion -> . USIZE
    (142) dimensiones_arreglo_tipo -> . COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D
    (143) dimensiones_arreglo_tipo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (144) dimensiones_un_tipo -> . COR_I tipo COR_D

    STR             shift and go to state 142
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    BOOL            shift and go to state 56
    AMP             shift and go to state 138
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    VOID            shift and go to state 59
    ID              shift and go to state 51
    VEC_U           shift and go to state 60
    USIZE           shift and go to state 63
    COR_I           shift and go to state 64

    tipo_funcion                   shift and go to state 303
    dimensiones_arreglo_tipo       shift and go to state 61
    dimensiones_un_tipo            shift and go to state 62

state 229

    (149) campo -> PUB ID D_PUNTO tipo_funcion .

    LLV_D           reduce using rule 149 (campo -> PUB ID D_PUNTO tipo_funcion .)
    COMA            reduce using rule 149 (campo -> PUB ID D_PUNTO tipo_funcion .)


state 230

    (66) parametro -> ID D_PUNTO AMP MUT tipo_funcion .

    PAR_D           reduce using rule 66 (parametro -> ID D_PUNTO AMP MUT tipo_funcion .)
    COMA            reduce using rule 66 (parametro -> ID D_PUNTO AMP MUT tipo_funcion .)


state 231

    (138) tipo_funcion -> VEC_U MENOR tipo . MAYOR

    MAYOR           shift and go to state 304


state 232

    (143) dimensiones_arreglo_tipo -> COR_I tipo . PUNTOCOMA expresion COR_D

    PUNTOCOMA       shift and go to state 234


state 233

    (142) dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 305
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 234

    (143) dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 306
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 235

    (144) dimensiones_un_tipo -> COR_I tipo COR_D .

    PAR_D           reduce using rule 144 (dimensiones_un_tipo -> COR_I tipo COR_D .)
    COMA            reduce using rule 144 (dimensiones_un_tipo -> COR_I tipo COR_D .)
    LLV_D           reduce using rule 144 (dimensiones_un_tipo -> COR_I tipo COR_D .)
    error           reduce using rule 144 (dimensiones_un_tipo -> COR_I tipo COR_D .)
    LLV_I           reduce using rule 144 (dimensiones_un_tipo -> COR_I tipo COR_D .)


state 236

    (124) tipo -> AMP STR .

    PUNTOCOMA       reduce using rule 124 (tipo -> AMP STR .)
    COR_D           reduce using rule 124 (tipo -> AMP STR .)
    MAYOR           reduce using rule 124 (tipo -> AMP STR .)
    PUNTO           reduce using rule 124 (tipo -> AMP STR .)
    MAS             reduce using rule 124 (tipo -> AMP STR .)
    MENOS           reduce using rule 124 (tipo -> AMP STR .)
    MULTI           reduce using rule 124 (tipo -> AMP STR .)
    DIV             reduce using rule 124 (tipo -> AMP STR .)
    MODULO          reduce using rule 124 (tipo -> AMP STR .)
    MENOR           reduce using rule 124 (tipo -> AMP STR .)
    MAYOR_I         reduce using rule 124 (tipo -> AMP STR .)
    MENOR_I         reduce using rule 124 (tipo -> AMP STR .)
    D_IGUAL         reduce using rule 124 (tipo -> AMP STR .)
    NO_IGUAL        reduce using rule 124 (tipo -> AMP STR .)
    OR              reduce using rule 124 (tipo -> AMP STR .)
    AND             reduce using rule 124 (tipo -> AMP STR .)
    AS              reduce using rule 124 (tipo -> AMP STR .)
    LLV_I           reduce using rule 124 (tipo -> AMP STR .)
    error           reduce using rule 124 (tipo -> AMP STR .)
    COMA            reduce using rule 124 (tipo -> AMP STR .)
    PAR_D           reduce using rule 124 (tipo -> AMP STR .)
    IGUAL           reduce using rule 124 (tipo -> AMP STR .)
    LLV_D           reduce using rule 124 (tipo -> AMP STR .)
    BARRA           reduce using rule 124 (tipo -> AMP STR .)
    GUION_B         reduce using rule 124 (tipo -> AMP STR .)
    ID              reduce using rule 124 (tipo -> AMP STR .)
    INT             reduce using rule 124 (tipo -> AMP STR .)
    FLOAT           reduce using rule 124 (tipo -> AMP STR .)
    NOT             reduce using rule 124 (tipo -> AMP STR .)
    PAR_I           reduce using rule 124 (tipo -> AMP STR .)
    ENTERO          reduce using rule 124 (tipo -> AMP STR .)
    DECIMAL         reduce using rule 124 (tipo -> AMP STR .)
    TRUE            reduce using rule 124 (tipo -> AMP STR .)
    FALSE           reduce using rule 124 (tipo -> AMP STR .)
    CHAR_S          reduce using rule 124 (tipo -> AMP STR .)
    CADENA          reduce using rule 124 (tipo -> AMP STR .)
    IF              reduce using rule 124 (tipo -> AMP STR .)
    MATCH           reduce using rule 124 (tipo -> AMP STR .)
    LOOP            reduce using rule 124 (tipo -> AMP STR .)
    COR_I           reduce using rule 124 (tipo -> AMP STR .)
    VEC_L           reduce using rule 124 (tipo -> AMP STR .)
    VEC_U           reduce using rule 124 (tipo -> AMP STR .)


state 237

    (53) acceso_mod -> acceso_mod D_PUNTO . D_PUNTO ID

    D_PUNTO         shift and go to state 307


state 238

    (61) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion . statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 308

state 239

    (62) funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .

    FN              reduce using rule 62 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .)
    STRUCT          reduce using rule 62 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .)
    MOD             reduce using rule 62 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .)
    $end            reduce using rule 62 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .)
    LLV_D           reduce using rule 62 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .)
    PUB             reduce using rule 62 (funcion -> FN ID PAR_I PAR_D MENOS MAYOR tipo_funcion statement .)


state 240

    (159) declaracion_arreglo -> LET ID D_PUNTO . dimensiones_arreglo IGUAL datos_arreglo
    (118) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (174) declaracion_vector -> LET ID D_PUNTO . VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> LET ID D_PUNTO . VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> LET ID D_PUNTO . VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (163) dimensiones_arreglo -> . COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D
    (164) dimensiones_arreglo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    VEC_U           shift and go to state 311
    COR_I           shift and go to state 312
    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    dimensiones_arreglo            shift and go to state 309
    tipo                           shift and go to state 310
    acceso_mod                     shift and go to state 154

state 241

    (162) declaracion_arreglo -> LET ID IGUAL . datos_arreglo
    (150) declaracion_struct -> LET ID IGUAL . instancia
    (116) asignacion -> LET ID IGUAL . expresion
    (172) declaracion_vector -> LET ID IGUAL . vec_dato
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (152) instancia -> . ID LLV_I lista_atributo LLV_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    COR_I           shift and go to state 134
    ID              shift and go to state 313
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    VEC_L           shift and go to state 135
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    VEC_U           shift and go to state 112

    datos_arreglo                  shift and go to state 314
    instancia                      shift and go to state 315
    expresion                      shift and go to state 316
    vec_dato                       shift and go to state 317
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 242

    (160) declaracion_arreglo -> LET MUT ID . D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> LET MUT ID . IGUAL datos_arreglo
    (151) declaracion_struct -> LET MUT ID . IGUAL instancia
    (117) asignacion -> LET MUT ID . IGUAL expresion
    (119) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion
    (173) declaracion_vector -> LET MUT ID . IGUAL vec_dato
    (175) declaracion_vector -> LET MUT ID . D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (177) declaracion_vector -> LET MUT ID . D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (179) declaracion_vector -> LET MUT ID . D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity

    D_PUNTO         shift and go to state 318
    IGUAL           shift and go to state 319


state 243

    (120) asignacion -> ID IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 120 (asignacion -> ID IGUAL expresion .)
    COMA            reduce using rule 120 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 244

    (71) llamada -> ID PAR_I PAR_D .

    PUNTOCOMA       reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    PUNTO           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MAS             reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MENOS           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MULTI           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    DIV             reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MODULO          reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MAYOR           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MENOR           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MAYOR_I         reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MENOR_I         reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    D_IGUAL         reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    OR              reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    AND             reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    AS              reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    LLV_I           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    error           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    COMA            reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    PAR_D           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    COR_D           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    IGUAL           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    LLV_D           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    BARRA           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    GUION_B         reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    ID              reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    INT             reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    FLOAT           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    NOT             reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    PAR_I           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    ENTERO          reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    DECIMAL         reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    TRUE            reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    FALSE           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    CHAR_S          reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    CADENA          reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    IF              reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    MATCH           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    LOOP            reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    COR_I           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    VEC_L           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)
    VEC_U           reduce using rule 71 (llamada -> ID PAR_I PAR_D .)


state 245

    (72) llamada -> ID PAR_I exp_list_llamada . PAR_D
    (73) exp_list_llamada -> exp_list_llamada . COMA exp_llamada

    PAR_D           shift and go to state 320
    COMA            shift and go to state 321


state 246

    (74) exp_list_llamada -> exp_llamada .

    PAR_D           reduce using rule 74 (exp_list_llamada -> exp_llamada .)
    COMA            reduce using rule 74 (exp_list_llamada -> exp_llamada .)


state 247

    (75) exp_llamada -> AMP . MUT expresion
    (76) exp_llamada -> AMP . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    MUT             shift and go to state 322
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 323
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 248

    (77) exp_llamada -> expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           reduce using rule 77 (exp_llamada -> expresion .)
    COMA            reduce using rule 77 (exp_llamada -> expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 249

    (171) mod_arreglo -> ID dimensiones IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 324
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 250

    (168) dimensiones -> dimensiones dimension .

    IGUAL           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    COR_I           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    PUNTO           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MAS             reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MENOS           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MULTI           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    DIV             reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MODULO          reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MAYOR           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MENOR           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MAYOR_I         reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MENOR_I         reduce using rule 168 (dimensiones -> dimensiones dimension .)
    D_IGUAL         reduce using rule 168 (dimensiones -> dimensiones dimension .)
    NO_IGUAL        reduce using rule 168 (dimensiones -> dimensiones dimension .)
    OR              reduce using rule 168 (dimensiones -> dimensiones dimension .)
    AND             reduce using rule 168 (dimensiones -> dimensiones dimension .)
    AS              reduce using rule 168 (dimensiones -> dimensiones dimension .)
    LLV_I           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    error           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    PUNTOCOMA       reduce using rule 168 (dimensiones -> dimensiones dimension .)
    COMA            reduce using rule 168 (dimensiones -> dimensiones dimension .)
    PAR_D           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    COR_D           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    LLV_D           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    BARRA           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    GUION_B         reduce using rule 168 (dimensiones -> dimensiones dimension .)
    ID              reduce using rule 168 (dimensiones -> dimensiones dimension .)
    INT             reduce using rule 168 (dimensiones -> dimensiones dimension .)
    FLOAT           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    NOT             reduce using rule 168 (dimensiones -> dimensiones dimension .)
    PAR_I           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    ENTERO          reduce using rule 168 (dimensiones -> dimensiones dimension .)
    DECIMAL         reduce using rule 168 (dimensiones -> dimensiones dimension .)
    TRUE            reduce using rule 168 (dimensiones -> dimensiones dimension .)
    FALSE           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    CHAR_S          reduce using rule 168 (dimensiones -> dimensiones dimension .)
    CADENA          reduce using rule 168 (dimensiones -> dimensiones dimension .)
    IF              reduce using rule 168 (dimensiones -> dimensiones dimension .)
    MATCH           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    LOOP            reduce using rule 168 (dimensiones -> dimensiones dimension .)
    VEC_L           reduce using rule 168 (dimensiones -> dimensiones dimension .)
    VEC_U           reduce using rule 168 (dimensiones -> dimensiones dimension .)


state 251

    (198) vec_push -> ID PUNTO PUSH . PAR_I expresion PAR_D

    PAR_I           shift and go to state 325


state 252

    (199) vec_insert -> ID PUNTO INSERT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 326


state 253

    (200) vec_remove -> ID PUNTO REMOVE . PAR_I expresion PAR_D

    PAR_I           shift and go to state 327


state 254

    (202) vec_get_capacity -> ID PUNTO CAPACITY . PAR_I PAR_D

    PAR_I           shift and go to state 328


state 255

    (204) length -> ID PUNTO LEN . PAR_I PAR_D

    PAR_I           shift and go to state 329


state 256

    (170) dimension -> COR_I expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 330
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 257

    (158) acceso_struct -> expresion PUNTO expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    IGUAL           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    PUNTO           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MAS             reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MENOS           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MULTI           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    DIV             reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MODULO          reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MAYOR           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MENOR           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MAYOR_I         reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MENOR_I         reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    D_IGUAL         reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    NO_IGUAL        reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    OR              reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    AND             reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    AS              reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    LLV_I           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    error           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    PUNTOCOMA       reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    COMA            reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    PAR_D           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    COR_D           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    LLV_D           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    BARRA           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    GUION_B         reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    ID              reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    INT             reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    FLOAT           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    NOT             reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    PAR_I           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    ENTERO          reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    DECIMAL         reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    TRUE            reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    FALSE           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    CHAR_S          reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    CADENA          reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    IF              reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    MATCH           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    LOOP            reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    COR_I           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    VEC_L           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)
    VEC_U           reduce using rule 158 (acceso_struct -> expresion PUNTO expresion .)

  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MULTI           [ shift and go to state 187 ]
  ! DIV             [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 189 ]
  ! PUNTO           [ shift and go to state 283 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 258

    (216) expresion -> expresion PUNTO ABS . PAR_I PAR_D

    PAR_I           shift and go to state 331


state 259

    (217) expresion -> expresion PUNTO SQRT . PAR_I PAR_D

    PAR_I           shift and go to state 332


state 260

    (234) expresion -> expresion PUNTO TO_STRING . PAR_I PAR_D

    PAR_I           shift and go to state 333


state 261

    (235) expresion -> expresion PUNTO TO_OWNED . PAR_I PAR_D

    PAR_I           shift and go to state 334


state 262

    (206) chars -> expresion PUNTO CHARS . PAR_I PAR_D

    PAR_I           shift and go to state 335


state 263

    (201) vec_contains -> expresion PUNTO CONTAINS . PAR_I AMP expresion PAR_D

    PAR_I           shift and go to state 336


state 264

    (203) length -> expresion PUNTO LEN . PAR_I PAR_D

    PAR_I           shift and go to state 337


state 265

    (205) clone -> expresion PUNTO CLONE . PAR_I PAR_D

    PAR_I           shift and go to state 338


state 266

    (208) expresion -> expresion MAS expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAS             reduce using rule 208 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 208 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 208 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 208 (expresion -> expresion MAS expresion .)
    MAYOR_I         reduce using rule 208 (expresion -> expresion MAS expresion .)
    MENOR_I         reduce using rule 208 (expresion -> expresion MAS expresion .)
    D_IGUAL         reduce using rule 208 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 208 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 208 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 208 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 208 (expresion -> expresion MAS expresion .)
    LLV_I           reduce using rule 208 (expresion -> expresion MAS expresion .)
    error           reduce using rule 208 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 208 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 208 (expresion -> expresion MAS expresion .)
    PAR_D           reduce using rule 208 (expresion -> expresion MAS expresion .)
    COR_D           reduce using rule 208 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 208 (expresion -> expresion MAS expresion .)
    LLV_D           reduce using rule 208 (expresion -> expresion MAS expresion .)
    BARRA           reduce using rule 208 (expresion -> expresion MAS expresion .)
    GUION_B         reduce using rule 208 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 208 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 208 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 208 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 208 (expresion -> expresion MAS expresion .)
    PAR_I           reduce using rule 208 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 208 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 208 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 208 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 208 (expresion -> expresion MAS expresion .)
    CHAR_S          reduce using rule 208 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 208 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 208 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 208 (expresion -> expresion MAS expresion .)
    LOOP            reduce using rule 208 (expresion -> expresion MAS expresion .)
    COR_I           reduce using rule 208 (expresion -> expresion MAS expresion .)
    VEC_L           reduce using rule 208 (expresion -> expresion MAS expresion .)
    VEC_U           reduce using rule 208 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 208 (expresion -> expresion MAS expresion .) ]
  ! MULTI           [ reduce using rule 208 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 208 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 208 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 267

    (209) expresion -> expresion MENOS expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAS             reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MAYOR_I         reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MENOR_I         reduce using rule 209 (expresion -> expresion MENOS expresion .)
    D_IGUAL         reduce using rule 209 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 209 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 209 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 209 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 209 (expresion -> expresion MENOS expresion .)
    LLV_I           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 209 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 209 (expresion -> expresion MENOS expresion .)
    PAR_D           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    COR_D           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    LLV_D           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    BARRA           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    GUION_B         reduce using rule 209 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 209 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 209 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 209 (expresion -> expresion MENOS expresion .)
    PAR_I           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 209 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 209 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 209 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    CHAR_S          reduce using rule 209 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 209 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    LOOP            reduce using rule 209 (expresion -> expresion MENOS expresion .)
    COR_I           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    VEC_L           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    VEC_U           reduce using rule 209 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 209 (expresion -> expresion MENOS expresion .) ]
  ! MULTI           [ reduce using rule 209 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 209 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 209 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 268

    (210) expresion -> expresion MULTI expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAS             reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MAYOR_I         reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MENOR_I         reduce using rule 210 (expresion -> expresion MULTI expresion .)
    D_IGUAL         reduce using rule 210 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 210 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 210 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 210 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 210 (expresion -> expresion MULTI expresion .)
    LLV_I           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    error           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    PUNTOCOMA       reduce using rule 210 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 210 (expresion -> expresion MULTI expresion .)
    PAR_D           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    COR_D           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    IGUAL           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    LLV_D           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    BARRA           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    GUION_B         reduce using rule 210 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 210 (expresion -> expresion MULTI expresion .)
    INT             reduce using rule 210 (expresion -> expresion MULTI expresion .)
    FLOAT           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 210 (expresion -> expresion MULTI expresion .)
    PAR_I           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 210 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 210 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 210 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    CHAR_S          reduce using rule 210 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 210 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    LOOP            reduce using rule 210 (expresion -> expresion MULTI expresion .)
    COR_I           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    VEC_L           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    VEC_U           reduce using rule 210 (expresion -> expresion MULTI expresion .)
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 210 (expresion -> expresion MULTI expresion .) ]
  ! MODULO          [ reduce using rule 210 (expresion -> expresion MULTI expresion .) ]
  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MULTI           [ shift and go to state 187 ]
  ! DIV             [ shift and go to state 188 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 269

    (211) expresion -> expresion DIV expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAS             reduce using rule 211 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 211 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 211 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 211 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 211 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 211 (expresion -> expresion DIV expresion .)
    MAYOR_I         reduce using rule 211 (expresion -> expresion DIV expresion .)
    MENOR_I         reduce using rule 211 (expresion -> expresion DIV expresion .)
    D_IGUAL         reduce using rule 211 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 211 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 211 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 211 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 211 (expresion -> expresion DIV expresion .)
    LLV_I           reduce using rule 211 (expresion -> expresion DIV expresion .)
    error           reduce using rule 211 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 211 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 211 (expresion -> expresion DIV expresion .)
    PAR_D           reduce using rule 211 (expresion -> expresion DIV expresion .)
    COR_D           reduce using rule 211 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 211 (expresion -> expresion DIV expresion .)
    LLV_D           reduce using rule 211 (expresion -> expresion DIV expresion .)
    BARRA           reduce using rule 211 (expresion -> expresion DIV expresion .)
    GUION_B         reduce using rule 211 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 211 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 211 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 211 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 211 (expresion -> expresion DIV expresion .)
    PAR_I           reduce using rule 211 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 211 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 211 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 211 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 211 (expresion -> expresion DIV expresion .)
    CHAR_S          reduce using rule 211 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 211 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 211 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 211 (expresion -> expresion DIV expresion .)
    LOOP            reduce using rule 211 (expresion -> expresion DIV expresion .)
    COR_I           reduce using rule 211 (expresion -> expresion DIV expresion .)
    VEC_L           reduce using rule 211 (expresion -> expresion DIV expresion .)
    VEC_U           reduce using rule 211 (expresion -> expresion DIV expresion .)
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 211 (expresion -> expresion DIV expresion .) ]
  ! MODULO          [ reduce using rule 211 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MULTI           [ shift and go to state 187 ]
  ! DIV             [ shift and go to state 188 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 270

    (212) expresion -> expresion MODULO expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAS             reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MAYOR_I         reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MENOR_I         reduce using rule 212 (expresion -> expresion MODULO expresion .)
    D_IGUAL         reduce using rule 212 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 212 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 212 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 212 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 212 (expresion -> expresion MODULO expresion .)
    LLV_I           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 212 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 212 (expresion -> expresion MODULO expresion .)
    PAR_D           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    COR_D           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    LLV_D           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    BARRA           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    GUION_B         reduce using rule 212 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 212 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 212 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 212 (expresion -> expresion MODULO expresion .)
    PAR_I           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 212 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 212 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 212 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    CHAR_S          reduce using rule 212 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 212 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 212 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    LOOP            reduce using rule 212 (expresion -> expresion MODULO expresion .)
    COR_I           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    VEC_L           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    VEC_U           reduce using rule 212 (expresion -> expresion MODULO expresion .)
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 212 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MULTI           [ shift and go to state 187 ]
  ! DIV             [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 189 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 271

    (218) expresion -> expresion MAYOR expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAYOR           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    MAYOR_I         reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    MENOR_I         reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    D_IGUAL         reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    LLV_I           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    PAR_D           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    COR_D           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    IGUAL           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    LLV_D           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    BARRA           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    GUION_B         reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    INT             reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    PAR_I           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    CHAR_S          reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    LOOP            reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    COR_I           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    VEC_L           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    VEC_U           reduce using rule 218 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 218 (expresion -> expresion MAYOR expresion .) ]
  ! MAS             [ reduce using rule 218 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 218 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 218 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 218 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 218 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 272

    (219) expresion -> expresion MENOR expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAYOR           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    MAYOR_I         reduce using rule 219 (expresion -> expresion MENOR expresion .)
    MENOR_I         reduce using rule 219 (expresion -> expresion MENOR expresion .)
    D_IGUAL         reduce using rule 219 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 219 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 219 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 219 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 219 (expresion -> expresion MENOR expresion .)
    LLV_I           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 219 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 219 (expresion -> expresion MENOR expresion .)
    PAR_D           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    COR_D           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    IGUAL           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    LLV_D           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    BARRA           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    GUION_B         reduce using rule 219 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 219 (expresion -> expresion MENOR expresion .)
    INT             reduce using rule 219 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 219 (expresion -> expresion MENOR expresion .)
    PAR_I           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 219 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 219 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 219 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    CHAR_S          reduce using rule 219 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 219 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 219 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    LOOP            reduce using rule 219 (expresion -> expresion MENOR expresion .)
    COR_I           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    VEC_L           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    VEC_U           reduce using rule 219 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 219 (expresion -> expresion MENOR expresion .) ]
  ! MAS             [ reduce using rule 219 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 219 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 219 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 219 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 219 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 273

    (220) expresion -> expresion MAYOR_I expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAYOR           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    MENOR           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    MAYOR_I         reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    MENOR_I         reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    D_IGUAL         reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    NO_IGUAL        reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    OR              reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    AND             reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    AS              reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    LLV_I           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    error           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    PUNTOCOMA       reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    COMA            reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    PAR_D           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    COR_D           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    IGUAL           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    LLV_D           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    BARRA           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    GUION_B         reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    ID              reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    INT             reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    FLOAT           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    NOT             reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    PAR_I           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    ENTERO          reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    DECIMAL         reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    TRUE            reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    FALSE           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    CHAR_S          reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    CADENA          reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    IF              reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    MATCH           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    LOOP            reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    COR_I           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    VEC_L           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    VEC_U           reduce using rule 220 (expresion -> expresion MAYOR_I expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 220 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAS             [ reduce using rule 220 (expresion -> expresion MAYOR_I expresion .) ]
  ! MENOS           [ reduce using rule 220 (expresion -> expresion MAYOR_I expresion .) ]
  ! MULTI           [ reduce using rule 220 (expresion -> expresion MAYOR_I expresion .) ]
  ! DIV             [ reduce using rule 220 (expresion -> expresion MAYOR_I expresion .) ]
  ! MODULO          [ reduce using rule 220 (expresion -> expresion MAYOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 274

    (221) expresion -> expresion MENOR_I expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAYOR           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    MENOR           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    MAYOR_I         reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    MENOR_I         reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    D_IGUAL         reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    NO_IGUAL        reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    OR              reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    AND             reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    AS              reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    LLV_I           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    error           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    PUNTOCOMA       reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    COMA            reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    PAR_D           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    COR_D           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    IGUAL           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    LLV_D           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    BARRA           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    GUION_B         reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    ID              reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    INT             reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    FLOAT           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    NOT             reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    PAR_I           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    ENTERO          reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    DECIMAL         reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    TRUE            reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    FALSE           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    CHAR_S          reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    CADENA          reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    IF              reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    MATCH           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    LOOP            reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    COR_I           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    VEC_L           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    VEC_U           reduce using rule 221 (expresion -> expresion MENOR_I expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 221 (expresion -> expresion MENOR_I expresion .) ]
  ! MAS             [ reduce using rule 221 (expresion -> expresion MENOR_I expresion .) ]
  ! MENOS           [ reduce using rule 221 (expresion -> expresion MENOR_I expresion .) ]
  ! MULTI           [ reduce using rule 221 (expresion -> expresion MENOR_I expresion .) ]
  ! DIV             [ reduce using rule 221 (expresion -> expresion MENOR_I expresion .) ]
  ! MODULO          [ reduce using rule 221 (expresion -> expresion MENOR_I expresion .) ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 275

    (222) expresion -> expresion D_IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR_I resolved as shift
  ! shift/reduce conflict for MENOR_I resolved as shift
  ! shift/reduce conflict for D_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    LLV_I           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    error           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    COMA            reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    PAR_D           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    COR_D           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    IGUAL           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    LLV_D           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    BARRA           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    GUION_B         reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    ID              reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    INT             reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    FLOAT           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    NOT             reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    PAR_I           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    ENTERO          reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    DECIMAL         reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    TRUE            reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    FALSE           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    CHAR_S          reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    CADENA          reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    IF              reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    MATCH           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    LOOP            reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    COR_I           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    VEC_L           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    VEC_U           reduce using rule 222 (expresion -> expresion D_IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198

  ! PUNTO           [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAS             [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR           [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MAYOR_I         [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! MENOR_I         [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! D_IGUAL         [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! NO_IGUAL        [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! OR              [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! AND             [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]
  ! AS              [ reduce using rule 222 (expresion -> expresion D_IGUAL expresion .) ]


state 276

    (223) expresion -> expresion NO_IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    MAYOR           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_I         reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_I         reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    D_IGUAL         reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    AS              reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    LLV_I           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    error           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    PUNTOCOMA       reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    PAR_D           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    COR_D           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    IGUAL           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    LLV_D           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    BARRA           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    GUION_B         reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    INT             reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    FLOAT           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    PAR_I           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    CHAR_S          reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    LOOP            reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    COR_I           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    VEC_L           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    VEC_U           reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283

  ! PUNTO           [ reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAS             [ reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 223 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 277

    (224) expresion -> expresion OR expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    D_IGUAL         reduce using rule 224 (expresion -> expresion OR expresion .)
    OR              reduce using rule 224 (expresion -> expresion OR expresion .)
    AS              reduce using rule 224 (expresion -> expresion OR expresion .)
    LLV_I           reduce using rule 224 (expresion -> expresion OR expresion .)
    error           reduce using rule 224 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 224 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 224 (expresion -> expresion OR expresion .)
    PAR_D           reduce using rule 224 (expresion -> expresion OR expresion .)
    COR_D           reduce using rule 224 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 224 (expresion -> expresion OR expresion .)
    LLV_D           reduce using rule 224 (expresion -> expresion OR expresion .)
    BARRA           reduce using rule 224 (expresion -> expresion OR expresion .)
    GUION_B         reduce using rule 224 (expresion -> expresion OR expresion .)
    ID              reduce using rule 224 (expresion -> expresion OR expresion .)
    INT             reduce using rule 224 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 224 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 224 (expresion -> expresion OR expresion .)
    PAR_I           reduce using rule 224 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 224 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 224 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 224 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 224 (expresion -> expresion OR expresion .)
    CHAR_S          reduce using rule 224 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 224 (expresion -> expresion OR expresion .)
    IF              reduce using rule 224 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 224 (expresion -> expresion OR expresion .)
    LOOP            reduce using rule 224 (expresion -> expresion OR expresion .)
    COR_I           reduce using rule 224 (expresion -> expresion OR expresion .)
    VEC_L           reduce using rule 224 (expresion -> expresion OR expresion .)
    VEC_U           reduce using rule 224 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    NO_IGUAL        shift and go to state 195
    AND             shift and go to state 197

  ! PUNTO           [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MAS             [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MAYOR_I         [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! MENOR_I         [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 224 (expresion -> expresion OR expresion .) ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! OR              [ shift and go to state 196 ]
  ! AS              [ shift and go to state 198 ]


state 278

    (225) expresion -> expresion AND expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    D_IGUAL         reduce using rule 225 (expresion -> expresion AND expresion .)
    OR              reduce using rule 225 (expresion -> expresion AND expresion .)
    AND             reduce using rule 225 (expresion -> expresion AND expresion .)
    AS              reduce using rule 225 (expresion -> expresion AND expresion .)
    LLV_I           reduce using rule 225 (expresion -> expresion AND expresion .)
    error           reduce using rule 225 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 225 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 225 (expresion -> expresion AND expresion .)
    PAR_D           reduce using rule 225 (expresion -> expresion AND expresion .)
    COR_D           reduce using rule 225 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 225 (expresion -> expresion AND expresion .)
    LLV_D           reduce using rule 225 (expresion -> expresion AND expresion .)
    BARRA           reduce using rule 225 (expresion -> expresion AND expresion .)
    GUION_B         reduce using rule 225 (expresion -> expresion AND expresion .)
    ID              reduce using rule 225 (expresion -> expresion AND expresion .)
    INT             reduce using rule 225 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 225 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 225 (expresion -> expresion AND expresion .)
    PAR_I           reduce using rule 225 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 225 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 225 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 225 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 225 (expresion -> expresion AND expresion .)
    CHAR_S          reduce using rule 225 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 225 (expresion -> expresion AND expresion .)
    IF              reduce using rule 225 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 225 (expresion -> expresion AND expresion .)
    LOOP            reduce using rule 225 (expresion -> expresion AND expresion .)
    COR_I           reduce using rule 225 (expresion -> expresion AND expresion .)
    VEC_L           reduce using rule 225 (expresion -> expresion AND expresion .)
    VEC_U           reduce using rule 225 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    NO_IGUAL        shift and go to state 195

  ! PUNTO           [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MAS             [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MAYOR_I         [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! MENOR_I         [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 225 (expresion -> expresion AND expresion .) ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 279

    (236) expresion -> expresion AS tipo .

    PUNTO           reduce using rule 236 (expresion -> expresion AS tipo .)
    MAS             reduce using rule 236 (expresion -> expresion AS tipo .)
    MENOS           reduce using rule 236 (expresion -> expresion AS tipo .)
    MULTI           reduce using rule 236 (expresion -> expresion AS tipo .)
    DIV             reduce using rule 236 (expresion -> expresion AS tipo .)
    MODULO          reduce using rule 236 (expresion -> expresion AS tipo .)
    MAYOR           reduce using rule 236 (expresion -> expresion AS tipo .)
    MENOR           reduce using rule 236 (expresion -> expresion AS tipo .)
    MAYOR_I         reduce using rule 236 (expresion -> expresion AS tipo .)
    MENOR_I         reduce using rule 236 (expresion -> expresion AS tipo .)
    D_IGUAL         reduce using rule 236 (expresion -> expresion AS tipo .)
    NO_IGUAL        reduce using rule 236 (expresion -> expresion AS tipo .)
    OR              reduce using rule 236 (expresion -> expresion AS tipo .)
    AND             reduce using rule 236 (expresion -> expresion AS tipo .)
    AS              reduce using rule 236 (expresion -> expresion AS tipo .)
    LLV_I           reduce using rule 236 (expresion -> expresion AS tipo .)
    error           reduce using rule 236 (expresion -> expresion AS tipo .)
    PUNTOCOMA       reduce using rule 236 (expresion -> expresion AS tipo .)
    COMA            reduce using rule 236 (expresion -> expresion AS tipo .)
    PAR_D           reduce using rule 236 (expresion -> expresion AS tipo .)
    COR_D           reduce using rule 236 (expresion -> expresion AS tipo .)
    IGUAL           reduce using rule 236 (expresion -> expresion AS tipo .)
    LLV_D           reduce using rule 236 (expresion -> expresion AS tipo .)
    BARRA           reduce using rule 236 (expresion -> expresion AS tipo .)
    GUION_B         reduce using rule 236 (expresion -> expresion AS tipo .)
    ID              reduce using rule 236 (expresion -> expresion AS tipo .)
    INT             reduce using rule 236 (expresion -> expresion AS tipo .)
    FLOAT           reduce using rule 236 (expresion -> expresion AS tipo .)
    NOT             reduce using rule 236 (expresion -> expresion AS tipo .)
    PAR_I           reduce using rule 236 (expresion -> expresion AS tipo .)
    ENTERO          reduce using rule 236 (expresion -> expresion AS tipo .)
    DECIMAL         reduce using rule 236 (expresion -> expresion AS tipo .)
    TRUE            reduce using rule 236 (expresion -> expresion AS tipo .)
    FALSE           reduce using rule 236 (expresion -> expresion AS tipo .)
    CHAR_S          reduce using rule 236 (expresion -> expresion AS tipo .)
    CADENA          reduce using rule 236 (expresion -> expresion AS tipo .)
    IF              reduce using rule 236 (expresion -> expresion AS tipo .)
    MATCH           reduce using rule 236 (expresion -> expresion AS tipo .)
    LOOP            reduce using rule 236 (expresion -> expresion AS tipo .)
    COR_I           reduce using rule 236 (expresion -> expresion AS tipo .)
    VEC_L           reduce using rule 236 (expresion -> expresion AS tipo .)
    VEC_U           reduce using rule 236 (expresion -> expresion AS tipo .)


state 280

    (85) exp_if -> IF expresion . LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_I           shift and go to state 339
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 281

    (78) if -> IF expresion statement .
    (79) if -> IF expresion statement . else
    (80) else -> . ELSE statement
    (81) else -> . ELSE if

    LLV_D           reduce using rule 78 (if -> IF expresion statement .)
    LET             reduce using rule 78 (if -> IF expresion statement .)
    ID              reduce using rule 78 (if -> IF expresion statement .)
    IF              reduce using rule 78 (if -> IF expresion statement .)
    MATCH           reduce using rule 78 (if -> IF expresion statement .)
    WHILE           reduce using rule 78 (if -> IF expresion statement .)
    LOOP            reduce using rule 78 (if -> IF expresion statement .)
    FOR             reduce using rule 78 (if -> IF expresion statement .)
    BREAK           reduce using rule 78 (if -> IF expresion statement .)
    CONTINUE        reduce using rule 78 (if -> IF expresion statement .)
    RETURN          reduce using rule 78 (if -> IF expresion statement .)
    PRINT           reduce using rule 78 (if -> IF expresion statement .)
    MENOS           reduce using rule 78 (if -> IF expresion statement .)
    INT             reduce using rule 78 (if -> IF expresion statement .)
    FLOAT           reduce using rule 78 (if -> IF expresion statement .)
    NOT             reduce using rule 78 (if -> IF expresion statement .)
    PAR_I           reduce using rule 78 (if -> IF expresion statement .)
    ENTERO          reduce using rule 78 (if -> IF expresion statement .)
    DECIMAL         reduce using rule 78 (if -> IF expresion statement .)
    TRUE            reduce using rule 78 (if -> IF expresion statement .)
    FALSE           reduce using rule 78 (if -> IF expresion statement .)
    CHAR_S          reduce using rule 78 (if -> IF expresion statement .)
    CADENA          reduce using rule 78 (if -> IF expresion statement .)
    COR_I           reduce using rule 78 (if -> IF expresion statement .)
    VEC_L           reduce using rule 78 (if -> IF expresion statement .)
    VEC_U           reduce using rule 78 (if -> IF expresion statement .)
    COMA            reduce using rule 78 (if -> IF expresion statement .)
    ELSE            shift and go to state 341

    else                           shift and go to state 340

state 282

    (85) exp_if -> IF expresion LLV_I . instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (82) statement -> LLV_I . instrucciones LLV_D
    (83) statement -> LLV_I . LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    LLV_D           shift and go to state 72
    ID              shift and go to state 345
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    LET             shift and go to state 94
    WHILE           shift and go to state 100
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106

    expresion                      shift and go to state 343
    instrucciones                  shift and go to state 344
    instruccion                    shift and go to state 73
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 346
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 347
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 348
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 283

    (216) expresion -> expresion PUNTO . ABS PAR_I PAR_D
    (217) expresion -> expresion PUNTO . SQRT PAR_I PAR_D
    (234) expresion -> expresion PUNTO . TO_STRING PAR_I PAR_D
    (235) expresion -> expresion PUNTO . TO_OWNED PAR_I PAR_D
    (206) chars -> expresion PUNTO . CHARS PAR_I PAR_D
    (201) vec_contains -> expresion PUNTO . CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion PUNTO . LEN PAR_I PAR_D
    (205) clone -> expresion PUNTO . CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion PUNTO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ABS             shift and go to state 258
    SQRT            shift and go to state 259
    TO_STRING       shift and go to state 260
    TO_OWNED        shift and go to state 261
    CHARS           shift and go to state 262
    CONTAINS        shift and go to state 263
    LEN             shift and go to state 264
    CLONE           shift and go to state 265
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 257
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 284

    (167) acceso_arreglo -> ID dimensiones .
    (168) dimensiones -> dimensiones . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for COR_I resolved as shift
    LLV_I           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAS             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOS           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MULTI           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    DIV             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MODULO          reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    PUNTO           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAYOR           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOR           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAYOR_I         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOR_I         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    D_IGUAL         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    NO_IGUAL        reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    OR              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    AND             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    AS              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    error           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    PUNTOCOMA       reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    COMA            reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    PAR_D           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    COR_D           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    IGUAL           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    LLV_D           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    BARRA           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    GUION_B         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    ID              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    INT             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    FLOAT           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    NOT             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    PAR_I           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    ENTERO          reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    DECIMAL         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    TRUE            reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    FALSE           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    CHAR_S          reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    CADENA          reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    IF              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MATCH           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    LOOP            reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    VEC_L           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    VEC_U           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    COR_I           shift and go to state 183

  ! COR_I           [ reduce using rule 167 (acceso_arreglo -> ID dimensiones .) ]

    dimension                      shift and go to state 250

state 285

    (200) vec_remove -> ID PUNTO . REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID PUNTO . CAPACITY PAR_I PAR_D
    (204) length -> ID PUNTO . LEN PAR_I PAR_D

    REMOVE          shift and go to state 253
    CAPACITY        shift and go to state 254
    LEN             shift and go to state 255


state 286

    (100) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (101) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_I           shift and go to state 352
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 287

    (112) loop_exp -> LOOP statement .

    LLV_I           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAS             reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOS           reduce using rule 112 (loop_exp -> LOOP statement .)
    MULTI           reduce using rule 112 (loop_exp -> LOOP statement .)
    DIV             reduce using rule 112 (loop_exp -> LOOP statement .)
    MODULO          reduce using rule 112 (loop_exp -> LOOP statement .)
    PUNTO           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAYOR           reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOR           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAYOR_I         reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOR_I         reduce using rule 112 (loop_exp -> LOOP statement .)
    D_IGUAL         reduce using rule 112 (loop_exp -> LOOP statement .)
    NO_IGUAL        reduce using rule 112 (loop_exp -> LOOP statement .)
    OR              reduce using rule 112 (loop_exp -> LOOP statement .)
    AND             reduce using rule 112 (loop_exp -> LOOP statement .)
    AS              reduce using rule 112 (loop_exp -> LOOP statement .)
    error           reduce using rule 112 (loop_exp -> LOOP statement .)
    PUNTOCOMA       reduce using rule 112 (loop_exp -> LOOP statement .)
    COMA            reduce using rule 112 (loop_exp -> LOOP statement .)
    PAR_D           reduce using rule 112 (loop_exp -> LOOP statement .)
    COR_D           reduce using rule 112 (loop_exp -> LOOP statement .)
    IGUAL           reduce using rule 112 (loop_exp -> LOOP statement .)
    LLV_D           reduce using rule 112 (loop_exp -> LOOP statement .)
    BARRA           reduce using rule 112 (loop_exp -> LOOP statement .)
    GUION_B         reduce using rule 112 (loop_exp -> LOOP statement .)
    ID              reduce using rule 112 (loop_exp -> LOOP statement .)
    INT             reduce using rule 112 (loop_exp -> LOOP statement .)
    FLOAT           reduce using rule 112 (loop_exp -> LOOP statement .)
    NOT             reduce using rule 112 (loop_exp -> LOOP statement .)
    PAR_I           reduce using rule 112 (loop_exp -> LOOP statement .)
    ENTERO          reduce using rule 112 (loop_exp -> LOOP statement .)
    DECIMAL         reduce using rule 112 (loop_exp -> LOOP statement .)
    TRUE            reduce using rule 112 (loop_exp -> LOOP statement .)
    FALSE           reduce using rule 112 (loop_exp -> LOOP statement .)
    CHAR_S          reduce using rule 112 (loop_exp -> LOOP statement .)
    CADENA          reduce using rule 112 (loop_exp -> LOOP statement .)
    IF              reduce using rule 112 (loop_exp -> LOOP statement .)
    MATCH           reduce using rule 112 (loop_exp -> LOOP statement .)
    LOOP            reduce using rule 112 (loop_exp -> LOOP statement .)
    COR_I           reduce using rule 112 (loop_exp -> LOOP statement .)
    VEC_L           reduce using rule 112 (loop_exp -> LOOP statement .)
    VEC_U           reduce using rule 112 (loop_exp -> LOOP statement .)


state 288

    (90) match -> MATCH expresion LLV_I . case_list LLV_D
    (91) match -> MATCH expresion LLV_I . case_list default LLV_D
    (100) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (101) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (92) case_list -> . case_list case
    (93) case_list -> . case
    (102) case_list_exp -> . case_list_exp case_exp
    (103) case_list_exp -> . case_exp
    (94) case -> . exp_list_c IGUAL MAYOR statement
    (95) case -> . exp_list_c IGUAL MAYOR instruccion_no_pt COMA
    (104) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (105) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (98) exp_list_c -> . exp_list_c BARRA expresion
    (99) exp_list_c -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 353
    case_list                      shift and go to state 354
    case_list_exp                  shift and go to state 355
    case                           shift and go to state 356
    case_exp                       shift and go to state 357
    exp_list_c                     shift and go to state 358
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 289

    (107) while -> WHILE expresion statement .

    LLV_D           reduce using rule 107 (while -> WHILE expresion statement .)
    LET             reduce using rule 107 (while -> WHILE expresion statement .)
    ID              reduce using rule 107 (while -> WHILE expresion statement .)
    IF              reduce using rule 107 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 107 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 107 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 107 (while -> WHILE expresion statement .)
    FOR             reduce using rule 107 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 107 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 107 (while -> WHILE expresion statement .)
    RETURN          reduce using rule 107 (while -> WHILE expresion statement .)
    PRINT           reduce using rule 107 (while -> WHILE expresion statement .)
    MENOS           reduce using rule 107 (while -> WHILE expresion statement .)
    INT             reduce using rule 107 (while -> WHILE expresion statement .)
    FLOAT           reduce using rule 107 (while -> WHILE expresion statement .)
    NOT             reduce using rule 107 (while -> WHILE expresion statement .)
    PAR_I           reduce using rule 107 (while -> WHILE expresion statement .)
    ENTERO          reduce using rule 107 (while -> WHILE expresion statement .)
    DECIMAL         reduce using rule 107 (while -> WHILE expresion statement .)
    TRUE            reduce using rule 107 (while -> WHILE expresion statement .)
    FALSE           reduce using rule 107 (while -> WHILE expresion statement .)
    CHAR_S          reduce using rule 107 (while -> WHILE expresion statement .)
    CADENA          reduce using rule 107 (while -> WHILE expresion statement .)
    COR_I           reduce using rule 107 (while -> WHILE expresion statement .)
    VEC_L           reduce using rule 107 (while -> WHILE expresion statement .)
    VEC_U           reduce using rule 107 (while -> WHILE expresion statement .)
    COMA            reduce using rule 107 (while -> WHILE expresion statement .)


state 290

    (113) for -> FOR ID IN . rango statement
    (114) for -> FOR ID IN . expresion statement
    (115) rango -> . expresion PUNTO PUNTO expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    rango                          shift and go to state 359
    expresion                      shift and go to state 360
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 291

    (55) print -> PRINT NOT PAR_I . expresion PAR_D
    (56) print -> PRINT NOT PAR_I . CADENA COMA exp_list PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    CADENA          shift and go to state 362
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 361
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 292

    (227) expresion -> PAR_I expresion PAR_D .

    PUNTO           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MAS             reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MENOS           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MULTI           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    DIV             reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MODULO          reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MENOR           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    OR              reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    AND             reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    AS              reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    error           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    COMA            reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    COR_D           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    BARRA           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    ID              reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    INT             reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    NOT             reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    TRUE            reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    FALSE           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    CADENA          reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    IF              reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    MATCH           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    LOOP            reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    COR_I           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    VEC_L           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)
    VEC_U           reduce using rule 227 (expresion -> PAR_I expresion PAR_D .)


state 293

    (155) mod_struct -> acceso_struct IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 155 (mod_struct -> acceso_struct IGUAL expresion .)
    COMA            reduce using rule 155 (mod_struct -> acceso_struct IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 294

    (157) acceso_struct -> acceso_struct PUNTO expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    IGUAL           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    PUNTO           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MAS             reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MENOS           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MULTI           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    DIV             reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MODULO          reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MAYOR           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MENOR           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MAYOR_I         reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MENOR_I         reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    D_IGUAL         reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    NO_IGUAL        reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    OR              reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    AND             reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    AS              reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    LLV_I           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    error           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    PUNTOCOMA       reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    COMA            reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    PAR_D           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    COR_D           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    LLV_D           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    BARRA           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    GUION_B         reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    ID              reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    INT             reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    FLOAT           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    NOT             reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    PAR_I           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    ENTERO          reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    DECIMAL         reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    TRUE            reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    FALSE           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    CHAR_S          reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    CADENA          reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    IF              reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    MATCH           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    LOOP            reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    COR_I           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    VEC_L           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)
    VEC_U           reduce using rule 157 (acceso_struct -> acceso_struct PUNTO expresion .)

  ! MAS             [ shift and go to state 185 ]
  ! MENOS           [ shift and go to state 186 ]
  ! MULTI           [ shift and go to state 187 ]
  ! DIV             [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 189 ]
  ! PUNTO           [ shift and go to state 283 ]
  ! MAYOR           [ shift and go to state 190 ]
  ! MENOR           [ shift and go to state 191 ]
  ! MAYOR_I         [ shift and go to state 192 ]
  ! MENOR_I         [ shift and go to state 193 ]
  ! D_IGUAL         [ shift and go to state 194 ]
  ! NO_IGUAL        [ shift and go to state 195 ]
  ! OR              [ shift and go to state 196 ]
  ! AND             [ shift and go to state 197 ]
  ! AS              [ shift and go to state 198 ]


state 295

    (195) vec_capacity -> VEC_U D_PUNTO D_PUNTO . WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> VEC_U D_PUNTO D_PUNTO . NEW PAR_I PAR_D

    WITH_CAPACITY   shift and go to state 363
    NEW             shift and go to state 364


state 296

    (52) acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO . llamada
    (53) acceso_mod -> acceso_mod D_PUNTO D_PUNTO . ID
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D

    ID              shift and go to state 366

    llamada                        shift and go to state 365

state 297

    (214) expresion -> INT D_PUNTO D_PUNTO . POW_INT PAR_I expresion COMA expresion PAR_D

    POW_INT         shift and go to state 367


state 298

    (215) expresion -> FLOAT D_PUNTO D_PUNTO . POW_FLOAT PAR_I expresion COMA expresion PAR_D

    POW_FLOAT       shift and go to state 368


state 299

    (165) datos_arreglo -> COR_I exp_list COR_D .

    PUNTO           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MAS             reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MENOS           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MULTI           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    DIV             reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MODULO          reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MAYOR           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MENOR           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MAYOR_I         reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MENOR_I         reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    D_IGUAL         reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    NO_IGUAL        reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    OR              reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    AND             reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    AS              reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    LLV_I           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    error           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    PUNTOCOMA       reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    COMA            reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    PAR_D           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    COR_D           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    IGUAL           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    LLV_D           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    BARRA           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    GUION_B         reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    ID              reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    INT             reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    FLOAT           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    NOT             reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    PAR_I           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    ENTERO          reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    DECIMAL         reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    TRUE            reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    FALSE           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    CHAR_S          reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    CADENA          reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    IF              reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    MATCH           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    LOOP            reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    COR_I           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    VEC_L           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)
    VEC_U           reduce using rule 165 (datos_arreglo -> COR_I exp_list COR_D .)


state 300

    (57) exp_list -> exp_list COMA . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 369
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 301

    (166) datos_arreglo -> COR_I expresion PUNTOCOMA . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 370
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 302

    (196) vec_dato -> VEC_L NOT COR_I . exp_list COR_D
    (197) vec_dato -> VEC_L NOT COR_I . expresion PUNTOCOMA expresion COR_D
    (57) exp_list -> . exp_list COMA expresion
    (58) exp_list -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    exp_list                       shift and go to state 371
    expresion                      shift and go to state 372
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 303

    (68) parametro -> MUT ID D_PUNTO AMP tipo_funcion .

    PAR_D           reduce using rule 68 (parametro -> MUT ID D_PUNTO AMP tipo_funcion .)
    COMA            reduce using rule 68 (parametro -> MUT ID D_PUNTO AMP tipo_funcion .)


state 304

    (138) tipo_funcion -> VEC_U MENOR tipo MAYOR .

    PAR_D           reduce using rule 138 (tipo_funcion -> VEC_U MENOR tipo MAYOR .)
    COMA            reduce using rule 138 (tipo_funcion -> VEC_U MENOR tipo MAYOR .)
    LLV_D           reduce using rule 138 (tipo_funcion -> VEC_U MENOR tipo MAYOR .)
    error           reduce using rule 138 (tipo_funcion -> VEC_U MENOR tipo MAYOR .)
    LLV_I           reduce using rule 138 (tipo_funcion -> VEC_U MENOR tipo MAYOR .)


state 305

    (142) dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 373
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 306

    (143) dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 374
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 307

    (53) acceso_mod -> acceso_mod D_PUNTO D_PUNTO . ID

    ID              shift and go to state 375


state 308

    (61) funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .

    FN              reduce using rule 61 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .)
    STRUCT          reduce using rule 61 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .)
    MOD             reduce using rule 61 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .)
    $end            reduce using rule 61 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .)
    LLV_D           reduce using rule 61 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .)
    PUB             reduce using rule 61 (funcion -> FN ID PAR_I lista_param PAR_D MENOS MAYOR tipo_funcion statement .)


state 309

    (159) declaracion_arreglo -> LET ID D_PUNTO dimensiones_arreglo . IGUAL datos_arreglo

    IGUAL           shift and go to state 376


state 310

    (118) asignacion -> LET ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 377


state 311

    (174) declaracion_vector -> LET ID D_PUNTO VEC_U . MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> LET ID D_PUNTO VEC_U . MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> LET ID D_PUNTO VEC_U . MENOR v_tipo MAYOR IGUAL vec_capacity

    MENOR           shift and go to state 378


state 312

    (163) dimensiones_arreglo -> COR_I . dimensiones_arreglo PUNTOCOMA expresion COR_D
    (164) dimensiones_arreglo -> COR_I . tipo PUNTOCOMA expresion COR_D
    (163) dimensiones_arreglo -> . COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D
    (164) dimensiones_arreglo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    COR_I           shift and go to state 312
    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    dimensiones_arreglo            shift and go to state 379
    tipo                           shift and go to state 380
    acceso_mod                     shift and go to state 154

state 313

    (152) instancia -> ID . LLV_I lista_atributo LLV_D
    (207) expresion -> ID .
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (167) acceso_arreglo -> ID . dimensiones
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (54) acceso_mod -> ID .
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PUNTO resolved as shift
    LLV_I           shift and go to state 381
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    PUNTOCOMA       reduce using rule 207 (expresion -> ID .)
    PAR_I           shift and go to state 179
    PUNTO           shift and go to state 285
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 284
    dimension                      shift and go to state 182

state 314

    (162) declaracion_arreglo -> LET ID IGUAL datos_arreglo .
    (244) expresion -> datos_arreglo .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 162 (declaracion_arreglo -> LET ID IGUAL datos_arreglo .)
    PUNTOCOMA       reduce using rule 162 (declaracion_arreglo -> LET ID IGUAL datos_arreglo .)
    MAS             reduce using rule 244 (expresion -> datos_arreglo .)
    MENOS           reduce using rule 244 (expresion -> datos_arreglo .)
    MULTI           reduce using rule 244 (expresion -> datos_arreglo .)
    DIV             reduce using rule 244 (expresion -> datos_arreglo .)
    MODULO          reduce using rule 244 (expresion -> datos_arreglo .)
    PUNTO           reduce using rule 244 (expresion -> datos_arreglo .)
    MAYOR           reduce using rule 244 (expresion -> datos_arreglo .)
    MENOR           reduce using rule 244 (expresion -> datos_arreglo .)
    MAYOR_I         reduce using rule 244 (expresion -> datos_arreglo .)
    MENOR_I         reduce using rule 244 (expresion -> datos_arreglo .)
    D_IGUAL         reduce using rule 244 (expresion -> datos_arreglo .)
    NO_IGUAL        reduce using rule 244 (expresion -> datos_arreglo .)
    OR              reduce using rule 244 (expresion -> datos_arreglo .)
    AND             reduce using rule 244 (expresion -> datos_arreglo .)
    AS              reduce using rule 244 (expresion -> datos_arreglo .)

  ! PUNTOCOMA       [ reduce using rule 244 (expresion -> datos_arreglo .) ]


state 315

    (150) declaracion_struct -> LET ID IGUAL instancia .

    PUNTOCOMA       reduce using rule 150 (declaracion_struct -> LET ID IGUAL instancia .)


state 316

    (116) asignacion -> LET ID IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 116 (asignacion -> LET ID IGUAL expresion .)
    COMA            reduce using rule 116 (asignacion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 317

    (172) declaracion_vector -> LET ID IGUAL vec_dato .
    (245) expresion -> vec_dato .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 172 (declaracion_vector -> LET ID IGUAL vec_dato .)
    PUNTOCOMA       reduce using rule 172 (declaracion_vector -> LET ID IGUAL vec_dato .)
    MAS             reduce using rule 245 (expresion -> vec_dato .)
    MENOS           reduce using rule 245 (expresion -> vec_dato .)
    MULTI           reduce using rule 245 (expresion -> vec_dato .)
    DIV             reduce using rule 245 (expresion -> vec_dato .)
    MODULO          reduce using rule 245 (expresion -> vec_dato .)
    PUNTO           reduce using rule 245 (expresion -> vec_dato .)
    MAYOR           reduce using rule 245 (expresion -> vec_dato .)
    MENOR           reduce using rule 245 (expresion -> vec_dato .)
    MAYOR_I         reduce using rule 245 (expresion -> vec_dato .)
    MENOR_I         reduce using rule 245 (expresion -> vec_dato .)
    D_IGUAL         reduce using rule 245 (expresion -> vec_dato .)
    NO_IGUAL        reduce using rule 245 (expresion -> vec_dato .)
    OR              reduce using rule 245 (expresion -> vec_dato .)
    AND             reduce using rule 245 (expresion -> vec_dato .)
    AS              reduce using rule 245 (expresion -> vec_dato .)

  ! PUNTOCOMA       [ reduce using rule 245 (expresion -> vec_dato .) ]


state 318

    (160) declaracion_arreglo -> LET MUT ID D_PUNTO . dimensiones_arreglo IGUAL datos_arreglo
    (119) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (175) declaracion_vector -> LET MUT ID D_PUNTO . VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (177) declaracion_vector -> LET MUT ID D_PUNTO . VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (179) declaracion_vector -> LET MUT ID D_PUNTO . VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (163) dimensiones_arreglo -> . COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D
    (164) dimensiones_arreglo -> . COR_I tipo PUNTOCOMA expresion COR_D
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    VEC_U           shift and go to state 384
    COR_I           shift and go to state 312
    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    dimensiones_arreglo            shift and go to state 382
    tipo                           shift and go to state 383
    acceso_mod                     shift and go to state 154

state 319

    (161) declaracion_arreglo -> LET MUT ID IGUAL . datos_arreglo
    (151) declaracion_struct -> LET MUT ID IGUAL . instancia
    (117) asignacion -> LET MUT ID IGUAL . expresion
    (173) declaracion_vector -> LET MUT ID IGUAL . vec_dato
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (152) instancia -> . ID LLV_I lista_atributo LLV_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    COR_I           shift and go to state 134
    ID              shift and go to state 313
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    VEC_L           shift and go to state 135
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    VEC_U           shift and go to state 112

    datos_arreglo                  shift and go to state 385
    instancia                      shift and go to state 386
    expresion                      shift and go to state 387
    vec_dato                       shift and go to state 388
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 320

    (72) llamada -> ID PAR_I exp_list_llamada PAR_D .

    PUNTOCOMA       reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    PUNTO           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MAS             reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MENOS           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MULTI           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    DIV             reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MODULO          reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MAYOR           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MENOR           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MAYOR_I         reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MENOR_I         reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    D_IGUAL         reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    NO_IGUAL        reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    OR              reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    AND             reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    AS              reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    LLV_I           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    error           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    COMA            reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    PAR_D           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    COR_D           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    IGUAL           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    LLV_D           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    BARRA           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    GUION_B         reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    ID              reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    INT             reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    FLOAT           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    NOT             reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    PAR_I           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    ENTERO          reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    DECIMAL         reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    TRUE            reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    FALSE           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    CHAR_S          reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    CADENA          reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    IF              reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    MATCH           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    LOOP            reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    COR_I           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    VEC_L           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)
    VEC_U           reduce using rule 72 (llamada -> ID PAR_I exp_list_llamada PAR_D .)


state 321

    (73) exp_list_llamada -> exp_list_llamada COMA . exp_llamada
    (75) exp_llamada -> . AMP MUT expresion
    (76) exp_llamada -> . AMP expresion
    (77) exp_llamada -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    AMP             shift and go to state 247
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    exp_llamada                    shift and go to state 389
    expresion                      shift and go to state 248
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 322

    (75) exp_llamada -> AMP MUT . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 390
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 323

    (76) exp_llamada -> AMP expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           reduce using rule 76 (exp_llamada -> AMP expresion .)
    COMA            reduce using rule 76 (exp_llamada -> AMP expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 324

    (171) mod_arreglo -> ID dimensiones IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 171 (mod_arreglo -> ID dimensiones IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 325

    (198) vec_push -> ID PUNTO PUSH PAR_I . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 391
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 326

    (199) vec_insert -> ID PUNTO INSERT PAR_I . expresion COMA expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 392
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 327

    (200) vec_remove -> ID PUNTO REMOVE PAR_I . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 393
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 328

    (202) vec_get_capacity -> ID PUNTO CAPACITY PAR_I . PAR_D

    PAR_D           shift and go to state 394


state 329

    (204) length -> ID PUNTO LEN PAR_I . PAR_D

    PAR_D           shift and go to state 395


state 330

    (170) dimension -> COR_I expresion COR_D .

    IGUAL           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    COR_I           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    PUNTO           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MAS             reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MENOS           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MULTI           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    DIV             reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MODULO          reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MAYOR           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MENOR           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MAYOR_I         reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MENOR_I         reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    D_IGUAL         reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    NO_IGUAL        reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    OR              reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    AND             reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    AS              reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    LLV_I           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    error           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    PUNTOCOMA       reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    COMA            reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    PAR_D           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    COR_D           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    LLV_D           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    BARRA           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    GUION_B         reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    ID              reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    INT             reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    FLOAT           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    NOT             reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    PAR_I           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    ENTERO          reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    DECIMAL         reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    TRUE            reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    FALSE           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    CHAR_S          reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    CADENA          reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    IF              reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    MATCH           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    LOOP            reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    VEC_L           reduce using rule 170 (dimension -> COR_I expresion COR_D .)
    VEC_U           reduce using rule 170 (dimension -> COR_I expresion COR_D .)


state 331

    (216) expresion -> expresion PUNTO ABS PAR_I . PAR_D

    PAR_D           shift and go to state 396


state 332

    (217) expresion -> expresion PUNTO SQRT PAR_I . PAR_D

    PAR_D           shift and go to state 397


state 333

    (234) expresion -> expresion PUNTO TO_STRING PAR_I . PAR_D

    PAR_D           shift and go to state 398


state 334

    (235) expresion -> expresion PUNTO TO_OWNED PAR_I . PAR_D

    PAR_D           shift and go to state 399


state 335

    (206) chars -> expresion PUNTO CHARS PAR_I . PAR_D

    PAR_D           shift and go to state 400


state 336

    (201) vec_contains -> expresion PUNTO CONTAINS PAR_I . AMP expresion PAR_D

    AMP             shift and go to state 401


state 337

    (203) length -> expresion PUNTO LEN PAR_I . PAR_D

    PAR_D           shift and go to state 402


state 338

    (205) clone -> expresion PUNTO CLONE PAR_I . PAR_D

    PAR_D           shift and go to state 403


state 339

    (85) exp_if -> IF expresion LLV_I . instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF expresion LLV_I . expresion LLV_D exp_else
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 345
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    LET             shift and go to state 94
    WHILE           shift and go to state 100
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106

    expresion                      shift and go to state 343
    instrucciones                  shift and go to state 404
    instruccion                    shift and go to state 73
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 346
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 347
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 348
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 340

    (79) if -> IF expresion statement else .

    LLV_D           reduce using rule 79 (if -> IF expresion statement else .)
    LET             reduce using rule 79 (if -> IF expresion statement else .)
    ID              reduce using rule 79 (if -> IF expresion statement else .)
    IF              reduce using rule 79 (if -> IF expresion statement else .)
    MATCH           reduce using rule 79 (if -> IF expresion statement else .)
    WHILE           reduce using rule 79 (if -> IF expresion statement else .)
    LOOP            reduce using rule 79 (if -> IF expresion statement else .)
    FOR             reduce using rule 79 (if -> IF expresion statement else .)
    BREAK           reduce using rule 79 (if -> IF expresion statement else .)
    CONTINUE        reduce using rule 79 (if -> IF expresion statement else .)
    RETURN          reduce using rule 79 (if -> IF expresion statement else .)
    PRINT           reduce using rule 79 (if -> IF expresion statement else .)
    MENOS           reduce using rule 79 (if -> IF expresion statement else .)
    INT             reduce using rule 79 (if -> IF expresion statement else .)
    FLOAT           reduce using rule 79 (if -> IF expresion statement else .)
    NOT             reduce using rule 79 (if -> IF expresion statement else .)
    PAR_I           reduce using rule 79 (if -> IF expresion statement else .)
    ENTERO          reduce using rule 79 (if -> IF expresion statement else .)
    DECIMAL         reduce using rule 79 (if -> IF expresion statement else .)
    TRUE            reduce using rule 79 (if -> IF expresion statement else .)
    FALSE           reduce using rule 79 (if -> IF expresion statement else .)
    CHAR_S          reduce using rule 79 (if -> IF expresion statement else .)
    CADENA          reduce using rule 79 (if -> IF expresion statement else .)
    COR_I           reduce using rule 79 (if -> IF expresion statement else .)
    VEC_L           reduce using rule 79 (if -> IF expresion statement else .)
    VEC_U           reduce using rule 79 (if -> IF expresion statement else .)
    COMA            reduce using rule 79 (if -> IF expresion statement else .)


state 341

    (80) else -> ELSE . statement
    (81) else -> ELSE . if
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else

    error           shift and go to state 39
    LLV_I           shift and go to state 40
    IF              shift and go to state 407

    statement                      shift and go to state 405
    if                             shift and go to state 406

state 342

    (85) exp_if -> IF . expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF . expresion LLV_I expresion LLV_D exp_else
    (78) if -> IF . expresion statement
    (79) if -> IF . expresion statement else
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 408
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 343

    (86) exp_if -> IF expresion LLV_I expresion . LLV_D exp_else
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           shift and go to state 409
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 344

    (85) exp_if -> IF expresion LLV_I instrucciones . expresion LLV_D exp_else
    (82) statement -> LLV_I instrucciones . LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    LLV_D           shift and go to state 159
    ID              shift and go to state 345
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    LET             shift and go to state 94
    WHILE           shift and go to state 100
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106

    expresion                      shift and go to state 410
    instruccion                    shift and go to state 160
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 346
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 347
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 348
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 345

    (207) expresion -> ID .
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (167) acceso_arreglo -> ID . dimensiones
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (120) asignacion -> ID . IGUAL expresion
    (171) mod_arreglo -> ID . dimensiones IGUAL expresion
    (198) vec_push -> ID . PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> ID . PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (54) acceso_mod -> ID .
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PUNTO resolved as shift
    LLV_D           reduce using rule 207 (expresion -> ID .)
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    PAR_I           shift and go to state 179
    PUNTO           shift and go to state 412
    IGUAL           shift and go to state 178
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 411
    dimension                      shift and go to state 182

state 346

    (240) expresion -> llamada .
    (16) instruccion -> llamada . PUNTOCOMA

    LLV_D           reduce using rule 240 (expresion -> llamada .)
    MAS             reduce using rule 240 (expresion -> llamada .)
    MENOS           reduce using rule 240 (expresion -> llamada .)
    MULTI           reduce using rule 240 (expresion -> llamada .)
    DIV             reduce using rule 240 (expresion -> llamada .)
    MODULO          reduce using rule 240 (expresion -> llamada .)
    PUNTO           reduce using rule 240 (expresion -> llamada .)
    MAYOR           reduce using rule 240 (expresion -> llamada .)
    MENOR           reduce using rule 240 (expresion -> llamada .)
    MAYOR_I         reduce using rule 240 (expresion -> llamada .)
    MENOR_I         reduce using rule 240 (expresion -> llamada .)
    D_IGUAL         reduce using rule 240 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 240 (expresion -> llamada .)
    OR              reduce using rule 240 (expresion -> llamada .)
    AND             reduce using rule 240 (expresion -> llamada .)
    AS              reduce using rule 240 (expresion -> llamada .)
    PUNTOCOMA       shift and go to state 168


state 347

    (246) expresion -> vec_remove .
    (22) instruccion -> vec_remove . PUNTOCOMA

    LLV_D           reduce using rule 246 (expresion -> vec_remove .)
    MAS             reduce using rule 246 (expresion -> vec_remove .)
    MENOS           reduce using rule 246 (expresion -> vec_remove .)
    MULTI           reduce using rule 246 (expresion -> vec_remove .)
    DIV             reduce using rule 246 (expresion -> vec_remove .)
    MODULO          reduce using rule 246 (expresion -> vec_remove .)
    PUNTO           reduce using rule 246 (expresion -> vec_remove .)
    MAYOR           reduce using rule 246 (expresion -> vec_remove .)
    MENOR           reduce using rule 246 (expresion -> vec_remove .)
    MAYOR_I         reduce using rule 246 (expresion -> vec_remove .)
    MENOR_I         reduce using rule 246 (expresion -> vec_remove .)
    D_IGUAL         reduce using rule 246 (expresion -> vec_remove .)
    NO_IGUAL        reduce using rule 246 (expresion -> vec_remove .)
    OR              reduce using rule 246 (expresion -> vec_remove .)
    AND             reduce using rule 246 (expresion -> vec_remove .)
    AS              reduce using rule 246 (expresion -> vec_remove .)
    PUNTOCOMA       shift and go to state 174


state 348

    (253) expresion -> acceso_mod_exp .
    (23) instruccion -> acceso_mod_exp . PUNTOCOMA

    LLV_D           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAS             reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOS           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MULTI           reduce using rule 253 (expresion -> acceso_mod_exp .)
    DIV             reduce using rule 253 (expresion -> acceso_mod_exp .)
    MODULO          reduce using rule 253 (expresion -> acceso_mod_exp .)
    PUNTO           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAYOR           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOR           reduce using rule 253 (expresion -> acceso_mod_exp .)
    MAYOR_I         reduce using rule 253 (expresion -> acceso_mod_exp .)
    MENOR_I         reduce using rule 253 (expresion -> acceso_mod_exp .)
    D_IGUAL         reduce using rule 253 (expresion -> acceso_mod_exp .)
    NO_IGUAL        reduce using rule 253 (expresion -> acceso_mod_exp .)
    OR              reduce using rule 253 (expresion -> acceso_mod_exp .)
    AND             reduce using rule 253 (expresion -> acceso_mod_exp .)
    AS              reduce using rule 253 (expresion -> acceso_mod_exp .)
    PUNTOCOMA       shift and go to state 175


state 349

    (100) match_exp -> MATCH . expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> MATCH . expresion LLV_I case_list_exp default_exp LLV_D
    (90) match -> MATCH . expresion LLV_I case_list LLV_D
    (91) match -> MATCH . expresion LLV_I case_list default LLV_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 413
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 350

    (112) loop_exp -> LOOP . statement
    (111) loop -> LOOP . statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 414

state 351

    (156) acceso_struct_exp -> acceso_struct .
    (155) mod_struct -> acceso_struct . IGUAL expresion
    (157) acceso_struct -> acceso_struct . PUNTO expresion

  ! shift/reduce conflict for PUNTO resolved as shift
    LLV_D           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAS             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOS           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MULTI           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DIV             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MODULO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    D_IGUAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NO_IGUAL        reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    OR              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AND             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AS              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    COMA            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    GUION_B         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    ID              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    INT             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    FLOAT           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NOT             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PAR_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    ENTERO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DECIMAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    TRUE            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    FALSE           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    CHAR_S          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    CADENA          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    IF              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MATCH           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    LOOP            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    COR_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    VEC_L           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    VEC_U           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    IGUAL           shift and go to state 217
    PUNTO           shift and go to state 218

  ! PUNTO           [ reduce using rule 156 (acceso_struct_exp -> acceso_struct .) ]


state 352

    (100) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (101) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (102) case_list_exp -> . case_list_exp case_exp
    (103) case_list_exp -> . case_exp
    (104) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (105) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (98) exp_list_c -> . exp_list_c BARRA expresion
    (99) exp_list_c -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 353
    case_list_exp                  shift and go to state 355
    case_exp                       shift and go to state 357
    exp_list_c                     shift and go to state 415
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 353

    (99) exp_list_c -> expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    IGUAL           reduce using rule 99 (exp_list_c -> expresion .)
    BARRA           reduce using rule 99 (exp_list_c -> expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 354

    (90) match -> MATCH expresion LLV_I case_list . LLV_D
    (91) match -> MATCH expresion LLV_I case_list . default LLV_D
    (92) case_list -> case_list . case
    (96) default -> . GUION_B IGUAL MAYOR statement
    (97) default -> . GUION_B IGUAL MAYOR instruccion_no_pt COMA
    (94) case -> . exp_list_c IGUAL MAYOR statement
    (95) case -> . exp_list_c IGUAL MAYOR instruccion_no_pt COMA
    (98) exp_list_c -> . exp_list_c BARRA expresion
    (99) exp_list_c -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    LLV_D           shift and go to state 416
    GUION_B         shift and go to state 419
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 353
    default                        shift and go to state 417
    case                           shift and go to state 418
    exp_list_c                     shift and go to state 420
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 355

    (100) match_exp -> MATCH expresion LLV_I case_list_exp . LLV_D
    (101) match_exp -> MATCH expresion LLV_I case_list_exp . default_exp LLV_D
    (102) case_list_exp -> case_list_exp . case_exp
    (106) default_exp -> . GUION_B IGUAL MAYOR expresion COMA
    (104) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (105) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (98) exp_list_c -> . exp_list_c BARRA expresion
    (99) exp_list_c -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    LLV_D           shift and go to state 421
    GUION_B         shift and go to state 424
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 353
    default_exp                    shift and go to state 422
    case_exp                       shift and go to state 423
    exp_list_c                     shift and go to state 415
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 356

    (93) case_list -> case .

    LLV_D           reduce using rule 93 (case_list -> case .)
    GUION_B         reduce using rule 93 (case_list -> case .)
    ID              reduce using rule 93 (case_list -> case .)
    MENOS           reduce using rule 93 (case_list -> case .)
    INT             reduce using rule 93 (case_list -> case .)
    FLOAT           reduce using rule 93 (case_list -> case .)
    NOT             reduce using rule 93 (case_list -> case .)
    PAR_I           reduce using rule 93 (case_list -> case .)
    ENTERO          reduce using rule 93 (case_list -> case .)
    DECIMAL         reduce using rule 93 (case_list -> case .)
    TRUE            reduce using rule 93 (case_list -> case .)
    FALSE           reduce using rule 93 (case_list -> case .)
    CHAR_S          reduce using rule 93 (case_list -> case .)
    CADENA          reduce using rule 93 (case_list -> case .)
    IF              reduce using rule 93 (case_list -> case .)
    MATCH           reduce using rule 93 (case_list -> case .)
    LOOP            reduce using rule 93 (case_list -> case .)
    COR_I           reduce using rule 93 (case_list -> case .)
    VEC_L           reduce using rule 93 (case_list -> case .)
    VEC_U           reduce using rule 93 (case_list -> case .)


state 357

    (103) case_list_exp -> case_exp .

    LLV_D           reduce using rule 103 (case_list_exp -> case_exp .)
    GUION_B         reduce using rule 103 (case_list_exp -> case_exp .)
    ID              reduce using rule 103 (case_list_exp -> case_exp .)
    MENOS           reduce using rule 103 (case_list_exp -> case_exp .)
    INT             reduce using rule 103 (case_list_exp -> case_exp .)
    FLOAT           reduce using rule 103 (case_list_exp -> case_exp .)
    NOT             reduce using rule 103 (case_list_exp -> case_exp .)
    PAR_I           reduce using rule 103 (case_list_exp -> case_exp .)
    ENTERO          reduce using rule 103 (case_list_exp -> case_exp .)
    DECIMAL         reduce using rule 103 (case_list_exp -> case_exp .)
    TRUE            reduce using rule 103 (case_list_exp -> case_exp .)
    FALSE           reduce using rule 103 (case_list_exp -> case_exp .)
    CHAR_S          reduce using rule 103 (case_list_exp -> case_exp .)
    CADENA          reduce using rule 103 (case_list_exp -> case_exp .)
    IF              reduce using rule 103 (case_list_exp -> case_exp .)
    MATCH           reduce using rule 103 (case_list_exp -> case_exp .)
    LOOP            reduce using rule 103 (case_list_exp -> case_exp .)
    COR_I           reduce using rule 103 (case_list_exp -> case_exp .)
    VEC_L           reduce using rule 103 (case_list_exp -> case_exp .)
    VEC_U           reduce using rule 103 (case_list_exp -> case_exp .)


state 358

    (94) case -> exp_list_c . IGUAL MAYOR statement
    (95) case -> exp_list_c . IGUAL MAYOR instruccion_no_pt COMA
    (104) case_exp -> exp_list_c . IGUAL MAYOR expresion
    (105) case_exp -> exp_list_c . IGUAL MAYOR expresion COMA
    (98) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 425
    BARRA           shift and go to state 426


state 359

    (113) for -> FOR ID IN rango . statement
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 427

state 360

    (114) for -> FOR ID IN expresion . statement
    (115) rango -> expresion . PUNTO PUNTO expresion
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    PUNTO           shift and go to state 429
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198
    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 428

state 361

    (55) print -> PRINT NOT PAR_I expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 430
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 362

    (56) print -> PRINT NOT PAR_I CADENA . COMA exp_list PAR_D
    (233) expresion -> CADENA .

    COMA            shift and go to state 431
    PAR_D           reduce using rule 233 (expresion -> CADENA .)
    MAS             reduce using rule 233 (expresion -> CADENA .)
    MENOS           reduce using rule 233 (expresion -> CADENA .)
    MULTI           reduce using rule 233 (expresion -> CADENA .)
    DIV             reduce using rule 233 (expresion -> CADENA .)
    MODULO          reduce using rule 233 (expresion -> CADENA .)
    PUNTO           reduce using rule 233 (expresion -> CADENA .)
    MAYOR           reduce using rule 233 (expresion -> CADENA .)
    MENOR           reduce using rule 233 (expresion -> CADENA .)
    MAYOR_I         reduce using rule 233 (expresion -> CADENA .)
    MENOR_I         reduce using rule 233 (expresion -> CADENA .)
    D_IGUAL         reduce using rule 233 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 233 (expresion -> CADENA .)
    OR              reduce using rule 233 (expresion -> CADENA .)
    AND             reduce using rule 233 (expresion -> CADENA .)
    AS              reduce using rule 233 (expresion -> CADENA .)


state 363

    (195) vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY . PAR_I expresion PAR_D

    PAR_I           shift and go to state 432


state 364

    (194) vec_new -> VEC_U D_PUNTO D_PUNTO NEW . PAR_I PAR_D

    PAR_I           shift and go to state 433


state 365

    (52) acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .

    PUNTOCOMA       reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    PUNTO           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MAS             reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MENOS           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MULTI           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    DIV             reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MODULO          reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MAYOR           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MENOR           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MAYOR_I         reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MENOR_I         reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    D_IGUAL         reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    NO_IGUAL        reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    OR              reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    AND             reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    AS              reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    LLV_I           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    error           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    COMA            reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    PAR_D           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    COR_D           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    IGUAL           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    LLV_D           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    BARRA           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    GUION_B         reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    ID              reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    INT             reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    FLOAT           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    NOT             reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    PAR_I           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    ENTERO          reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    DECIMAL         reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    TRUE            reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    FALSE           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    CHAR_S          reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    CADENA          reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    IF              reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    MATCH           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    LOOP            reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    COR_I           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    VEC_L           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)
    VEC_U           reduce using rule 52 (acceso_mod_exp -> acceso_mod D_PUNTO D_PUNTO llamada .)


state 366

    (53) acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D

    D_PUNTO         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    PAR_I           shift and go to state 179


state 367

    (214) expresion -> INT D_PUNTO D_PUNTO POW_INT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 434


state 368

    (215) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT . PAR_I expresion COMA expresion PAR_D

    PAR_I           shift and go to state 435


state 369

    (57) exp_list -> exp_list COMA expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           reduce using rule 57 (exp_list -> exp_list COMA expresion .)
    COMA            reduce using rule 57 (exp_list -> exp_list COMA expresion .)
    PAR_D           reduce using rule 57 (exp_list -> exp_list COMA expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 370

    (166) datos_arreglo -> COR_I expresion PUNTOCOMA expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 436
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 371

    (196) vec_dato -> VEC_L NOT COR_I exp_list . COR_D
    (57) exp_list -> exp_list . COMA expresion

    COR_D           shift and go to state 437
    COMA            shift and go to state 300


state 372

    (197) vec_dato -> VEC_L NOT COR_I expresion . PUNTOCOMA expresion COR_D
    (58) exp_list -> expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       shift and go to state 438
    COR_D           reduce using rule 58 (exp_list -> expresion .)
    COMA            reduce using rule 58 (exp_list -> expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 373

    (142) dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .

    PAR_D           reduce using rule 142 (dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .)
    COMA            reduce using rule 142 (dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .)
    LLV_D           reduce using rule 142 (dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .)
    PUNTOCOMA       reduce using rule 142 (dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .)
    error           reduce using rule 142 (dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .)
    LLV_I           reduce using rule 142 (dimensiones_arreglo_tipo -> COR_I dimensiones_arreglo_tipo PUNTOCOMA expresion COR_D .)


state 374

    (143) dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .

    PAR_D           reduce using rule 143 (dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .)
    COMA            reduce using rule 143 (dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .)
    LLV_D           reduce using rule 143 (dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .)
    PUNTOCOMA       reduce using rule 143 (dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .)
    error           reduce using rule 143 (dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .)
    LLV_I           reduce using rule 143 (dimensiones_arreglo_tipo -> COR_I tipo PUNTOCOMA expresion COR_D .)


state 375

    (53) acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .

    D_PUNTO         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    PUNTOCOMA       reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    COR_D           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MAYOR           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    PUNTO           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MAS             reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MENOS           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MULTI           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    DIV             reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MODULO          reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MENOR           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MAYOR_I         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MENOR_I         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    D_IGUAL         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    NO_IGUAL        reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    OR              reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    AND             reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    AS              reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    LLV_I           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    error           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    COMA            reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    PAR_D           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    IGUAL           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    LLV_D           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    BARRA           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    GUION_B         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    ID              reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    INT             reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    FLOAT           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    NOT             reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    PAR_I           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    ENTERO          reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    DECIMAL         reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    TRUE            reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    FALSE           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    CHAR_S          reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    CADENA          reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    IF              reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    MATCH           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    LOOP            reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    COR_I           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    VEC_L           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)
    VEC_U           reduce using rule 53 (acceso_mod -> acceso_mod D_PUNTO D_PUNTO ID .)


state 376

    (159) declaracion_arreglo -> LET ID D_PUNTO dimensiones_arreglo IGUAL . datos_arreglo
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D

    COR_I           shift and go to state 134

    datos_arreglo                  shift and go to state 439

state 377

    (118) asignacion -> LET ID D_PUNTO tipo IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 440
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 378

    (174) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR . v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR . v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR . v_tipo MAYOR IGUAL vec_capacity
    (183) v_tipo -> . INT
    (184) v_tipo -> . FLOAT
    (185) v_tipo -> . BOOL
    (186) v_tipo -> . AMP STR
    (187) v_tipo -> . STRING
    (188) v_tipo -> . CHAR
    (189) v_tipo -> . VOID
    (190) v_tipo -> . ID
    (191) v_tipo -> . VEC_U MENOR tipo MAYOR
    (192) v_tipo -> . USIZE
    (193) v_tipo -> . tipo_modulo
    (180) tipo_modulo -> . tipo_mod D_PUNTO D_PUNTO ID
    (181) tipo_mod -> . tipo_mod D_PUNTO D_PUNTO ID
    (182) tipo_mod -> . ID

    INT             shift and go to state 444
    FLOAT           shift and go to state 445
    BOOL            shift and go to state 446
    AMP             shift and go to state 447
    STRING          shift and go to state 448
    CHAR            shift and go to state 449
    VOID            shift and go to state 450
    ID              shift and go to state 441
    VEC_U           shift and go to state 442
    USIZE           shift and go to state 451

    v_tipo                         shift and go to state 443
    tipo_modulo                    shift and go to state 452
    tipo_mod                       shift and go to state 453

state 379

    (163) dimensiones_arreglo -> COR_I dimensiones_arreglo . PUNTOCOMA expresion COR_D

    PUNTOCOMA       shift and go to state 454


state 380

    (164) dimensiones_arreglo -> COR_I tipo . PUNTOCOMA expresion COR_D

    PUNTOCOMA       shift and go to state 455


state 381

    (152) instancia -> ID LLV_I . lista_atributo LLV_D
    (153) lista_atributo -> . lista_atributo COMA ID D_PUNTO expresion
    (154) lista_atributo -> . ID D_PUNTO expresion

    ID              shift and go to state 456

    lista_atributo                 shift and go to state 457

state 382

    (160) declaracion_arreglo -> LET MUT ID D_PUNTO dimensiones_arreglo . IGUAL datos_arreglo

    IGUAL           shift and go to state 458


state 383

    (119) asignacion -> LET MUT ID D_PUNTO tipo . IGUAL expresion

    IGUAL           shift and go to state 459


state 384

    (175) declaracion_vector -> LET MUT ID D_PUNTO VEC_U . MENOR v_tipo MAYOR IGUAL vec_dato
    (177) declaracion_vector -> LET MUT ID D_PUNTO VEC_U . MENOR v_tipo MAYOR IGUAL vec_new
    (179) declaracion_vector -> LET MUT ID D_PUNTO VEC_U . MENOR v_tipo MAYOR IGUAL vec_capacity

    MENOR           shift and go to state 460


state 385

    (161) declaracion_arreglo -> LET MUT ID IGUAL datos_arreglo .
    (244) expresion -> datos_arreglo .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 161 (declaracion_arreglo -> LET MUT ID IGUAL datos_arreglo .)
    PUNTOCOMA       reduce using rule 161 (declaracion_arreglo -> LET MUT ID IGUAL datos_arreglo .)
    MAS             reduce using rule 244 (expresion -> datos_arreglo .)
    MENOS           reduce using rule 244 (expresion -> datos_arreglo .)
    MULTI           reduce using rule 244 (expresion -> datos_arreglo .)
    DIV             reduce using rule 244 (expresion -> datos_arreglo .)
    MODULO          reduce using rule 244 (expresion -> datos_arreglo .)
    PUNTO           reduce using rule 244 (expresion -> datos_arreglo .)
    MAYOR           reduce using rule 244 (expresion -> datos_arreglo .)
    MENOR           reduce using rule 244 (expresion -> datos_arreglo .)
    MAYOR_I         reduce using rule 244 (expresion -> datos_arreglo .)
    MENOR_I         reduce using rule 244 (expresion -> datos_arreglo .)
    D_IGUAL         reduce using rule 244 (expresion -> datos_arreglo .)
    NO_IGUAL        reduce using rule 244 (expresion -> datos_arreglo .)
    OR              reduce using rule 244 (expresion -> datos_arreglo .)
    AND             reduce using rule 244 (expresion -> datos_arreglo .)
    AS              reduce using rule 244 (expresion -> datos_arreglo .)

  ! PUNTOCOMA       [ reduce using rule 244 (expresion -> datos_arreglo .) ]


state 386

    (151) declaracion_struct -> LET MUT ID IGUAL instancia .

    PUNTOCOMA       reduce using rule 151 (declaracion_struct -> LET MUT ID IGUAL instancia .)


state 387

    (117) asignacion -> LET MUT ID IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 117 (asignacion -> LET MUT ID IGUAL expresion .)
    COMA            reduce using rule 117 (asignacion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 388

    (173) declaracion_vector -> LET MUT ID IGUAL vec_dato .
    (245) expresion -> vec_dato .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 173 (declaracion_vector -> LET MUT ID IGUAL vec_dato .)
    PUNTOCOMA       reduce using rule 173 (declaracion_vector -> LET MUT ID IGUAL vec_dato .)
    MAS             reduce using rule 245 (expresion -> vec_dato .)
    MENOS           reduce using rule 245 (expresion -> vec_dato .)
    MULTI           reduce using rule 245 (expresion -> vec_dato .)
    DIV             reduce using rule 245 (expresion -> vec_dato .)
    MODULO          reduce using rule 245 (expresion -> vec_dato .)
    PUNTO           reduce using rule 245 (expresion -> vec_dato .)
    MAYOR           reduce using rule 245 (expresion -> vec_dato .)
    MENOR           reduce using rule 245 (expresion -> vec_dato .)
    MAYOR_I         reduce using rule 245 (expresion -> vec_dato .)
    MENOR_I         reduce using rule 245 (expresion -> vec_dato .)
    D_IGUAL         reduce using rule 245 (expresion -> vec_dato .)
    NO_IGUAL        reduce using rule 245 (expresion -> vec_dato .)
    OR              reduce using rule 245 (expresion -> vec_dato .)
    AND             reduce using rule 245 (expresion -> vec_dato .)
    AS              reduce using rule 245 (expresion -> vec_dato .)

  ! PUNTOCOMA       [ reduce using rule 245 (expresion -> vec_dato .) ]


state 389

    (73) exp_list_llamada -> exp_list_llamada COMA exp_llamada .

    PAR_D           reduce using rule 73 (exp_list_llamada -> exp_list_llamada COMA exp_llamada .)
    COMA            reduce using rule 73 (exp_list_llamada -> exp_list_llamada COMA exp_llamada .)


state 390

    (75) exp_llamada -> AMP MUT expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           reduce using rule 75 (exp_llamada -> AMP MUT expresion .)
    COMA            reduce using rule 75 (exp_llamada -> AMP MUT expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 391

    (198) vec_push -> ID PUNTO PUSH PAR_I expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 461
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 392

    (199) vec_insert -> ID PUNTO INSERT PAR_I expresion . COMA expresion PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COMA            shift and go to state 462
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 393

    (200) vec_remove -> ID PUNTO REMOVE PAR_I expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 463
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 394

    (202) vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .

    PUNTO           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MAS             reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MENOS           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MULTI           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    DIV             reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MODULO          reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MAYOR           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MENOR           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MAYOR_I         reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MENOR_I         reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    D_IGUAL         reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    OR              reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    AND             reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    AS              reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    LLV_I           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    error           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    COMA            reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    PAR_D           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    COR_D           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    IGUAL           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    LLV_D           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    BARRA           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    GUION_B         reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    ID              reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    INT             reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    FLOAT           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    NOT             reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    PAR_I           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    ENTERO          reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    DECIMAL         reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    TRUE            reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    FALSE           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    CHAR_S          reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    CADENA          reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    IF              reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    MATCH           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    LOOP            reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    COR_I           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    VEC_L           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)
    VEC_U           reduce using rule 202 (vec_get_capacity -> ID PUNTO CAPACITY PAR_I PAR_D .)


state 395

    (204) length -> ID PUNTO LEN PAR_I PAR_D .

    PUNTO           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MAS             reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MENOS           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MULTI           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    DIV             reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MODULO          reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MAYOR           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MENOR           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MAYOR_I         reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MENOR_I         reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    D_IGUAL         reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    OR              reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    AND             reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    AS              reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    LLV_I           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    error           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    COMA            reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    PAR_D           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    COR_D           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    IGUAL           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    LLV_D           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    BARRA           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    GUION_B         reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    ID              reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    INT             reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    FLOAT           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    NOT             reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    PAR_I           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    ENTERO          reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    DECIMAL         reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    TRUE            reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    FALSE           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    CHAR_S          reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    CADENA          reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    IF              reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    MATCH           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    LOOP            reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    COR_I           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    VEC_L           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)
    VEC_U           reduce using rule 204 (length -> ID PUNTO LEN PAR_I PAR_D .)


state 396

    (216) expresion -> expresion PUNTO ABS PAR_I PAR_D .

    PUNTO           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MAS             reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MENOS           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MULTI           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    DIV             reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MODULO          reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MAYOR           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MENOR           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MAYOR_I         reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MENOR_I         reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    D_IGUAL         reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    OR              reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    AND             reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    AS              reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    LLV_I           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    error           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    COMA            reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PAR_D           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    COR_D           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    IGUAL           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    LLV_D           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    BARRA           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    GUION_B         reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    ID              reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    INT             reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    FLOAT           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    NOT             reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    PAR_I           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    ENTERO          reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    DECIMAL         reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    TRUE            reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    FALSE           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    CHAR_S          reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    CADENA          reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    IF              reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    MATCH           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    LOOP            reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    COR_I           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    VEC_L           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)
    VEC_U           reduce using rule 216 (expresion -> expresion PUNTO ABS PAR_I PAR_D .)


state 397

    (217) expresion -> expresion PUNTO SQRT PAR_I PAR_D .

    PUNTO           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MAS             reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MENOS           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MULTI           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    DIV             reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MODULO          reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MAYOR           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MENOR           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MAYOR_I         reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MENOR_I         reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    D_IGUAL         reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    OR              reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    AND             reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    AS              reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    LLV_I           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    error           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    COMA            reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PAR_D           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    COR_D           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    IGUAL           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    LLV_D           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    BARRA           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    GUION_B         reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    ID              reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    INT             reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    FLOAT           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    NOT             reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    PAR_I           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    ENTERO          reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    DECIMAL         reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    TRUE            reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    FALSE           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    CHAR_S          reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    CADENA          reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    IF              reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    MATCH           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    LOOP            reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    COR_I           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    VEC_L           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)
    VEC_U           reduce using rule 217 (expresion -> expresion PUNTO SQRT PAR_I PAR_D .)


state 398

    (234) expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .

    PUNTO           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAS             reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOS           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MULTI           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DIV             reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MODULO          reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MAYOR_I         reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MENOR_I         reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    D_IGUAL         reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    OR              reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AND             reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    AS              reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_I           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    error           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    COMA            reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_D           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    COR_D           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IGUAL           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LLV_D           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    BARRA           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    GUION_B         reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ID              reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    INT             reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FLOAT           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    NOT             reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    PAR_I           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    ENTERO          reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    DECIMAL         reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    TRUE            reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    FALSE           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CHAR_S          reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    CADENA          reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    IF              reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    MATCH           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    LOOP            reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    COR_I           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    VEC_L           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)
    VEC_U           reduce using rule 234 (expresion -> expresion PUNTO TO_STRING PAR_I PAR_D .)


state 399

    (235) expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .

    PUNTO           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MAS             reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MENOS           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MULTI           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    DIV             reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MODULO          reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MAYOR           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MENOR           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MAYOR_I         reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MENOR_I         reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    D_IGUAL         reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    OR              reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    AND             reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    AS              reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    LLV_I           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    error           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    COMA            reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    PAR_D           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    COR_D           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    IGUAL           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    LLV_D           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    BARRA           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    GUION_B         reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    ID              reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    INT             reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    FLOAT           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    NOT             reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    PAR_I           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    ENTERO          reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    DECIMAL         reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    TRUE            reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    FALSE           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    CHAR_S          reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    CADENA          reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    IF              reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    MATCH           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    LOOP            reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    COR_I           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    VEC_L           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)
    VEC_U           reduce using rule 235 (expresion -> expresion PUNTO TO_OWNED PAR_I PAR_D .)


state 400

    (206) chars -> expresion PUNTO CHARS PAR_I PAR_D .

    PUNTO           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MAS             reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MENOS           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MULTI           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    DIV             reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MODULO          reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MAYOR           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MENOR           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MAYOR_I         reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MENOR_I         reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    D_IGUAL         reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    OR              reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    AND             reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    AS              reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    LLV_I           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    error           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    COMA            reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    PAR_D           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    COR_D           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    IGUAL           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    LLV_D           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    BARRA           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    GUION_B         reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    ID              reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    INT             reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    FLOAT           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    NOT             reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    PAR_I           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    ENTERO          reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    DECIMAL         reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    TRUE            reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    FALSE           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    CHAR_S          reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    CADENA          reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    IF              reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    MATCH           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    LOOP            reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    COR_I           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    VEC_L           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)
    VEC_U           reduce using rule 206 (chars -> expresion PUNTO CHARS PAR_I PAR_D .)


state 401

    (201) vec_contains -> expresion PUNTO CONTAINS PAR_I AMP . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 464
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 402

    (203) length -> expresion PUNTO LEN PAR_I PAR_D .

    PUNTO           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MAS             reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MENOS           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MULTI           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    DIV             reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MODULO          reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MAYOR           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MENOR           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MAYOR_I         reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MENOR_I         reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    D_IGUAL         reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    OR              reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    AND             reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    AS              reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    LLV_I           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    error           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    COMA            reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    PAR_D           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    COR_D           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    IGUAL           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    LLV_D           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    BARRA           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    GUION_B         reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    ID              reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    INT             reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    FLOAT           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    NOT             reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    PAR_I           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    ENTERO          reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    DECIMAL         reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    TRUE            reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    FALSE           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    CHAR_S          reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    CADENA          reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    IF              reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    MATCH           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    LOOP            reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    COR_I           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    VEC_L           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)
    VEC_U           reduce using rule 203 (length -> expresion PUNTO LEN PAR_I PAR_D .)


state 403

    (205) clone -> expresion PUNTO CLONE PAR_I PAR_D .

    PUNTO           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MAS             reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MENOS           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MULTI           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    DIV             reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MODULO          reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MAYOR           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MENOR           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MAYOR_I         reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MENOR_I         reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    D_IGUAL         reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    OR              reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    AND             reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    AS              reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    LLV_I           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    error           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    COMA            reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    PAR_D           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    COR_D           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    IGUAL           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    LLV_D           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    BARRA           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    GUION_B         reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    ID              reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    INT             reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    FLOAT           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    NOT             reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    PAR_I           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    ENTERO          reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    DECIMAL         reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    TRUE            reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    FALSE           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    CHAR_S          reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    CADENA          reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    IF              reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    MATCH           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    LOOP            reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    COR_I           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    VEC_L           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)
    VEC_U           reduce using rule 205 (clone -> expresion PUNTO CLONE PAR_I PAR_D .)


state 404

    (85) exp_if -> IF expresion LLV_I instrucciones . expresion LLV_D exp_else
    (2) instrucciones -> instrucciones . instruccion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 345
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    LET             shift and go to state 94
    WHILE           shift and go to state 100
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106

    expresion                      shift and go to state 410
    instruccion                    shift and go to state 160
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 346
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 347
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 348
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 405

    (80) else -> ELSE statement .

    LLV_D           reduce using rule 80 (else -> ELSE statement .)
    LET             reduce using rule 80 (else -> ELSE statement .)
    ID              reduce using rule 80 (else -> ELSE statement .)
    IF              reduce using rule 80 (else -> ELSE statement .)
    MATCH           reduce using rule 80 (else -> ELSE statement .)
    WHILE           reduce using rule 80 (else -> ELSE statement .)
    LOOP            reduce using rule 80 (else -> ELSE statement .)
    FOR             reduce using rule 80 (else -> ELSE statement .)
    BREAK           reduce using rule 80 (else -> ELSE statement .)
    CONTINUE        reduce using rule 80 (else -> ELSE statement .)
    RETURN          reduce using rule 80 (else -> ELSE statement .)
    PRINT           reduce using rule 80 (else -> ELSE statement .)
    MENOS           reduce using rule 80 (else -> ELSE statement .)
    INT             reduce using rule 80 (else -> ELSE statement .)
    FLOAT           reduce using rule 80 (else -> ELSE statement .)
    NOT             reduce using rule 80 (else -> ELSE statement .)
    PAR_I           reduce using rule 80 (else -> ELSE statement .)
    ENTERO          reduce using rule 80 (else -> ELSE statement .)
    DECIMAL         reduce using rule 80 (else -> ELSE statement .)
    TRUE            reduce using rule 80 (else -> ELSE statement .)
    FALSE           reduce using rule 80 (else -> ELSE statement .)
    CHAR_S          reduce using rule 80 (else -> ELSE statement .)
    CADENA          reduce using rule 80 (else -> ELSE statement .)
    COR_I           reduce using rule 80 (else -> ELSE statement .)
    VEC_L           reduce using rule 80 (else -> ELSE statement .)
    VEC_U           reduce using rule 80 (else -> ELSE statement .)
    COMA            reduce using rule 80 (else -> ELSE statement .)


state 406

    (81) else -> ELSE if .

    LLV_D           reduce using rule 81 (else -> ELSE if .)
    LET             reduce using rule 81 (else -> ELSE if .)
    ID              reduce using rule 81 (else -> ELSE if .)
    IF              reduce using rule 81 (else -> ELSE if .)
    MATCH           reduce using rule 81 (else -> ELSE if .)
    WHILE           reduce using rule 81 (else -> ELSE if .)
    LOOP            reduce using rule 81 (else -> ELSE if .)
    FOR             reduce using rule 81 (else -> ELSE if .)
    BREAK           reduce using rule 81 (else -> ELSE if .)
    CONTINUE        reduce using rule 81 (else -> ELSE if .)
    RETURN          reduce using rule 81 (else -> ELSE if .)
    PRINT           reduce using rule 81 (else -> ELSE if .)
    MENOS           reduce using rule 81 (else -> ELSE if .)
    INT             reduce using rule 81 (else -> ELSE if .)
    FLOAT           reduce using rule 81 (else -> ELSE if .)
    NOT             reduce using rule 81 (else -> ELSE if .)
    PAR_I           reduce using rule 81 (else -> ELSE if .)
    ENTERO          reduce using rule 81 (else -> ELSE if .)
    DECIMAL         reduce using rule 81 (else -> ELSE if .)
    TRUE            reduce using rule 81 (else -> ELSE if .)
    FALSE           reduce using rule 81 (else -> ELSE if .)
    CHAR_S          reduce using rule 81 (else -> ELSE if .)
    CADENA          reduce using rule 81 (else -> ELSE if .)
    COR_I           reduce using rule 81 (else -> ELSE if .)
    VEC_L           reduce using rule 81 (else -> ELSE if .)
    VEC_U           reduce using rule 81 (else -> ELSE if .)
    COMA            reduce using rule 81 (else -> ELSE if .)


state 407

    (78) if -> IF . expresion statement
    (79) if -> IF . expresion statement else
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 465
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 408

    (85) exp_if -> IF expresion . LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> IF expresion . LLV_I expresion LLV_D exp_else
    (78) if -> IF expresion . statement
    (79) if -> IF expresion . statement else
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    LLV_I           shift and go to state 282
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198
    error           shift and go to state 39

    statement                      shift and go to state 281

state 409

    (86) exp_if -> IF expresion LLV_I expresion LLV_D . exp_else
    (87) exp_else -> . ELSE LLV_I instrucciones expresion LLV_D
    (88) exp_else -> . ELSE LLV_I expresion LLV_D
    (89) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 467

    exp_else                       shift and go to state 466

state 410

    (85) exp_if -> IF expresion LLV_I instrucciones expresion . LLV_D exp_else
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           shift and go to state 468
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 411

    (167) acceso_arreglo -> ID dimensiones .
    (171) mod_arreglo -> ID dimensiones . IGUAL expresion
    (168) dimensiones -> dimensiones . dimension
    (170) dimension -> . COR_I expresion COR_D

    LLV_D           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAS             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOS           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MULTI           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    DIV             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MODULO          reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    PUNTO           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAYOR           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOR           reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MAYOR_I         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    MENOR_I         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    D_IGUAL         reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    NO_IGUAL        reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    OR              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    AND             reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    AS              reduce using rule 167 (acceso_arreglo -> ID dimensiones .)
    IGUAL           shift and go to state 249
    COR_I           shift and go to state 183

    dimension                      shift and go to state 250

state 412

    (200) vec_remove -> ID PUNTO . REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID PUNTO . CAPACITY PAR_I PAR_D
    (204) length -> ID PUNTO . LEN PAR_I PAR_D
    (198) vec_push -> ID PUNTO . PUSH PAR_I expresion PAR_D
    (199) vec_insert -> ID PUNTO . INSERT PAR_I expresion COMA expresion PAR_D

    REMOVE          shift and go to state 253
    CAPACITY        shift and go to state 254
    LEN             shift and go to state 255
    PUSH            shift and go to state 251
    INSERT          shift and go to state 252


state 413

    (100) match_exp -> MATCH expresion . LLV_I case_list_exp LLV_D
    (101) match_exp -> MATCH expresion . LLV_I case_list_exp default_exp LLV_D
    (90) match -> MATCH expresion . LLV_I case_list LLV_D
    (91) match -> MATCH expresion . LLV_I case_list default LLV_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_I           shift and go to state 469
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 414

    (112) loop_exp -> LOOP statement .
    (111) loop -> LOOP statement .

  ! reduce/reduce conflict for LLV_D resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for ID resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for MENOS resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for INT resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for NOT resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for PAR_I resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for ENTERO resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for CHAR_S resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for CADENA resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for IF resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for MATCH resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for LOOP resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for COR_I resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for VEC_L resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for VEC_U resolved using rule 111 (loop -> LOOP statement .)
  ! reduce/reduce conflict for COMA resolved using rule 111 (loop -> LOOP statement .)
    MAS             reduce using rule 112 (loop_exp -> LOOP statement .)
    MULTI           reduce using rule 112 (loop_exp -> LOOP statement .)
    DIV             reduce using rule 112 (loop_exp -> LOOP statement .)
    MODULO          reduce using rule 112 (loop_exp -> LOOP statement .)
    PUNTO           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAYOR           reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOR           reduce using rule 112 (loop_exp -> LOOP statement .)
    MAYOR_I         reduce using rule 112 (loop_exp -> LOOP statement .)
    MENOR_I         reduce using rule 112 (loop_exp -> LOOP statement .)
    D_IGUAL         reduce using rule 112 (loop_exp -> LOOP statement .)
    NO_IGUAL        reduce using rule 112 (loop_exp -> LOOP statement .)
    OR              reduce using rule 112 (loop_exp -> LOOP statement .)
    AND             reduce using rule 112 (loop_exp -> LOOP statement .)
    AS              reduce using rule 112 (loop_exp -> LOOP statement .)
    GUION_B         reduce using rule 112 (loop_exp -> LOOP statement .)
    LLV_D           reduce using rule 111 (loop -> LOOP statement .)
    ID              reduce using rule 111 (loop -> LOOP statement .)
    MENOS           reduce using rule 111 (loop -> LOOP statement .)
    INT             reduce using rule 111 (loop -> LOOP statement .)
    FLOAT           reduce using rule 111 (loop -> LOOP statement .)
    NOT             reduce using rule 111 (loop -> LOOP statement .)
    PAR_I           reduce using rule 111 (loop -> LOOP statement .)
    ENTERO          reduce using rule 111 (loop -> LOOP statement .)
    DECIMAL         reduce using rule 111 (loop -> LOOP statement .)
    TRUE            reduce using rule 111 (loop -> LOOP statement .)
    FALSE           reduce using rule 111 (loop -> LOOP statement .)
    CHAR_S          reduce using rule 111 (loop -> LOOP statement .)
    CADENA          reduce using rule 111 (loop -> LOOP statement .)
    IF              reduce using rule 111 (loop -> LOOP statement .)
    MATCH           reduce using rule 111 (loop -> LOOP statement .)
    LOOP            reduce using rule 111 (loop -> LOOP statement .)
    COR_I           reduce using rule 111 (loop -> LOOP statement .)
    VEC_L           reduce using rule 111 (loop -> LOOP statement .)
    VEC_U           reduce using rule 111 (loop -> LOOP statement .)
    LET             reduce using rule 111 (loop -> LOOP statement .)
    WHILE           reduce using rule 111 (loop -> LOOP statement .)
    FOR             reduce using rule 111 (loop -> LOOP statement .)
    BREAK           reduce using rule 111 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 111 (loop -> LOOP statement .)
    RETURN          reduce using rule 111 (loop -> LOOP statement .)
    PRINT           reduce using rule 111 (loop -> LOOP statement .)
    COMA            reduce using rule 111 (loop -> LOOP statement .)

  ! LLV_D           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! MENOS           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! COMA            [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! ID              [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! INT             [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! FLOAT           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! NOT             [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! PAR_I           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! ENTERO          [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! DECIMAL         [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! TRUE            [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! FALSE           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! CHAR_S          [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! CADENA          [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! IF              [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! MATCH           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! LOOP            [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! COR_I           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! VEC_L           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]
  ! VEC_U           [ reduce using rule 112 (loop_exp -> LOOP statement .) ]


state 415

    (104) case_exp -> exp_list_c . IGUAL MAYOR expresion
    (105) case_exp -> exp_list_c . IGUAL MAYOR expresion COMA
    (98) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 470
    BARRA           shift and go to state 426


state 416

    (90) match -> MATCH expresion LLV_I case_list LLV_D .

    LLV_D           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LET             reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    ID              reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    IF              reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MATCH           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    WHILE           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    LOOP            reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    FOR             reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    BREAK           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CONTINUE        reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    RETURN          reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    PRINT           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    MENOS           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    INT             reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    FLOAT           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    NOT             reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    PAR_I           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    ENTERO          reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    DECIMAL         reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    TRUE            reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    FALSE           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CHAR_S          reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    CADENA          reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COR_I           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    VEC_L           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    VEC_U           reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)
    COMA            reduce using rule 90 (match -> MATCH expresion LLV_I case_list LLV_D .)


state 417

    (91) match -> MATCH expresion LLV_I case_list default . LLV_D

    LLV_D           shift and go to state 471


state 418

    (92) case_list -> case_list case .

    LLV_D           reduce using rule 92 (case_list -> case_list case .)
    GUION_B         reduce using rule 92 (case_list -> case_list case .)
    ID              reduce using rule 92 (case_list -> case_list case .)
    MENOS           reduce using rule 92 (case_list -> case_list case .)
    INT             reduce using rule 92 (case_list -> case_list case .)
    FLOAT           reduce using rule 92 (case_list -> case_list case .)
    NOT             reduce using rule 92 (case_list -> case_list case .)
    PAR_I           reduce using rule 92 (case_list -> case_list case .)
    ENTERO          reduce using rule 92 (case_list -> case_list case .)
    DECIMAL         reduce using rule 92 (case_list -> case_list case .)
    TRUE            reduce using rule 92 (case_list -> case_list case .)
    FALSE           reduce using rule 92 (case_list -> case_list case .)
    CHAR_S          reduce using rule 92 (case_list -> case_list case .)
    CADENA          reduce using rule 92 (case_list -> case_list case .)
    IF              reduce using rule 92 (case_list -> case_list case .)
    MATCH           reduce using rule 92 (case_list -> case_list case .)
    LOOP            reduce using rule 92 (case_list -> case_list case .)
    COR_I           reduce using rule 92 (case_list -> case_list case .)
    VEC_L           reduce using rule 92 (case_list -> case_list case .)
    VEC_U           reduce using rule 92 (case_list -> case_list case .)


state 419

    (96) default -> GUION_B . IGUAL MAYOR statement
    (97) default -> GUION_B . IGUAL MAYOR instruccion_no_pt COMA

    IGUAL           shift and go to state 472


state 420

    (94) case -> exp_list_c . IGUAL MAYOR statement
    (95) case -> exp_list_c . IGUAL MAYOR instruccion_no_pt COMA
    (98) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 473
    BARRA           shift and go to state 426


state 421

    (100) match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .

    PUNTO           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAS             reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOS           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MULTI           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DIV             reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MODULO          reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MAYOR_I         reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MENOR_I         reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    D_IGUAL         reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NO_IGUAL        reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    OR              reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AND             reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    AS              reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_I           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    error           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PUNTOCOMA       reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COMA            reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_D           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COR_D           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IGUAL           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LLV_D           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    BARRA           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    GUION_B         reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ID              reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    INT             reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FLOAT           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    NOT             reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    PAR_I           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    ENTERO          reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    DECIMAL         reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    TRUE            reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    FALSE           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CHAR_S          reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    CADENA          reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    IF              reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    MATCH           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    LOOP            reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    COR_I           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    VEC_L           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)
    VEC_U           reduce using rule 100 (match_exp -> MATCH expresion LLV_I case_list_exp LLV_D .)


state 422

    (101) match_exp -> MATCH expresion LLV_I case_list_exp default_exp . LLV_D

    LLV_D           shift and go to state 474


state 423

    (102) case_list_exp -> case_list_exp case_exp .

    LLV_D           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    GUION_B         reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    ID              reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    MENOS           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    INT             reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    FLOAT           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    NOT             reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    PAR_I           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    ENTERO          reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    DECIMAL         reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    TRUE            reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    FALSE           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    CHAR_S          reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    CADENA          reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    IF              reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    MATCH           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    LOOP            reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    COR_I           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    VEC_L           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)
    VEC_U           reduce using rule 102 (case_list_exp -> case_list_exp case_exp .)


state 424

    (106) default_exp -> GUION_B . IGUAL MAYOR expresion COMA

    IGUAL           shift and go to state 475


state 425

    (94) case -> exp_list_c IGUAL . MAYOR statement
    (95) case -> exp_list_c IGUAL . MAYOR instruccion_no_pt COMA
    (104) case_exp -> exp_list_c IGUAL . MAYOR expresion
    (105) case_exp -> exp_list_c IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 476


state 426

    (98) exp_list_c -> exp_list_c BARRA . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 477
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 427

    (113) for -> FOR ID IN rango statement .

    LLV_D           reduce using rule 113 (for -> FOR ID IN rango statement .)
    LET             reduce using rule 113 (for -> FOR ID IN rango statement .)
    ID              reduce using rule 113 (for -> FOR ID IN rango statement .)
    IF              reduce using rule 113 (for -> FOR ID IN rango statement .)
    MATCH           reduce using rule 113 (for -> FOR ID IN rango statement .)
    WHILE           reduce using rule 113 (for -> FOR ID IN rango statement .)
    LOOP            reduce using rule 113 (for -> FOR ID IN rango statement .)
    FOR             reduce using rule 113 (for -> FOR ID IN rango statement .)
    BREAK           reduce using rule 113 (for -> FOR ID IN rango statement .)
    CONTINUE        reduce using rule 113 (for -> FOR ID IN rango statement .)
    RETURN          reduce using rule 113 (for -> FOR ID IN rango statement .)
    PRINT           reduce using rule 113 (for -> FOR ID IN rango statement .)
    MENOS           reduce using rule 113 (for -> FOR ID IN rango statement .)
    INT             reduce using rule 113 (for -> FOR ID IN rango statement .)
    FLOAT           reduce using rule 113 (for -> FOR ID IN rango statement .)
    NOT             reduce using rule 113 (for -> FOR ID IN rango statement .)
    PAR_I           reduce using rule 113 (for -> FOR ID IN rango statement .)
    ENTERO          reduce using rule 113 (for -> FOR ID IN rango statement .)
    DECIMAL         reduce using rule 113 (for -> FOR ID IN rango statement .)
    TRUE            reduce using rule 113 (for -> FOR ID IN rango statement .)
    FALSE           reduce using rule 113 (for -> FOR ID IN rango statement .)
    CHAR_S          reduce using rule 113 (for -> FOR ID IN rango statement .)
    CADENA          reduce using rule 113 (for -> FOR ID IN rango statement .)
    COR_I           reduce using rule 113 (for -> FOR ID IN rango statement .)
    VEC_L           reduce using rule 113 (for -> FOR ID IN rango statement .)
    VEC_U           reduce using rule 113 (for -> FOR ID IN rango statement .)
    COMA            reduce using rule 113 (for -> FOR ID IN rango statement .)


state 428

    (114) for -> FOR ID IN expresion statement .

    LLV_D           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    LET             reduce using rule 114 (for -> FOR ID IN expresion statement .)
    ID              reduce using rule 114 (for -> FOR ID IN expresion statement .)
    IF              reduce using rule 114 (for -> FOR ID IN expresion statement .)
    MATCH           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    WHILE           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    LOOP            reduce using rule 114 (for -> FOR ID IN expresion statement .)
    FOR             reduce using rule 114 (for -> FOR ID IN expresion statement .)
    BREAK           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    CONTINUE        reduce using rule 114 (for -> FOR ID IN expresion statement .)
    RETURN          reduce using rule 114 (for -> FOR ID IN expresion statement .)
    PRINT           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    MENOS           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    INT             reduce using rule 114 (for -> FOR ID IN expresion statement .)
    FLOAT           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    NOT             reduce using rule 114 (for -> FOR ID IN expresion statement .)
    PAR_I           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    ENTERO          reduce using rule 114 (for -> FOR ID IN expresion statement .)
    DECIMAL         reduce using rule 114 (for -> FOR ID IN expresion statement .)
    TRUE            reduce using rule 114 (for -> FOR ID IN expresion statement .)
    FALSE           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    CHAR_S          reduce using rule 114 (for -> FOR ID IN expresion statement .)
    CADENA          reduce using rule 114 (for -> FOR ID IN expresion statement .)
    COR_I           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    VEC_L           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    VEC_U           reduce using rule 114 (for -> FOR ID IN expresion statement .)
    COMA            reduce using rule 114 (for -> FOR ID IN expresion statement .)


state 429

    (115) rango -> expresion PUNTO . PUNTO expresion
    (216) expresion -> expresion PUNTO . ABS PAR_I PAR_D
    (217) expresion -> expresion PUNTO . SQRT PAR_I PAR_D
    (234) expresion -> expresion PUNTO . TO_STRING PAR_I PAR_D
    (235) expresion -> expresion PUNTO . TO_OWNED PAR_I PAR_D
    (206) chars -> expresion PUNTO . CHARS PAR_I PAR_D
    (201) vec_contains -> expresion PUNTO . CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion PUNTO . LEN PAR_I PAR_D
    (205) clone -> expresion PUNTO . CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion PUNTO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    PUNTO           shift and go to state 478
    ABS             shift and go to state 258
    SQRT            shift and go to state 259
    TO_STRING       shift and go to state 260
    TO_OWNED        shift and go to state 261
    CHARS           shift and go to state 262
    CONTAINS        shift and go to state 263
    LEN             shift and go to state 264
    CLONE           shift and go to state 265
    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 257
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 430

    (55) print -> PRINT NOT PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 55 (print -> PRINT NOT PAR_I expresion PAR_D .)
    COMA            reduce using rule 55 (print -> PRINT NOT PAR_I expresion PAR_D .)


state 431

    (56) print -> PRINT NOT PAR_I CADENA COMA . exp_list PAR_D
    (57) exp_list -> . exp_list COMA expresion
    (58) exp_list -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    exp_list                       shift and go to state 479
    expresion                      shift and go to state 480
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 432

    (195) vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 481
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 433

    (194) vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I . PAR_D

    PAR_D           shift and go to state 482


state 434

    (214) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I . expresion COMA expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 483
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 435

    (215) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I . expresion COMA expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 484
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 436

    (166) datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .

    PUNTO           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MAS             reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MENOS           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MULTI           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    DIV             reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MODULO          reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MAYOR           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MENOR           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MAYOR_I         reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MENOR_I         reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    D_IGUAL         reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    NO_IGUAL        reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    OR              reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    AND             reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    AS              reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    LLV_I           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    error           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    PUNTOCOMA       reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    COMA            reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    PAR_D           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    COR_D           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    IGUAL           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    LLV_D           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    BARRA           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    GUION_B         reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    ID              reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    INT             reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    FLOAT           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    NOT             reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    PAR_I           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    ENTERO          reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    DECIMAL         reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    TRUE            reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    FALSE           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    CHAR_S          reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    CADENA          reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    IF              reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    MATCH           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    LOOP            reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    COR_I           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    VEC_L           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)
    VEC_U           reduce using rule 166 (datos_arreglo -> COR_I expresion PUNTOCOMA expresion COR_D .)


state 437

    (196) vec_dato -> VEC_L NOT COR_I exp_list COR_D .

    PUNTO           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MAS             reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MENOS           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MULTI           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    DIV             reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MODULO          reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MAYOR           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MENOR           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MAYOR_I         reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MENOR_I         reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    D_IGUAL         reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    NO_IGUAL        reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    OR              reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    AND             reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    AS              reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    LLV_I           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    error           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    PUNTOCOMA       reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    COMA            reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    PAR_D           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    COR_D           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    IGUAL           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    LLV_D           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    BARRA           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    GUION_B         reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    ID              reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    INT             reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    FLOAT           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    NOT             reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    PAR_I           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    ENTERO          reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    DECIMAL         reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    TRUE            reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    FALSE           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    CHAR_S          reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    CADENA          reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    IF              reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    MATCH           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    LOOP            reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    COR_I           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    VEC_L           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)
    VEC_U           reduce using rule 196 (vec_dato -> VEC_L NOT COR_I exp_list COR_D .)


state 438

    (197) vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 485
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 439

    (159) declaracion_arreglo -> LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo .

    PUNTOCOMA       reduce using rule 159 (declaracion_arreglo -> LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo .)


state 440

    (118) asignacion -> LET ID D_PUNTO tipo IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 118 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 118 (asignacion -> LET ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 441

    (190) v_tipo -> ID .
    (182) tipo_mod -> ID .

    MAYOR           reduce using rule 190 (v_tipo -> ID .)
    D_PUNTO         reduce using rule 182 (tipo_mod -> ID .)


state 442

    (191) v_tipo -> VEC_U . MENOR tipo MAYOR

    MENOR           shift and go to state 486


state 443

    (174) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo . MAYOR IGUAL vec_dato
    (176) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo . MAYOR IGUAL vec_new
    (178) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo . MAYOR IGUAL vec_capacity

    MAYOR           shift and go to state 487


state 444

    (183) v_tipo -> INT .

    MAYOR           reduce using rule 183 (v_tipo -> INT .)


state 445

    (184) v_tipo -> FLOAT .

    MAYOR           reduce using rule 184 (v_tipo -> FLOAT .)


state 446

    (185) v_tipo -> BOOL .

    MAYOR           reduce using rule 185 (v_tipo -> BOOL .)


state 447

    (186) v_tipo -> AMP . STR

    STR             shift and go to state 488


state 448

    (187) v_tipo -> STRING .

    MAYOR           reduce using rule 187 (v_tipo -> STRING .)


state 449

    (188) v_tipo -> CHAR .

    MAYOR           reduce using rule 188 (v_tipo -> CHAR .)


state 450

    (189) v_tipo -> VOID .

    MAYOR           reduce using rule 189 (v_tipo -> VOID .)


state 451

    (192) v_tipo -> USIZE .

    MAYOR           reduce using rule 192 (v_tipo -> USIZE .)


state 452

    (193) v_tipo -> tipo_modulo .

    MAYOR           reduce using rule 193 (v_tipo -> tipo_modulo .)


state 453

    (180) tipo_modulo -> tipo_mod . D_PUNTO D_PUNTO ID
    (181) tipo_mod -> tipo_mod . D_PUNTO D_PUNTO ID

    D_PUNTO         shift and go to state 489


state 454

    (163) dimensiones_arreglo -> COR_I dimensiones_arreglo PUNTOCOMA . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 490
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 455

    (164) dimensiones_arreglo -> COR_I tipo PUNTOCOMA . expresion COR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 491
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 456

    (154) lista_atributo -> ID . D_PUNTO expresion

    D_PUNTO         shift and go to state 492


state 457

    (152) instancia -> ID LLV_I lista_atributo . LLV_D
    (153) lista_atributo -> lista_atributo . COMA ID D_PUNTO expresion

    LLV_D           shift and go to state 493
    COMA            shift and go to state 494


state 458

    (160) declaracion_arreglo -> LET MUT ID D_PUNTO dimensiones_arreglo IGUAL . datos_arreglo
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D

    COR_I           shift and go to state 134

    datos_arreglo                  shift and go to state 495

state 459

    (119) asignacion -> LET MUT ID D_PUNTO tipo IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 496
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 460

    (175) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR . v_tipo MAYOR IGUAL vec_dato
    (177) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR . v_tipo MAYOR IGUAL vec_new
    (179) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR . v_tipo MAYOR IGUAL vec_capacity
    (183) v_tipo -> . INT
    (184) v_tipo -> . FLOAT
    (185) v_tipo -> . BOOL
    (186) v_tipo -> . AMP STR
    (187) v_tipo -> . STRING
    (188) v_tipo -> . CHAR
    (189) v_tipo -> . VOID
    (190) v_tipo -> . ID
    (191) v_tipo -> . VEC_U MENOR tipo MAYOR
    (192) v_tipo -> . USIZE
    (193) v_tipo -> . tipo_modulo
    (180) tipo_modulo -> . tipo_mod D_PUNTO D_PUNTO ID
    (181) tipo_mod -> . tipo_mod D_PUNTO D_PUNTO ID
    (182) tipo_mod -> . ID

    INT             shift and go to state 444
    FLOAT           shift and go to state 445
    BOOL            shift and go to state 446
    AMP             shift and go to state 447
    STRING          shift and go to state 448
    CHAR            shift and go to state 449
    VOID            shift and go to state 450
    ID              shift and go to state 441
    VEC_U           shift and go to state 442
    USIZE           shift and go to state 451

    v_tipo                         shift and go to state 497
    tipo_modulo                    shift and go to state 452
    tipo_mod                       shift and go to state 453

state 461

    (198) vec_push -> ID PUNTO PUSH PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 198 (vec_push -> ID PUNTO PUSH PAR_I expresion PAR_D .)


state 462

    (199) vec_insert -> ID PUNTO INSERT PAR_I expresion COMA . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 498
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 463

    (200) vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .

    PUNTOCOMA       reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    PUNTO           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MAS             reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MENOS           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MULTI           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    DIV             reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MODULO          reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MENOR           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    OR              reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    AND             reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    AS              reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    error           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    COMA            reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    COR_D           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    BARRA           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    ID              reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    INT             reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    NOT             reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    TRUE            reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    FALSE           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    CADENA          reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    IF              reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    MATCH           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    LOOP            reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    COR_I           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    VEC_L           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)
    VEC_U           reduce using rule 200 (vec_remove -> ID PUNTO REMOVE PAR_I expresion PAR_D .)


state 464

    (201) vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 499
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 465

    (78) if -> IF expresion . statement
    (79) if -> IF expresion . statement else
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D

    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198
    error           shift and go to state 39
    LLV_I           shift and go to state 40

    statement                      shift and go to state 281

state 466

    (86) exp_if -> IF expresion LLV_I expresion LLV_D exp_else .

    PUNTO           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAS             reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOS           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MULTI           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DIV             reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MODULO          reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    OR              reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AND             reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    AS              reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_I           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    error           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COMA            reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_D           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COR_D           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IGUAL           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LLV_D           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    BARRA           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    GUION_B         reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ID              reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    INT             reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FLOAT           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    NOT             reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    PAR_I           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    ENTERO          reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    TRUE            reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    FALSE           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CHAR_S          reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    CADENA          reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    IF              reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    MATCH           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    LOOP            reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    COR_I           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    VEC_L           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)
    VEC_U           reduce using rule 86 (exp_if -> IF expresion LLV_I expresion LLV_D exp_else .)


state 467

    (87) exp_else -> ELSE . LLV_I instrucciones expresion LLV_D
    (88) exp_else -> ELSE . LLV_I expresion LLV_D
    (89) exp_else -> ELSE . exp_if
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else

    LLV_I           shift and go to state 500
    IF              shift and go to state 199

    exp_if                         shift and go to state 501

state 468

    (85) exp_if -> IF expresion LLV_I instrucciones expresion LLV_D . exp_else
    (87) exp_else -> . ELSE LLV_I instrucciones expresion LLV_D
    (88) exp_else -> . ELSE LLV_I expresion LLV_D
    (89) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 467

    exp_else                       shift and go to state 502

state 469

    (100) match_exp -> MATCH expresion LLV_I . case_list_exp LLV_D
    (101) match_exp -> MATCH expresion LLV_I . case_list_exp default_exp LLV_D
    (90) match -> MATCH expresion LLV_I . case_list LLV_D
    (91) match -> MATCH expresion LLV_I . case_list default LLV_D
    (102) case_list_exp -> . case_list_exp case_exp
    (103) case_list_exp -> . case_exp
    (92) case_list -> . case_list case
    (93) case_list -> . case
    (104) case_exp -> . exp_list_c IGUAL MAYOR expresion
    (105) case_exp -> . exp_list_c IGUAL MAYOR expresion COMA
    (94) case -> . exp_list_c IGUAL MAYOR statement
    (95) case -> . exp_list_c IGUAL MAYOR instruccion_no_pt COMA
    (98) exp_list_c -> . exp_list_c BARRA expresion
    (99) exp_list_c -> . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 353
    case_list_exp                  shift and go to state 355
    case_list                      shift and go to state 354
    case_exp                       shift and go to state 357
    case                           shift and go to state 356
    exp_list_c                     shift and go to state 503
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 470

    (104) case_exp -> exp_list_c IGUAL . MAYOR expresion
    (105) case_exp -> exp_list_c IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 504


state 471

    (91) match -> MATCH expresion LLV_I case_list default LLV_D .

    LLV_D           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LET             reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    ID              reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    IF              reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MATCH           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    WHILE           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    LOOP            reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    FOR             reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    BREAK           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CONTINUE        reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    RETURN          reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    PRINT           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    MENOS           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    INT             reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    FLOAT           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    NOT             reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    PAR_I           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    ENTERO          reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    DECIMAL         reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    TRUE            reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    FALSE           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CHAR_S          reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    CADENA          reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COR_I           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    VEC_L           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    VEC_U           reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)
    COMA            reduce using rule 91 (match -> MATCH expresion LLV_I case_list default LLV_D .)


state 472

    (96) default -> GUION_B IGUAL . MAYOR statement
    (97) default -> GUION_B IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 505


state 473

    (94) case -> exp_list_c IGUAL . MAYOR statement
    (95) case -> exp_list_c IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 506


state 474

    (101) match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .

    PUNTO           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAS             reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOS           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MULTI           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DIV             reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MODULO          reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MAYOR_I         reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MENOR_I         reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    D_IGUAL         reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NO_IGUAL        reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    OR              reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AND             reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    AS              reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_I           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    error           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PUNTOCOMA       reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COMA            reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_D           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COR_D           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IGUAL           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LLV_D           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    BARRA           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    GUION_B         reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ID              reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    INT             reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FLOAT           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    NOT             reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    PAR_I           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    ENTERO          reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    DECIMAL         reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    TRUE            reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    FALSE           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CHAR_S          reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    CADENA          reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    IF              reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    MATCH           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    LOOP            reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    COR_I           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    VEC_L           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)
    VEC_U           reduce using rule 101 (match_exp -> MATCH expresion LLV_I case_list_exp default_exp LLV_D .)


state 475

    (106) default_exp -> GUION_B IGUAL . MAYOR expresion COMA

    MAYOR           shift and go to state 507


state 476

    (94) case -> exp_list_c IGUAL MAYOR . statement
    (95) case -> exp_list_c IGUAL MAYOR . instruccion_no_pt COMA
    (104) case_exp -> exp_list_c IGUAL MAYOR . expresion
    (105) case_exp -> exp_list_c IGUAL MAYOR . expresion COMA
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D
    (25) instruccion_no_pt -> . if
    (26) instruccion_no_pt -> . match
    (27) instruccion_no_pt -> . print
    (28) instruccion_no_pt -> . while
    (29) instruccion_no_pt -> . loop
    (30) instruccion_no_pt -> . break
    (31) instruccion_no_pt -> . continue
    (32) instruccion_no_pt -> . return
    (33) instruccion_no_pt -> . llamada
    (34) instruccion_no_pt -> . mod_struct
    (35) instruccion_no_pt -> . asignacion
    (36) instruccion_no_pt -> . for
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    error           shift and go to state 39
    LLV_I           shift and go to state 40
    ID              shift and go to state 523
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 98
    MATCH           shift and go to state 99
    PRINT           shift and go to state 106
    WHILE           shift and go to state 100
    LOOP            shift and go to state 101
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    LET             shift and go to state 525
    FOR             shift and go to state 102
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    statement                      shift and go to state 508
    instruccion_no_pt              shift and go to state 509
    expresion                      shift and go to state 510
    if                             shift and go to state 511
    match                          shift and go to state 512
    print                          shift and go to state 513
    while                          shift and go to state 514
    loop                           shift and go to state 515
    break                          shift and go to state 516
    continue                       shift and go to state 517
    return                         shift and go to state 518
    llamada                        shift and go to state 519
    mod_struct                     shift and go to state 520
    asignacion                     shift and go to state 521
    for                            shift and go to state 522
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 524
    acceso_mod                     shift and go to state 115

state 477

    (98) exp_list_c -> exp_list_c BARRA expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    IGUAL           reduce using rule 98 (exp_list_c -> exp_list_c BARRA expresion .)
    BARRA           reduce using rule 98 (exp_list_c -> exp_list_c BARRA expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 478

    (115) rango -> expresion PUNTO PUNTO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 526
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 479

    (56) print -> PRINT NOT PAR_I CADENA COMA exp_list . PAR_D
    (57) exp_list -> exp_list . COMA expresion

    PAR_D           shift and go to state 527
    COMA            shift and go to state 300


state 480

    (58) exp_list -> expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           reduce using rule 58 (exp_list -> expresion .)
    COMA            reduce using rule 58 (exp_list -> expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 481

    (195) vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 528
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 482

    (194) vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .

    PUNTO           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MAS             reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MENOS           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MULTI           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    DIV             reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MODULO          reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MAYOR           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MENOR           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MAYOR_I         reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MENOR_I         reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    D_IGUAL         reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    NO_IGUAL        reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    OR              reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    AND             reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    AS              reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    LLV_I           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    error           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    PUNTOCOMA       reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    COMA            reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    PAR_D           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    COR_D           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    IGUAL           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    LLV_D           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    BARRA           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    GUION_B         reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    ID              reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    INT             reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    FLOAT           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    NOT             reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    PAR_I           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    ENTERO          reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    DECIMAL         reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    TRUE            reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    FALSE           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    CHAR_S          reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    CADENA          reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    IF              reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    MATCH           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    LOOP            reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    COR_I           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    VEC_L           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)
    VEC_U           reduce using rule 194 (vec_new -> VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D .)


state 483

    (214) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion . COMA expresion PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COMA            shift and go to state 529
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 484

    (215) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion . COMA expresion PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COMA            shift and go to state 530
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 485

    (197) vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 531
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 486

    (191) v_tipo -> VEC_U MENOR . tipo MAYOR
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    tipo                           shift and go to state 532
    acceso_mod                     shift and go to state 154

state 487

    (174) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR . IGUAL vec_dato
    (176) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR . IGUAL vec_new
    (178) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR . IGUAL vec_capacity

    IGUAL           shift and go to state 533


state 488

    (186) v_tipo -> AMP STR .

    MAYOR           reduce using rule 186 (v_tipo -> AMP STR .)


state 489

    (180) tipo_modulo -> tipo_mod D_PUNTO . D_PUNTO ID
    (181) tipo_mod -> tipo_mod D_PUNTO . D_PUNTO ID

    D_PUNTO         shift and go to state 534


state 490

    (163) dimensiones_arreglo -> COR_I dimensiones_arreglo PUNTOCOMA expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 535
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 491

    (164) dimensiones_arreglo -> COR_I tipo PUNTOCOMA expresion . COR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COR_D           shift and go to state 536
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 492

    (154) lista_atributo -> ID D_PUNTO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 537
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 493

    (152) instancia -> ID LLV_I lista_atributo LLV_D .

    PUNTOCOMA       reduce using rule 152 (instancia -> ID LLV_I lista_atributo LLV_D .)


state 494

    (153) lista_atributo -> lista_atributo COMA . ID D_PUNTO expresion

    ID              shift and go to state 538


state 495

    (160) declaracion_arreglo -> LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo .

    PUNTOCOMA       reduce using rule 160 (declaracion_arreglo -> LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo .)


state 496

    (119) asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PUNTOCOMA       reduce using rule 119 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    COMA            reduce using rule 119 (asignacion -> LET MUT ID D_PUNTO tipo IGUAL expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 497

    (175) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo . MAYOR IGUAL vec_dato
    (177) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo . MAYOR IGUAL vec_new
    (179) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo . MAYOR IGUAL vec_capacity

    MAYOR           shift and go to state 539


state 498

    (199) vec_insert -> ID PUNTO INSERT PAR_I expresion COMA expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 540
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 499

    (201) vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .

    PUNTO           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MAS             reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MENOS           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MULTI           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    DIV             reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MODULO          reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MAYOR           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MENOR           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MAYOR_I         reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MENOR_I         reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    D_IGUAL         reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    NO_IGUAL        reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    OR              reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    AND             reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    AS              reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    LLV_I           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    error           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    PUNTOCOMA       reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    COMA            reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    PAR_D           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    COR_D           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    IGUAL           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    LLV_D           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    BARRA           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    GUION_B         reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    ID              reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    INT             reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    FLOAT           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    NOT             reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    PAR_I           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    ENTERO          reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    DECIMAL         reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    TRUE            reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    FALSE           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    CHAR_S          reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    CADENA          reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    IF              reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    MATCH           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    LOOP            reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    COR_I           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    VEC_L           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)
    VEC_U           reduce using rule 201 (vec_contains -> expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D .)


state 500

    (87) exp_else -> ELSE LLV_I . instrucciones expresion LLV_D
    (88) exp_else -> ELSE LLV_I . expresion LLV_D
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 345
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    LET             shift and go to state 94
    WHILE           shift and go to state 100
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106

    instrucciones                  shift and go to state 541
    expresion                      shift and go to state 542
    instruccion                    shift and go to state 73
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 346
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 347
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 348
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 501

    (89) exp_else -> ELSE exp_if .

    PUNTO           reduce using rule 89 (exp_else -> ELSE exp_if .)
    MAS             reduce using rule 89 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 89 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 89 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 89 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 89 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 89 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 89 (exp_else -> ELSE exp_if .)
    MAYOR_I         reduce using rule 89 (exp_else -> ELSE exp_if .)
    MENOR_I         reduce using rule 89 (exp_else -> ELSE exp_if .)
    D_IGUAL         reduce using rule 89 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 89 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 89 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 89 (exp_else -> ELSE exp_if .)
    AS              reduce using rule 89 (exp_else -> ELSE exp_if .)
    LLV_I           reduce using rule 89 (exp_else -> ELSE exp_if .)
    error           reduce using rule 89 (exp_else -> ELSE exp_if .)
    PUNTOCOMA       reduce using rule 89 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 89 (exp_else -> ELSE exp_if .)
    PAR_D           reduce using rule 89 (exp_else -> ELSE exp_if .)
    COR_D           reduce using rule 89 (exp_else -> ELSE exp_if .)
    IGUAL           reduce using rule 89 (exp_else -> ELSE exp_if .)
    LLV_D           reduce using rule 89 (exp_else -> ELSE exp_if .)
    BARRA           reduce using rule 89 (exp_else -> ELSE exp_if .)
    GUION_B         reduce using rule 89 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 89 (exp_else -> ELSE exp_if .)
    INT             reduce using rule 89 (exp_else -> ELSE exp_if .)
    FLOAT           reduce using rule 89 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 89 (exp_else -> ELSE exp_if .)
    PAR_I           reduce using rule 89 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 89 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 89 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 89 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 89 (exp_else -> ELSE exp_if .)
    CHAR_S          reduce using rule 89 (exp_else -> ELSE exp_if .)
    CADENA          reduce using rule 89 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 89 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 89 (exp_else -> ELSE exp_if .)
    LOOP            reduce using rule 89 (exp_else -> ELSE exp_if .)
    COR_I           reduce using rule 89 (exp_else -> ELSE exp_if .)
    VEC_L           reduce using rule 89 (exp_else -> ELSE exp_if .)
    VEC_U           reduce using rule 89 (exp_else -> ELSE exp_if .)


state 502

    (85) exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .

    PUNTO           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MAS             reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MENOS           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MULTI           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    DIV             reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MODULO          reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MAYOR           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MENOR           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MAYOR_I         reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MENOR_I         reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    D_IGUAL         reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    NO_IGUAL        reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    OR              reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    AND             reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    AS              reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    LLV_I           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    error           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    PUNTOCOMA       reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    COMA            reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    PAR_D           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    COR_D           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    IGUAL           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    LLV_D           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    BARRA           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    GUION_B         reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    ID              reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    INT             reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    FLOAT           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    NOT             reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    PAR_I           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    ENTERO          reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    DECIMAL         reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    TRUE            reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    FALSE           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    CHAR_S          reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    CADENA          reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    IF              reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    MATCH           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    LOOP            reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    COR_I           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    VEC_L           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)
    VEC_U           reduce using rule 85 (exp_if -> IF expresion LLV_I instrucciones expresion LLV_D exp_else .)


state 503

    (104) case_exp -> exp_list_c . IGUAL MAYOR expresion
    (105) case_exp -> exp_list_c . IGUAL MAYOR expresion COMA
    (94) case -> exp_list_c . IGUAL MAYOR statement
    (95) case -> exp_list_c . IGUAL MAYOR instruccion_no_pt COMA
    (98) exp_list_c -> exp_list_c . BARRA expresion

    IGUAL           shift and go to state 543
    BARRA           shift and go to state 426


state 504

    (104) case_exp -> exp_list_c IGUAL MAYOR . expresion
    (105) case_exp -> exp_list_c IGUAL MAYOR . expresion COMA
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 510
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 505

    (96) default -> GUION_B IGUAL MAYOR . statement
    (97) default -> GUION_B IGUAL MAYOR . instruccion_no_pt COMA
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D
    (25) instruccion_no_pt -> . if
    (26) instruccion_no_pt -> . match
    (27) instruccion_no_pt -> . print
    (28) instruccion_no_pt -> . while
    (29) instruccion_no_pt -> . loop
    (30) instruccion_no_pt -> . break
    (31) instruccion_no_pt -> . continue
    (32) instruccion_no_pt -> . return
    (33) instruccion_no_pt -> . llamada
    (34) instruccion_no_pt -> . mod_struct
    (35) instruccion_no_pt -> . asignacion
    (36) instruccion_no_pt -> . for
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    error           shift and go to state 39
    LLV_I           shift and go to state 40
    IF              shift and go to state 98
    MATCH           shift and go to state 99
    PRINT           shift and go to state 106
    WHILE           shift and go to state 100
    LOOP            shift and go to state 101
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    ID              shift and go to state 546
    LET             shift and go to state 525
    FOR             shift and go to state 102
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    statement                      shift and go to state 544
    instruccion_no_pt              shift and go to state 545
    if                             shift and go to state 511
    match                          shift and go to state 512
    print                          shift and go to state 513
    while                          shift and go to state 514
    loop                           shift and go to state 515
    break                          shift and go to state 516
    continue                       shift and go to state 517
    return                         shift and go to state 518
    llamada                        shift and go to state 519
    mod_struct                     shift and go to state 520
    asignacion                     shift and go to state 521
    for                            shift and go to state 522
    expresion                      shift and go to state 97
    acceso_struct                  shift and go to state 110
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_mod                     shift and go to state 115

state 506

    (94) case -> exp_list_c IGUAL MAYOR . statement
    (95) case -> exp_list_c IGUAL MAYOR . instruccion_no_pt COMA
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D
    (25) instruccion_no_pt -> . if
    (26) instruccion_no_pt -> . match
    (27) instruccion_no_pt -> . print
    (28) instruccion_no_pt -> . while
    (29) instruccion_no_pt -> . loop
    (30) instruccion_no_pt -> . break
    (31) instruccion_no_pt -> . continue
    (32) instruccion_no_pt -> . return
    (33) instruccion_no_pt -> . llamada
    (34) instruccion_no_pt -> . mod_struct
    (35) instruccion_no_pt -> . asignacion
    (36) instruccion_no_pt -> . for
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    error           shift and go to state 39
    LLV_I           shift and go to state 40
    IF              shift and go to state 98
    MATCH           shift and go to state 99
    PRINT           shift and go to state 106
    WHILE           shift and go to state 100
    LOOP            shift and go to state 101
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    ID              shift and go to state 546
    LET             shift and go to state 525
    FOR             shift and go to state 102
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    statement                      shift and go to state 508
    instruccion_no_pt              shift and go to state 509
    if                             shift and go to state 511
    match                          shift and go to state 512
    print                          shift and go to state 513
    while                          shift and go to state 514
    loop                           shift and go to state 515
    break                          shift and go to state 516
    continue                       shift and go to state 517
    return                         shift and go to state 518
    llamada                        shift and go to state 519
    mod_struct                     shift and go to state 520
    asignacion                     shift and go to state 521
    for                            shift and go to state 522
    expresion                      shift and go to state 97
    acceso_struct                  shift and go to state 110
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_mod                     shift and go to state 115

state 507

    (106) default_exp -> GUION_B IGUAL MAYOR . expresion COMA
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 547
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 508

    (94) case -> exp_list_c IGUAL MAYOR statement .

    LLV_D           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    GUION_B         reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    ID              reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    MENOS           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    INT             reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    FLOAT           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    NOT             reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    PAR_I           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    ENTERO          reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    DECIMAL         reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    TRUE            reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    FALSE           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    CHAR_S          reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    CADENA          reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    IF              reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    MATCH           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    LOOP            reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    COR_I           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    VEC_L           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)
    VEC_U           reduce using rule 94 (case -> exp_list_c IGUAL MAYOR statement .)


state 509

    (95) case -> exp_list_c IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 548


state 510

    (104) case_exp -> exp_list_c IGUAL MAYOR expresion .
    (105) case_exp -> exp_list_c IGUAL MAYOR expresion . COMA
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    GUION_B         reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ID              reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    INT             reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FLOAT           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    NOT             reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    PAR_I           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    ENTERO          reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    DECIMAL         reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    TRUE            reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    FALSE           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CHAR_S          reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    CADENA          reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    IF              reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    MATCH           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    LOOP            reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    COR_I           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    VEC_L           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    VEC_U           reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .)
    COMA            shift and go to state 549
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198

  ! MENOS           [ reduce using rule 104 (case_exp -> exp_list_c IGUAL MAYOR expresion .) ]


state 511

    (25) instruccion_no_pt -> if .

    COMA            reduce using rule 25 (instruccion_no_pt -> if .)


state 512

    (26) instruccion_no_pt -> match .

    COMA            reduce using rule 26 (instruccion_no_pt -> match .)


state 513

    (27) instruccion_no_pt -> print .

    COMA            reduce using rule 27 (instruccion_no_pt -> print .)


state 514

    (28) instruccion_no_pt -> while .

    COMA            reduce using rule 28 (instruccion_no_pt -> while .)


state 515

    (29) instruccion_no_pt -> loop .

    COMA            reduce using rule 29 (instruccion_no_pt -> loop .)


state 516

    (30) instruccion_no_pt -> break .

    COMA            reduce using rule 30 (instruccion_no_pt -> break .)


state 517

    (31) instruccion_no_pt -> continue .

    COMA            reduce using rule 31 (instruccion_no_pt -> continue .)


state 518

    (32) instruccion_no_pt -> return .

    COMA            reduce using rule 32 (instruccion_no_pt -> return .)


state 519

    (33) instruccion_no_pt -> llamada .
    (240) expresion -> llamada .

  ! reduce/reduce conflict for COMA resolved using rule 33 (instruccion_no_pt -> llamada .)
    COMA            reduce using rule 33 (instruccion_no_pt -> llamada .)
    MAS             reduce using rule 240 (expresion -> llamada .)
    MENOS           reduce using rule 240 (expresion -> llamada .)
    MULTI           reduce using rule 240 (expresion -> llamada .)
    DIV             reduce using rule 240 (expresion -> llamada .)
    MODULO          reduce using rule 240 (expresion -> llamada .)
    PUNTO           reduce using rule 240 (expresion -> llamada .)
    MAYOR           reduce using rule 240 (expresion -> llamada .)
    MENOR           reduce using rule 240 (expresion -> llamada .)
    MAYOR_I         reduce using rule 240 (expresion -> llamada .)
    MENOR_I         reduce using rule 240 (expresion -> llamada .)
    D_IGUAL         reduce using rule 240 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 240 (expresion -> llamada .)
    OR              reduce using rule 240 (expresion -> llamada .)
    AND             reduce using rule 240 (expresion -> llamada .)
    AS              reduce using rule 240 (expresion -> llamada .)
    LLV_D           reduce using rule 240 (expresion -> llamada .)
    GUION_B         reduce using rule 240 (expresion -> llamada .)
    ID              reduce using rule 240 (expresion -> llamada .)
    INT             reduce using rule 240 (expresion -> llamada .)
    FLOAT           reduce using rule 240 (expresion -> llamada .)
    NOT             reduce using rule 240 (expresion -> llamada .)
    PAR_I           reduce using rule 240 (expresion -> llamada .)
    ENTERO          reduce using rule 240 (expresion -> llamada .)
    DECIMAL         reduce using rule 240 (expresion -> llamada .)
    TRUE            reduce using rule 240 (expresion -> llamada .)
    FALSE           reduce using rule 240 (expresion -> llamada .)
    CHAR_S          reduce using rule 240 (expresion -> llamada .)
    CADENA          reduce using rule 240 (expresion -> llamada .)
    IF              reduce using rule 240 (expresion -> llamada .)
    MATCH           reduce using rule 240 (expresion -> llamada .)
    LOOP            reduce using rule 240 (expresion -> llamada .)
    COR_I           reduce using rule 240 (expresion -> llamada .)
    VEC_L           reduce using rule 240 (expresion -> llamada .)
    VEC_U           reduce using rule 240 (expresion -> llamada .)

  ! COMA            [ reduce using rule 240 (expresion -> llamada .) ]


state 520

    (34) instruccion_no_pt -> mod_struct .

    COMA            reduce using rule 34 (instruccion_no_pt -> mod_struct .)


state 521

    (35) instruccion_no_pt -> asignacion .

    COMA            reduce using rule 35 (instruccion_no_pt -> asignacion .)


state 522

    (36) instruccion_no_pt -> for .

    COMA            reduce using rule 36 (instruccion_no_pt -> for .)


state 523

    (207) expresion -> ID .
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (120) asignacion -> ID . IGUAL expresion
    (167) acceso_arreglo -> ID . dimensiones
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (54) acceso_mod -> ID .
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PAR_I resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for COR_I resolved as shift
    COMA            reduce using rule 207 (expresion -> ID .)
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    LLV_D           reduce using rule 207 (expresion -> ID .)
    GUION_B         reduce using rule 207 (expresion -> ID .)
    ID              reduce using rule 207 (expresion -> ID .)
    INT             reduce using rule 207 (expresion -> ID .)
    FLOAT           reduce using rule 207 (expresion -> ID .)
    NOT             reduce using rule 207 (expresion -> ID .)
    ENTERO          reduce using rule 207 (expresion -> ID .)
    DECIMAL         reduce using rule 207 (expresion -> ID .)
    TRUE            reduce using rule 207 (expresion -> ID .)
    FALSE           reduce using rule 207 (expresion -> ID .)
    CHAR_S          reduce using rule 207 (expresion -> ID .)
    CADENA          reduce using rule 207 (expresion -> ID .)
    IF              reduce using rule 207 (expresion -> ID .)
    MATCH           reduce using rule 207 (expresion -> ID .)
    LOOP            reduce using rule 207 (expresion -> ID .)
    VEC_L           reduce using rule 207 (expresion -> ID .)
    VEC_U           reduce using rule 207 (expresion -> ID .)
    PAR_I           shift and go to state 179
    IGUAL           shift and go to state 178
    PUNTO           shift and go to state 285
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]
  ! PAR_I           [ reduce using rule 207 (expresion -> ID .) ]
  ! COR_I           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 284
    dimension                      shift and go to state 182

state 524

    (155) mod_struct -> acceso_struct . IGUAL expresion
    (156) acceso_struct_exp -> acceso_struct .
    (157) acceso_struct -> acceso_struct . PUNTO expresion

  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 217
    COMA            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAS             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOS           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MULTI           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DIV             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MODULO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MAYOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MENOR_I         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    D_IGUAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NO_IGUAL        reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    OR              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AND             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    AS              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    LLV_D           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    GUION_B         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    ID              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    INT             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    FLOAT           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    NOT             reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PAR_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    ENTERO          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    DECIMAL         reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    TRUE            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    FALSE           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    CHAR_S          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    CADENA          reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    IF              reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    MATCH           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    LOOP            reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    COR_I           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    VEC_L           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    VEC_U           reduce using rule 156 (acceso_struct_exp -> acceso_struct .)
    PUNTO           shift and go to state 218

  ! PUNTO           [ reduce using rule 156 (acceso_struct_exp -> acceso_struct .) ]


state 525

    (116) asignacion -> LET . ID IGUAL expresion
    (117) asignacion -> LET . MUT ID IGUAL expresion
    (118) asignacion -> LET . ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> LET . MUT ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 550
    MUT             shift and go to state 551


state 526

    (115) rango -> expresion PUNTO PUNTO expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    error           reduce using rule 115 (rango -> expresion PUNTO PUNTO expresion .)
    LLV_I           reduce using rule 115 (rango -> expresion PUNTO PUNTO expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 527

    (56) print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .

    PUNTOCOMA       reduce using rule 56 (print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .)
    COMA            reduce using rule 56 (print -> PRINT NOT PAR_I CADENA COMA exp_list PAR_D .)


state 528

    (195) vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .

    PUNTO           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MAS             reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MENOS           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MULTI           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    DIV             reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MODULO          reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MAYOR           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MENOR           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MAYOR_I         reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MENOR_I         reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    D_IGUAL         reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    NO_IGUAL        reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    OR              reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    AND             reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    AS              reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    LLV_I           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    error           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    PUNTOCOMA       reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    COMA            reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    PAR_D           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    COR_D           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    IGUAL           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    LLV_D           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    BARRA           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    GUION_B         reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    ID              reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    INT             reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    FLOAT           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    NOT             reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    PAR_I           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    ENTERO          reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    DECIMAL         reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    TRUE            reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    FALSE           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    CHAR_S          reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    CADENA          reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    IF              reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    MATCH           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    LOOP            reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    COR_I           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    VEC_L           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)
    VEC_U           reduce using rule 195 (vec_capacity -> VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D .)


state 529

    (214) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 552
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 530

    (215) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA . expresion PAR_D
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 553
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 531

    (197) vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .

    PUNTO           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MAS             reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MENOS           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MULTI           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    DIV             reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MODULO          reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MAYOR           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MENOR           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MAYOR_I         reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MENOR_I         reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    D_IGUAL         reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    NO_IGUAL        reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    OR              reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    AND             reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    AS              reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    LLV_I           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    error           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    PUNTOCOMA       reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    COMA            reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    PAR_D           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    COR_D           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    IGUAL           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    LLV_D           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    BARRA           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    GUION_B         reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    ID              reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    INT             reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    FLOAT           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    NOT             reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    PAR_I           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    ENTERO          reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    DECIMAL         reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    TRUE            reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    FALSE           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    CHAR_S          reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    CADENA          reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    IF              reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    MATCH           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    LOOP            reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    COR_I           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    VEC_L           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)
    VEC_U           reduce using rule 197 (vec_dato -> VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D .)


state 532

    (191) v_tipo -> VEC_U MENOR tipo . MAYOR

    MAYOR           shift and go to state 554


state 533

    (174) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL . vec_dato
    (176) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL . vec_new
    (178) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL . vec_capacity
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D

    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 555

    vec_dato                       shift and go to state 556
    vec_new                        shift and go to state 557
    vec_capacity                   shift and go to state 558

state 534

    (180) tipo_modulo -> tipo_mod D_PUNTO D_PUNTO . ID
    (181) tipo_mod -> tipo_mod D_PUNTO D_PUNTO . ID

    ID              shift and go to state 559


state 535

    (163) dimensiones_arreglo -> COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D .

    IGUAL           reduce using rule 163 (dimensiones_arreglo -> COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D .)
    PUNTOCOMA       reduce using rule 163 (dimensiones_arreglo -> COR_I dimensiones_arreglo PUNTOCOMA expresion COR_D .)


state 536

    (164) dimensiones_arreglo -> COR_I tipo PUNTOCOMA expresion COR_D .

    IGUAL           reduce using rule 164 (dimensiones_arreglo -> COR_I tipo PUNTOCOMA expresion COR_D .)
    PUNTOCOMA       reduce using rule 164 (dimensiones_arreglo -> COR_I tipo PUNTOCOMA expresion COR_D .)


state 537

    (154) lista_atributo -> ID D_PUNTO expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           reduce using rule 154 (lista_atributo -> ID D_PUNTO expresion .)
    COMA            reduce using rule 154 (lista_atributo -> ID D_PUNTO expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 538

    (153) lista_atributo -> lista_atributo COMA ID . D_PUNTO expresion

    D_PUNTO         shift and go to state 560


state 539

    (175) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR . IGUAL vec_dato
    (177) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR . IGUAL vec_new
    (179) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR . IGUAL vec_capacity

    IGUAL           shift and go to state 561


state 540

    (199) vec_insert -> ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D .

    PUNTOCOMA       reduce using rule 199 (vec_insert -> ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D .)


state 541

    (87) exp_else -> ELSE LLV_I instrucciones . expresion LLV_D
    (2) instrucciones -> instrucciones . instruccion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (4) instruccion -> . declaracion_arreglo PUNTOCOMA
    (5) instruccion -> . declaracion_struct PUNTOCOMA
    (6) instruccion -> . asignacion PUNTOCOMA
    (7) instruccion -> . if
    (8) instruccion -> . match
    (9) instruccion -> . while
    (10) instruccion -> . loop
    (11) instruccion -> . for
    (12) instruccion -> . break PUNTOCOMA
    (13) instruccion -> . continue PUNTOCOMA
    (14) instruccion -> . return PUNTOCOMA
    (15) instruccion -> . print PUNTOCOMA
    (16) instruccion -> . llamada PUNTOCOMA
    (17) instruccion -> . mod_struct PUNTOCOMA
    (18) instruccion -> . mod_arreglo PUNTOCOMA
    (19) instruccion -> . declaracion_vector PUNTOCOMA
    (20) instruccion -> . vec_push PUNTOCOMA
    (21) instruccion -> . vec_insert PUNTOCOMA
    (22) instruccion -> . vec_remove PUNTOCOMA
    (23) instruccion -> . acceso_mod_exp PUNTOCOMA
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (159) declaracion_arreglo -> . LET ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (160) declaracion_arreglo -> . LET MUT ID D_PUNTO dimensiones_arreglo IGUAL datos_arreglo
    (161) declaracion_arreglo -> . LET MUT ID IGUAL datos_arreglo
    (162) declaracion_arreglo -> . LET ID IGUAL datos_arreglo
    (150) declaracion_struct -> . LET ID IGUAL instancia
    (151) declaracion_struct -> . LET MUT ID IGUAL instancia
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (171) mod_arreglo -> . ID dimensiones IGUAL expresion
    (172) declaracion_vector -> . LET ID IGUAL vec_dato
    (173) declaracion_vector -> . LET MUT ID IGUAL vec_dato
    (174) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (175) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato
    (176) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (177) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new
    (178) declaracion_vector -> . LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (179) declaracion_vector -> . LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity
    (198) vec_push -> . ID PUNTO PUSH PAR_I expresion PAR_D
    (199) vec_insert -> . ID PUNTO INSERT PAR_I expresion COMA expresion PAR_D
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 345
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    LET             shift and go to state 94
    WHILE           shift and go to state 100
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 106

    expresion                      shift and go to state 562
    instruccion                    shift and go to state 160
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 346
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 347
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 348
    declaracion_arreglo            shift and go to state 74
    declaracion_struct             shift and go to state 75
    asignacion                     shift and go to state 76
    if                             shift and go to state 77
    match                          shift and go to state 78
    while                          shift and go to state 79
    loop                           shift and go to state 80
    for                            shift and go to state 81
    break                          shift and go to state 82
    continue                       shift and go to state 83
    return                         shift and go to state 84
    print                          shift and go to state 85
    mod_struct                     shift and go to state 87
    mod_arreglo                    shift and go to state 88
    declaracion_vector             shift and go to state 89
    vec_push                       shift and go to state 90
    vec_insert                     shift and go to state 91
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 542

    (88) exp_else -> ELSE LLV_I expresion . LLV_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           shift and go to state 563
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 543

    (104) case_exp -> exp_list_c IGUAL . MAYOR expresion
    (105) case_exp -> exp_list_c IGUAL . MAYOR expresion COMA
    (94) case -> exp_list_c IGUAL . MAYOR statement
    (95) case -> exp_list_c IGUAL . MAYOR instruccion_no_pt COMA

    MAYOR           shift and go to state 564


state 544

    (96) default -> GUION_B IGUAL MAYOR statement .

    LLV_D           reduce using rule 96 (default -> GUION_B IGUAL MAYOR statement .)


state 545

    (97) default -> GUION_B IGUAL MAYOR instruccion_no_pt . COMA

    COMA            shift and go to state 565


state 546

    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (120) asignacion -> ID . IGUAL expresion
    (207) expresion -> ID .
    (167) acceso_arreglo -> ID . dimensiones
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (54) acceso_mod -> ID .
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PUNTO resolved as shift
    PAR_I           shift and go to state 179
    IGUAL           shift and go to state 178
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    PUNTO           shift and go to state 285
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 284
    dimension                      shift and go to state 182

state 547

    (106) default_exp -> GUION_B IGUAL MAYOR expresion . COMA
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    COMA            shift and go to state 566
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 548

    (95) case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    GUION_B         reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    ID              reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    MENOS           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    INT             reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    FLOAT           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    NOT             reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    PAR_I           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    ENTERO          reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    DECIMAL         reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    TRUE            reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    FALSE           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    CHAR_S          reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    CADENA          reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    IF              reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    MATCH           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    LOOP            reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    COR_I           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    VEC_L           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)
    VEC_U           reduce using rule 95 (case -> exp_list_c IGUAL MAYOR instruccion_no_pt COMA .)


state 549

    (105) case_exp -> exp_list_c IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    GUION_B         reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ID              reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MENOS           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    INT             reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FLOAT           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    NOT             reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    PAR_I           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    ENTERO          reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    DECIMAL         reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    TRUE            reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    FALSE           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CHAR_S          reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    CADENA          reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    IF              reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    MATCH           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    LOOP            reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    COR_I           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    VEC_L           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)
    VEC_U           reduce using rule 105 (case_exp -> exp_list_c IGUAL MAYOR expresion COMA .)


state 550

    (116) asignacion -> LET ID . IGUAL expresion
    (118) asignacion -> LET ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 567
    D_PUNTO         shift and go to state 568


state 551

    (117) asignacion -> LET MUT . ID IGUAL expresion
    (119) asignacion -> LET MUT . ID D_PUNTO tipo IGUAL expresion

    ID              shift and go to state 569


state 552

    (214) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 570
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 553

    (215) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion . PAR_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    PAR_D           shift and go to state 571
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 554

    (191) v_tipo -> VEC_U MENOR tipo MAYOR .

    MAYOR           reduce using rule 191 (v_tipo -> VEC_U MENOR tipo MAYOR .)


state 555

    (194) vec_new -> VEC_U . D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (195) vec_capacity -> VEC_U . D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D

    D_PUNTO         shift and go to state 572


state 556

    (174) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato .

    PUNTOCOMA       reduce using rule 174 (declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato .)


state 557

    (176) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new .

    PUNTOCOMA       reduce using rule 176 (declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new .)


state 558

    (178) declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity .

    PUNTOCOMA       reduce using rule 178 (declaracion_vector -> LET ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity .)


state 559

    (180) tipo_modulo -> tipo_mod D_PUNTO D_PUNTO ID .
    (181) tipo_mod -> tipo_mod D_PUNTO D_PUNTO ID .

    MAYOR           reduce using rule 180 (tipo_modulo -> tipo_mod D_PUNTO D_PUNTO ID .)
    D_PUNTO         reduce using rule 181 (tipo_mod -> tipo_mod D_PUNTO D_PUNTO ID .)


state 560

    (153) lista_atributo -> lista_atributo COMA ID D_PUNTO . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 573
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 561

    (175) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL . vec_dato
    (177) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL . vec_new
    (179) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL . vec_capacity
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D

    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 555

    vec_dato                       shift and go to state 574
    vec_new                        shift and go to state 575
    vec_capacity                   shift and go to state 576

state 562

    (87) exp_else -> ELSE LLV_I instrucciones expresion . LLV_D
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           shift and go to state 577
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 563

    (88) exp_else -> ELSE LLV_I expresion LLV_D .

    PUNTO           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAS             reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOS           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MULTI           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DIV             reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MODULO          reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MAYOR_I         reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MENOR_I         reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    D_IGUAL         reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NO_IGUAL        reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    OR              reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AND             reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    AS              reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_I           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    error           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PUNTOCOMA       reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COMA            reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_D           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COR_D           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IGUAL           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LLV_D           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    BARRA           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    GUION_B         reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ID              reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    INT             reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FLOAT           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    NOT             reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    PAR_I           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    ENTERO          reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    DECIMAL         reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    TRUE            reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    FALSE           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CHAR_S          reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    CADENA          reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    IF              reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    MATCH           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    LOOP            reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    COR_I           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    VEC_L           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)
    VEC_U           reduce using rule 88 (exp_else -> ELSE LLV_I expresion LLV_D .)


state 564

    (104) case_exp -> exp_list_c IGUAL MAYOR . expresion
    (105) case_exp -> exp_list_c IGUAL MAYOR . expresion COMA
    (94) case -> exp_list_c IGUAL MAYOR . statement
    (95) case -> exp_list_c IGUAL MAYOR . instruccion_no_pt COMA
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (24) statement -> . error PUNTOCOMA
    (82) statement -> . LLV_I instrucciones LLV_D
    (83) statement -> . LLV_I LLV_D
    (84) statement -> . error LLV_D
    (25) instruccion_no_pt -> . if
    (26) instruccion_no_pt -> . match
    (27) instruccion_no_pt -> . print
    (28) instruccion_no_pt -> . while
    (29) instruccion_no_pt -> . loop
    (30) instruccion_no_pt -> . break
    (31) instruccion_no_pt -> . continue
    (32) instruccion_no_pt -> . return
    (33) instruccion_no_pt -> . llamada
    (34) instruccion_no_pt -> . mod_struct
    (35) instruccion_no_pt -> . asignacion
    (36) instruccion_no_pt -> . for
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (78) if -> . IF expresion statement
    (79) if -> . IF expresion statement else
    (90) match -> . MATCH expresion LLV_I case_list LLV_D
    (91) match -> . MATCH expresion LLV_I case_list default LLV_D
    (55) print -> . PRINT NOT PAR_I expresion PAR_D
    (56) print -> . PRINT NOT PAR_I CADENA COMA exp_list PAR_D
    (107) while -> . WHILE expresion statement
    (111) loop -> . LOOP statement
    (108) break -> . BREAK
    (109) break -> . BREAK expresion
    (110) continue -> . CONTINUE
    (69) return -> . RETURN expresion
    (70) return -> . RETURN
    (155) mod_struct -> . acceso_struct IGUAL expresion
    (116) asignacion -> . LET ID IGUAL expresion
    (117) asignacion -> . LET MUT ID IGUAL expresion
    (118) asignacion -> . LET ID D_PUNTO tipo IGUAL expresion
    (119) asignacion -> . LET MUT ID D_PUNTO tipo IGUAL expresion
    (120) asignacion -> . ID IGUAL expresion
    (113) for -> . FOR ID IN rango statement
    (114) for -> . FOR ID IN expresion statement
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 578
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    error           shift and go to state 39
    LLV_I           shift and go to state 40
    IF              shift and go to state 342
    MATCH           shift and go to state 349
    LOOP            shift and go to state 350
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112
    PRINT           shift and go to state 106
    WHILE           shift and go to state 100
    BREAK           shift and go to state 103
    CONTINUE        shift and go to state 104
    RETURN          shift and go to state 105
    LET             shift and go to state 525
    FOR             shift and go to state 102

    expresion                      shift and go to state 510
    statement                      shift and go to state 508
    instruccion_no_pt              shift and go to state 509
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 579
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    if                             shift and go to state 511
    match                          shift and go to state 512
    print                          shift and go to state 513
    while                          shift and go to state 514
    loop                           shift and go to state 515
    break                          shift and go to state 516
    continue                       shift and go to state 517
    return                         shift and go to state 518
    mod_struct                     shift and go to state 520
    asignacion                     shift and go to state 521
    for                            shift and go to state 522
    acceso_struct                  shift and go to state 351
    acceso_mod                     shift and go to state 115

state 565

    (97) default -> GUION_B IGUAL MAYOR instruccion_no_pt COMA .

    LLV_D           reduce using rule 97 (default -> GUION_B IGUAL MAYOR instruccion_no_pt COMA .)


state 566

    (106) default_exp -> GUION_B IGUAL MAYOR expresion COMA .

    LLV_D           reduce using rule 106 (default_exp -> GUION_B IGUAL MAYOR expresion COMA .)


state 567

    (116) asignacion -> LET ID IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 316
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 568

    (118) asignacion -> LET ID D_PUNTO . tipo IGUAL expresion
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    tipo                           shift and go to state 310
    acceso_mod                     shift and go to state 154

state 569

    (117) asignacion -> LET MUT ID . IGUAL expresion
    (119) asignacion -> LET MUT ID . D_PUNTO tipo IGUAL expresion

    IGUAL           shift and go to state 580
    D_PUNTO         shift and go to state 581


state 570

    (214) expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .

    PUNTO           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAS             reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    error           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COR_D           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    COR_I           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    VEC_L           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)
    VEC_U           reduce using rule 214 (expresion -> INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D .)


state 571

    (215) expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .

    PUNTO           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAS             reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOS           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MULTI           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DIV             reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MODULO          reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MAYOR_I         reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MENOR_I         reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    D_IGUAL         reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NO_IGUAL        reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    OR              reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AND             reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    AS              reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_I           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    error           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PUNTOCOMA       reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COMA            reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_D           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COR_D           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IGUAL           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LLV_D           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    BARRA           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    GUION_B         reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ID              reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    INT             reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FLOAT           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    NOT             reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    PAR_I           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    ENTERO          reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    DECIMAL         reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    TRUE            reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    FALSE           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CHAR_S          reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    CADENA          reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    IF              reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    MATCH           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    LOOP            reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    COR_I           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    VEC_L           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)
    VEC_U           reduce using rule 215 (expresion -> FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D .)


state 572

    (194) vec_new -> VEC_U D_PUNTO . D_PUNTO NEW PAR_I PAR_D
    (195) vec_capacity -> VEC_U D_PUNTO . D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D

    D_PUNTO         shift and go to state 582


state 573

    (153) lista_atributo -> lista_atributo COMA ID D_PUNTO expresion .
    (208) expresion -> expresion . MAS expresion
    (209) expresion -> expresion . MENOS expresion
    (210) expresion -> expresion . MULTI expresion
    (211) expresion -> expresion . DIV expresion
    (212) expresion -> expresion . MODULO expresion
    (216) expresion -> expresion . PUNTO ABS PAR_I PAR_D
    (217) expresion -> expresion . PUNTO SQRT PAR_I PAR_D
    (218) expresion -> expresion . MAYOR expresion
    (219) expresion -> expresion . MENOR expresion
    (220) expresion -> expresion . MAYOR_I expresion
    (221) expresion -> expresion . MENOR_I expresion
    (222) expresion -> expresion . D_IGUAL expresion
    (223) expresion -> expresion . NO_IGUAL expresion
    (224) expresion -> expresion . OR expresion
    (225) expresion -> expresion . AND expresion
    (234) expresion -> expresion . PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> expresion . PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> expresion . AS tipo
    (206) chars -> expresion . PUNTO CHARS PAR_I PAR_D
    (201) vec_contains -> expresion . PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (203) length -> expresion . PUNTO LEN PAR_I PAR_D
    (205) clone -> expresion . PUNTO CLONE PAR_I PAR_D
    (158) acceso_struct -> expresion . PUNTO expresion

    LLV_D           reduce using rule 153 (lista_atributo -> lista_atributo COMA ID D_PUNTO expresion .)
    COMA            reduce using rule 153 (lista_atributo -> lista_atributo COMA ID D_PUNTO expresion .)
    MAS             shift and go to state 185
    MENOS           shift and go to state 186
    MULTI           shift and go to state 187
    DIV             shift and go to state 188
    MODULO          shift and go to state 189
    PUNTO           shift and go to state 283
    MAYOR           shift and go to state 190
    MENOR           shift and go to state 191
    MAYOR_I         shift and go to state 192
    MENOR_I         shift and go to state 193
    D_IGUAL         shift and go to state 194
    NO_IGUAL        shift and go to state 195
    OR              shift and go to state 196
    AND             shift and go to state 197
    AS              shift and go to state 198


state 574

    (175) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato .

    PUNTOCOMA       reduce using rule 175 (declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_dato .)


state 575

    (177) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new .

    PUNTOCOMA       reduce using rule 177 (declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_new .)


state 576

    (179) declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity .

    PUNTOCOMA       reduce using rule 179 (declaracion_vector -> LET MUT ID D_PUNTO VEC_U MENOR v_tipo MAYOR IGUAL vec_capacity .)


state 577

    (87) exp_else -> ELSE LLV_I instrucciones expresion LLV_D .

    PUNTO           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MAS             reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MENOS           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MULTI           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    DIV             reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MODULO          reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MAYOR           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MENOR           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MAYOR_I         reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MENOR_I         reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    D_IGUAL         reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    NO_IGUAL        reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    OR              reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    AND             reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    AS              reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    LLV_I           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    error           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    PUNTOCOMA       reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    COMA            reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    PAR_D           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    COR_D           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    IGUAL           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    LLV_D           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    BARRA           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    GUION_B         reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    ID              reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    INT             reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    FLOAT           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    NOT             reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    PAR_I           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    ENTERO          reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    DECIMAL         reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    TRUE            reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    FALSE           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    CHAR_S          reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    CADENA          reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    IF              reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    MATCH           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    LOOP            reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    COR_I           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    VEC_L           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)
    VEC_U           reduce using rule 87 (exp_else -> ELSE LLV_I instrucciones expresion LLV_D .)


state 578

    (207) expresion -> ID .
    (71) llamada -> ID . PAR_I PAR_D
    (72) llamada -> ID . PAR_I exp_list_llamada PAR_D
    (167) acceso_arreglo -> ID . dimensiones
    (200) vec_remove -> ID . PUNTO REMOVE PAR_I expresion PAR_D
    (202) vec_get_capacity -> ID . PUNTO CAPACITY PAR_I PAR_D
    (204) length -> ID . PUNTO LEN PAR_I PAR_D
    (120) asignacion -> ID . IGUAL expresion
    (54) acceso_mod -> ID .
    (168) dimensiones -> . dimensiones dimension
    (169) dimensiones -> . dimension
    (170) dimension -> . COR_I expresion COR_D

  ! shift/reduce conflict for PAR_I resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for COR_I resolved as shift
    COMA            reduce using rule 207 (expresion -> ID .)
    MAS             reduce using rule 207 (expresion -> ID .)
    MENOS           reduce using rule 207 (expresion -> ID .)
    MULTI           reduce using rule 207 (expresion -> ID .)
    DIV             reduce using rule 207 (expresion -> ID .)
    MODULO          reduce using rule 207 (expresion -> ID .)
    MAYOR           reduce using rule 207 (expresion -> ID .)
    MENOR           reduce using rule 207 (expresion -> ID .)
    MAYOR_I         reduce using rule 207 (expresion -> ID .)
    MENOR_I         reduce using rule 207 (expresion -> ID .)
    D_IGUAL         reduce using rule 207 (expresion -> ID .)
    NO_IGUAL        reduce using rule 207 (expresion -> ID .)
    OR              reduce using rule 207 (expresion -> ID .)
    AND             reduce using rule 207 (expresion -> ID .)
    AS              reduce using rule 207 (expresion -> ID .)
    LLV_D           reduce using rule 207 (expresion -> ID .)
    GUION_B         reduce using rule 207 (expresion -> ID .)
    ID              reduce using rule 207 (expresion -> ID .)
    INT             reduce using rule 207 (expresion -> ID .)
    FLOAT           reduce using rule 207 (expresion -> ID .)
    NOT             reduce using rule 207 (expresion -> ID .)
    ENTERO          reduce using rule 207 (expresion -> ID .)
    DECIMAL         reduce using rule 207 (expresion -> ID .)
    TRUE            reduce using rule 207 (expresion -> ID .)
    FALSE           reduce using rule 207 (expresion -> ID .)
    CHAR_S          reduce using rule 207 (expresion -> ID .)
    CADENA          reduce using rule 207 (expresion -> ID .)
    IF              reduce using rule 207 (expresion -> ID .)
    MATCH           reduce using rule 207 (expresion -> ID .)
    LOOP            reduce using rule 207 (expresion -> ID .)
    VEC_L           reduce using rule 207 (expresion -> ID .)
    VEC_U           reduce using rule 207 (expresion -> ID .)
    PAR_I           shift and go to state 179
    PUNTO           shift and go to state 285
    IGUAL           shift and go to state 178
    D_PUNTO         reduce using rule 54 (acceso_mod -> ID .)
    COR_I           shift and go to state 183

  ! PUNTO           [ reduce using rule 207 (expresion -> ID .) ]
  ! PAR_I           [ reduce using rule 207 (expresion -> ID .) ]
  ! COR_I           [ reduce using rule 207 (expresion -> ID .) ]

    dimensiones                    shift and go to state 284
    dimension                      shift and go to state 182

state 579

    (240) expresion -> llamada .
    (33) instruccion_no_pt -> llamada .

  ! reduce/reduce conflict for COMA resolved using rule 33 (instruccion_no_pt -> llamada .)
    MAS             reduce using rule 240 (expresion -> llamada .)
    MENOS           reduce using rule 240 (expresion -> llamada .)
    MULTI           reduce using rule 240 (expresion -> llamada .)
    DIV             reduce using rule 240 (expresion -> llamada .)
    MODULO          reduce using rule 240 (expresion -> llamada .)
    PUNTO           reduce using rule 240 (expresion -> llamada .)
    MAYOR           reduce using rule 240 (expresion -> llamada .)
    MENOR           reduce using rule 240 (expresion -> llamada .)
    MAYOR_I         reduce using rule 240 (expresion -> llamada .)
    MENOR_I         reduce using rule 240 (expresion -> llamada .)
    D_IGUAL         reduce using rule 240 (expresion -> llamada .)
    NO_IGUAL        reduce using rule 240 (expresion -> llamada .)
    OR              reduce using rule 240 (expresion -> llamada .)
    AND             reduce using rule 240 (expresion -> llamada .)
    AS              reduce using rule 240 (expresion -> llamada .)
    LLV_D           reduce using rule 240 (expresion -> llamada .)
    GUION_B         reduce using rule 240 (expresion -> llamada .)
    ID              reduce using rule 240 (expresion -> llamada .)
    INT             reduce using rule 240 (expresion -> llamada .)
    FLOAT           reduce using rule 240 (expresion -> llamada .)
    NOT             reduce using rule 240 (expresion -> llamada .)
    PAR_I           reduce using rule 240 (expresion -> llamada .)
    ENTERO          reduce using rule 240 (expresion -> llamada .)
    DECIMAL         reduce using rule 240 (expresion -> llamada .)
    TRUE            reduce using rule 240 (expresion -> llamada .)
    FALSE           reduce using rule 240 (expresion -> llamada .)
    CHAR_S          reduce using rule 240 (expresion -> llamada .)
    CADENA          reduce using rule 240 (expresion -> llamada .)
    IF              reduce using rule 240 (expresion -> llamada .)
    MATCH           reduce using rule 240 (expresion -> llamada .)
    LOOP            reduce using rule 240 (expresion -> llamada .)
    COR_I           reduce using rule 240 (expresion -> llamada .)
    VEC_L           reduce using rule 240 (expresion -> llamada .)
    VEC_U           reduce using rule 240 (expresion -> llamada .)
    COMA            reduce using rule 33 (instruccion_no_pt -> llamada .)

  ! COMA            [ reduce using rule 240 (expresion -> llamada .) ]


state 580

    (117) asignacion -> LET MUT ID IGUAL . expresion
    (207) expresion -> . ID
    (208) expresion -> . expresion MAS expresion
    (209) expresion -> . expresion MENOS expresion
    (210) expresion -> . expresion MULTI expresion
    (211) expresion -> . expresion DIV expresion
    (212) expresion -> . expresion MODULO expresion
    (213) expresion -> . MENOS expresion
    (214) expresion -> . INT D_PUNTO D_PUNTO POW_INT PAR_I expresion COMA expresion PAR_D
    (215) expresion -> . FLOAT D_PUNTO D_PUNTO POW_FLOAT PAR_I expresion COMA expresion PAR_D
    (216) expresion -> . expresion PUNTO ABS PAR_I PAR_D
    (217) expresion -> . expresion PUNTO SQRT PAR_I PAR_D
    (218) expresion -> . expresion MAYOR expresion
    (219) expresion -> . expresion MENOR expresion
    (220) expresion -> . expresion MAYOR_I expresion
    (221) expresion -> . expresion MENOR_I expresion
    (222) expresion -> . expresion D_IGUAL expresion
    (223) expresion -> . expresion NO_IGUAL expresion
    (224) expresion -> . expresion OR expresion
    (225) expresion -> . expresion AND expresion
    (226) expresion -> . NOT expresion
    (227) expresion -> . PAR_I expresion PAR_D
    (228) expresion -> . ENTERO
    (229) expresion -> . DECIMAL
    (230) expresion -> . TRUE
    (231) expresion -> . FALSE
    (232) expresion -> . CHAR_S
    (233) expresion -> . CADENA
    (234) expresion -> . expresion PUNTO TO_STRING PAR_I PAR_D
    (235) expresion -> . expresion PUNTO TO_OWNED PAR_I PAR_D
    (236) expresion -> . expresion AS tipo
    (237) expresion -> . exp_if
    (238) expresion -> . match_exp
    (239) expresion -> . loop_exp
    (240) expresion -> . llamada
    (241) expresion -> . acceso_struct_exp
    (242) expresion -> . acceso_arreglo
    (243) expresion -> . chars
    (244) expresion -> . datos_arreglo
    (245) expresion -> . vec_dato
    (246) expresion -> . vec_remove
    (247) expresion -> . vec_contains
    (248) expresion -> . vec_get_capacity
    (249) expresion -> . length
    (250) expresion -> . clone
    (251) expresion -> . vec_capacity
    (252) expresion -> . vec_new
    (253) expresion -> . acceso_mod_exp
    (85) exp_if -> . IF expresion LLV_I instrucciones expresion LLV_D exp_else
    (86) exp_if -> . IF expresion LLV_I expresion LLV_D exp_else
    (100) match_exp -> . MATCH expresion LLV_I case_list_exp LLV_D
    (101) match_exp -> . MATCH expresion LLV_I case_list_exp default_exp LLV_D
    (112) loop_exp -> . LOOP statement
    (71) llamada -> . ID PAR_I PAR_D
    (72) llamada -> . ID PAR_I exp_list_llamada PAR_D
    (156) acceso_struct_exp -> . acceso_struct
    (167) acceso_arreglo -> . ID dimensiones
    (206) chars -> . expresion PUNTO CHARS PAR_I PAR_D
    (165) datos_arreglo -> . COR_I exp_list COR_D
    (166) datos_arreglo -> . COR_I expresion PUNTOCOMA expresion COR_D
    (196) vec_dato -> . VEC_L NOT COR_I exp_list COR_D
    (197) vec_dato -> . VEC_L NOT COR_I expresion PUNTOCOMA expresion COR_D
    (200) vec_remove -> . ID PUNTO REMOVE PAR_I expresion PAR_D
    (201) vec_contains -> . expresion PUNTO CONTAINS PAR_I AMP expresion PAR_D
    (202) vec_get_capacity -> . ID PUNTO CAPACITY PAR_I PAR_D
    (203) length -> . expresion PUNTO LEN PAR_I PAR_D
    (204) length -> . ID PUNTO LEN PAR_I PAR_D
    (205) clone -> . expresion PUNTO CLONE PAR_I PAR_D
    (195) vec_capacity -> . VEC_U D_PUNTO D_PUNTO WITH_CAPACITY PAR_I expresion PAR_D
    (194) vec_new -> . VEC_U D_PUNTO D_PUNTO NEW PAR_I PAR_D
    (52) acceso_mod_exp -> . acceso_mod D_PUNTO D_PUNTO llamada
    (157) acceso_struct -> . acceso_struct PUNTO expresion
    (158) acceso_struct -> . expresion PUNTO expresion
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    ID              shift and go to state 201
    MENOS           shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    NOT             shift and go to state 107
    PAR_I           shift and go to state 108
    ENTERO          shift and go to state 119
    DECIMAL         shift and go to state 120
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122
    CHAR_S          shift and go to state 123
    CADENA          shift and go to state 109
    IF              shift and go to state 199
    MATCH           shift and go to state 205
    LOOP            shift and go to state 206
    COR_I           shift and go to state 134
    VEC_L           shift and go to state 135
    VEC_U           shift and go to state 112

    expresion                      shift and go to state 387
    exp_if                         shift and go to state 124
    match_exp                      shift and go to state 125
    loop_exp                       shift and go to state 126
    llamada                        shift and go to state 202
    acceso_struct_exp              shift and go to state 127
    acceso_arreglo                 shift and go to state 128
    chars                          shift and go to state 129
    datos_arreglo                  shift and go to state 96
    vec_dato                       shift and go to state 111
    vec_remove                     shift and go to state 203
    vec_contains                   shift and go to state 130
    vec_get_capacity               shift and go to state 131
    length                         shift and go to state 132
    clone                          shift and go to state 133
    vec_capacity                   shift and go to state 114
    vec_new                        shift and go to state 113
    acceso_mod_exp                 shift and go to state 204
    acceso_struct                  shift and go to state 207
    acceso_mod                     shift and go to state 115

state 581

    (119) asignacion -> LET MUT ID D_PUNTO . tipo IGUAL expresion
    (121) tipo -> . INT
    (122) tipo -> . FLOAT
    (123) tipo -> . BOOL
    (124) tipo -> . AMP STR
    (125) tipo -> . STRING
    (126) tipo -> . CHAR
    (127) tipo -> . VOID
    (128) tipo -> . acceso_mod
    (129) tipo -> . USIZE
    (53) acceso_mod -> . acceso_mod D_PUNTO D_PUNTO ID
    (54) acceso_mod -> . ID

    INT             shift and go to state 147
    FLOAT           shift and go to state 148
    BOOL            shift and go to state 149
    AMP             shift and go to state 150
    STRING          shift and go to state 151
    CHAR            shift and go to state 152
    VOID            shift and go to state 153
    USIZE           shift and go to state 155
    ID              shift and go to state 156

    tipo                           shift and go to state 383
    acceso_mod                     shift and go to state 154

state 582

    (194) vec_new -> VEC_U D_PUNTO D_PUNTO . NEW PAR_I PAR_D
    (195) vec_capacity -> VEC_U D_PUNTO D_PUNTO . WITH_CAPACITY PAR_I expresion PAR_D

    NEW             shift and go to state 364
    WITH_CAPACITY   shift and go to state 363

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 95 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 110 resolved as shift
WARNING: shift/reduce conflict for PAR_I in state 201 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 201 resolved as shift
WARNING: shift/reduce conflict for COR_I in state 201 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 207 resolved as shift
WARNING: shift/reduce conflict for MAS in state 215 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 215 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 215 resolved as shift
WARNING: shift/reduce conflict for DIV in state 215 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 215 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 215 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 215 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 215 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 215 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 215 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 215 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 215 resolved as shift
WARNING: shift/reduce conflict for OR in state 215 resolved as shift
WARNING: shift/reduce conflict for AND in state 215 resolved as shift
WARNING: shift/reduce conflict for AS in state 215 resolved as shift
WARNING: shift/reduce conflict for MAS in state 275 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 275 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 275 resolved as shift
WARNING: shift/reduce conflict for DIV in state 275 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 275 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 275 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 275 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 275 resolved as shift
WARNING: shift/reduce conflict for MAYOR_I in state 275 resolved as shift
WARNING: shift/reduce conflict for MENOR_I in state 275 resolved as shift
WARNING: shift/reduce conflict for D_IGUAL in state 275 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 275 resolved as shift
WARNING: shift/reduce conflict for OR in state 275 resolved as shift
WARNING: shift/reduce conflict for AND in state 275 resolved as shift
WARNING: shift/reduce conflict for AS in state 275 resolved as shift
WARNING: shift/reduce conflict for COR_I in state 284 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 313 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 345 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 351 resolved as shift
WARNING: shift/reduce conflict for PAR_I in state 523 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 523 resolved as shift
WARNING: shift/reduce conflict for COR_I in state 523 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 524 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 546 resolved as shift
WARNING: shift/reduce conflict for PAR_I in state 578 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 578 resolved as shift
WARNING: shift/reduce conflict for COR_I in state 578 resolved as shift
WARNING: reduce/reduce conflict in state 210 resolved using rule (loop -> LOOP statement)
WARNING: rejected rule (loop_exp -> LOOP statement) in state 210
WARNING: reduce/reduce conflict in state 314 resolved using rule (declaracion_arreglo -> LET ID IGUAL datos_arreglo)
WARNING: rejected rule (expresion -> datos_arreglo) in state 314
WARNING: reduce/reduce conflict in state 317 resolved using rule (declaracion_vector -> LET ID IGUAL vec_dato)
WARNING: rejected rule (expresion -> vec_dato) in state 317
WARNING: reduce/reduce conflict in state 385 resolved using rule (declaracion_arreglo -> LET MUT ID IGUAL datos_arreglo)
WARNING: rejected rule (expresion -> datos_arreglo) in state 385
WARNING: reduce/reduce conflict in state 388 resolved using rule (declaracion_vector -> LET MUT ID IGUAL vec_dato)
WARNING: rejected rule (expresion -> vec_dato) in state 388
WARNING: reduce/reduce conflict in state 414 resolved using rule (loop -> LOOP statement)
WARNING: rejected rule (loop_exp -> LOOP statement) in state 414
WARNING: reduce/reduce conflict in state 519 resolved using rule (instruccion_no_pt -> llamada)
WARNING: rejected rule (expresion -> llamada) in state 519
WARNING: reduce/reduce conflict in state 579 resolved using rule (instruccion_no_pt -> llamada)
WARNING: rejected rule (expresion -> llamada) in state 579
